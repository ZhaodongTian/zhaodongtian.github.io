### YamlMime:ManagedReference
items:
- uid: CoreWCF.Configuration.EndpointAddressElementBase
  commentId: T:CoreWCF.Configuration.EndpointAddressElementBase
  id: EndpointAddressElementBase
  parent: CoreWCF.Configuration
  children:
  - CoreWCF.Configuration.EndpointAddressElementBase.#ctor
  - CoreWCF.Configuration.EndpointAddressElementBase.Address
  - CoreWCF.Configuration.EndpointAddressElementBase.Copy(CoreWCF.Configuration.EndpointAddressElementBase)
  - CoreWCF.Configuration.EndpointAddressElementBase.Headers
  - CoreWCF.Configuration.EndpointAddressElementBase.InitializeFrom(CoreWCF.EndpointAddress)
  langs:
  - csharp
  - vb
  name: EndpointAddressElementBase
  nameWithType: EndpointAddressElementBase
  fullName: CoreWCF.Configuration.EndpointAddressElementBase
  type: Class
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  summary: An XML element that contains a unique network address that a client uses to communicate with a service endpoint.
  remarks: To be added.
  syntax:
    content: 'public class EndpointAddressElementBase : ServiceModelConfigurationElement'
    content.vb: >-
      Public Class EndpointAddressElementBase
          Inherits ServiceModelConfigurationElement
  inheritance:
  - System.Object
  - CoreWCF.Configuration.ServiceModelConfigurationElement
  derivedClasses:
  - CoreWCF.Configuration.IssuedTokenParametersEndpointAddressElement
  inheritedMembers:
  - CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,{T})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.Configuration.EndpointAddressElementBase.#ctor
  commentId: M:CoreWCF.Configuration.EndpointAddressElementBase.#ctor
  id: '#ctor'
  parent: CoreWCF.Configuration.EndpointAddressElementBase
  langs:
  - csharp
  - vb
  name: EndpointAddressElementBase()
  nameWithType: EndpointAddressElementBase.EndpointAddressElementBase()
  fullName: CoreWCF.Configuration.EndpointAddressElementBase.EndpointAddressElementBase()
  type: Constructor
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: protected EndpointAddressElementBase()
    content.vb: Protected Sub New
  overload: CoreWCF.Configuration.EndpointAddressElementBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CoreWCF.Configuration.EndpointAddressElementBase.Copy(CoreWCF.Configuration.EndpointAddressElementBase)
  commentId: M:CoreWCF.Configuration.EndpointAddressElementBase.Copy(CoreWCF.Configuration.EndpointAddressElementBase)
  id: Copy(CoreWCF.Configuration.EndpointAddressElementBase)
  parent: CoreWCF.Configuration.EndpointAddressElementBase
  langs:
  - csharp
  - vb
  name: Copy(EndpointAddressElementBase)
  nameWithType: EndpointAddressElementBase.Copy(EndpointAddressElementBase)
  fullName: CoreWCF.Configuration.EndpointAddressElementBase.Copy(CoreWCF.Configuration.EndpointAddressElementBase)
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: protected void Copy(EndpointAddressElementBase source)
    parameters:
    - id: source
      type: CoreWCF.Configuration.EndpointAddressElementBase
    content.vb: Protected Sub Copy(source As EndpointAddressElementBase)
  overload: CoreWCF.Configuration.EndpointAddressElementBase.Copy*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CoreWCF.Configuration.EndpointAddressElementBase.InitializeFrom(CoreWCF.EndpointAddress)
  commentId: M:CoreWCF.Configuration.EndpointAddressElementBase.InitializeFrom(CoreWCF.EndpointAddress)
  id: InitializeFrom(CoreWCF.EndpointAddress)
  parent: CoreWCF.Configuration.EndpointAddressElementBase
  langs:
  - csharp
  - vb
  name: InitializeFrom(EndpointAddress)
  nameWithType: EndpointAddressElementBase.InitializeFrom(EndpointAddress)
  fullName: CoreWCF.Configuration.EndpointAddressElementBase.InitializeFrom(CoreWCF.EndpointAddress)
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public void InitializeFrom(EndpointAddress endpointAddress)
    parameters:
    - id: endpointAddress
      type: CoreWCF.EndpointAddress
    content.vb: Public Sub InitializeFrom(endpointAddress As EndpointAddress)
  overload: CoreWCF.Configuration.EndpointAddressElementBase.InitializeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.EndpointAddressElementBase.Address
  commentId: P:CoreWCF.Configuration.EndpointAddressElementBase.Address
  id: Address
  parent: CoreWCF.Configuration.EndpointAddressElementBase
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: EndpointAddressElementBase.Address
  fullName: CoreWCF.Configuration.EndpointAddressElementBase.Address
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public Uri Address { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property Address As Uri
  overload: CoreWCF.Configuration.EndpointAddressElementBase.Address*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.EndpointAddressElementBase.Headers
  commentId: P:CoreWCF.Configuration.EndpointAddressElementBase.Headers
  id: Headers
  parent: CoreWCF.Configuration.EndpointAddressElementBase
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: EndpointAddressElementBase.Headers
  fullName: CoreWCF.Configuration.EndpointAddressElementBase.Headers
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public AddressHeaderCollectionElement Headers { get; }
    parameters: []
    return:
      type: CoreWCF.Configuration.AddressHeaderCollectionElement
    content.vb: Public ReadOnly Property Headers As AddressHeaderCollectionElement
  overload: CoreWCF.Configuration.EndpointAddressElementBase.Headers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CoreWCF.Configuration
  commentId: N:CoreWCF.Configuration
  isExternal: true
  name: CoreWCF.Configuration
  nameWithType: CoreWCF.Configuration
  fullName: CoreWCF.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CoreWCF.Configuration.ServiceModelConfigurationElement
  commentId: T:CoreWCF.Configuration.ServiceModelConfigurationElement
  parent: CoreWCF.Configuration
  isExternal: true
  name: ServiceModelConfigurationElement
  nameWithType: ServiceModelConfigurationElement
  fullName: CoreWCF.Configuration.ServiceModelConfigurationElement
- uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,{T})
  commentId: M:CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  parent: CoreWCF.Configuration.ServiceModelConfigurationElement
  definition: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  name: SetPropertyValueIfNotDefaultValue<T>(String, T)
  nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)
  fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(System.String, T)
  nameWithType.vb: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  fullName.vb: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(System.String, T)
  name.vb: SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  spec.csharp:
  - uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue<T>
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue(Of T)
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  commentId: M:CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  isExternal: true
  name: SetPropertyValueIfNotDefaultValue<T>(String, T)
  nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)
  fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(System.String, T)
  nameWithType.vb: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  fullName.vb: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(System.String, T)
  name.vb: SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  spec.csharp:
  - uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue<T>
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue(Of T)
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Configuration.EndpointAddressElementBase.#ctor*
  commentId: Overload:CoreWCF.Configuration.EndpointAddressElementBase.#ctor
  isExternal: true
  name: EndpointAddressElementBase
  nameWithType: EndpointAddressElementBase.EndpointAddressElementBase
  fullName: CoreWCF.Configuration.EndpointAddressElementBase.EndpointAddressElementBase
- uid: CoreWCF.Configuration.EndpointAddressElementBase.Copy*
  commentId: Overload:CoreWCF.Configuration.EndpointAddressElementBase.Copy
  isExternal: true
  name: Copy
  nameWithType: EndpointAddressElementBase.Copy
  fullName: CoreWCF.Configuration.EndpointAddressElementBase.Copy
- uid: CoreWCF.Configuration.EndpointAddressElementBase
  commentId: T:CoreWCF.Configuration.EndpointAddressElementBase
  parent: CoreWCF.Configuration
  isExternal: true
  name: EndpointAddressElementBase
  nameWithType: EndpointAddressElementBase
  fullName: CoreWCF.Configuration.EndpointAddressElementBase
- uid: CoreWCF.Configuration.EndpointAddressElementBase.InitializeFrom*
  commentId: Overload:CoreWCF.Configuration.EndpointAddressElementBase.InitializeFrom
  isExternal: true
  name: InitializeFrom
  nameWithType: EndpointAddressElementBase.InitializeFrom
  fullName: CoreWCF.Configuration.EndpointAddressElementBase.InitializeFrom
- uid: CoreWCF.EndpointAddress
  commentId: T:CoreWCF.EndpointAddress
  parent: CoreWCF
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: CoreWCF.EndpointAddress
- uid: CoreWCF
  commentId: N:CoreWCF
  isExternal: true
  name: CoreWCF
  nameWithType: CoreWCF
  fullName: CoreWCF
- uid: CoreWCF.Configuration.EndpointAddressElementBase.Address*
  commentId: Overload:CoreWCF.Configuration.EndpointAddressElementBase.Address
  isExternal: true
  name: Address
  nameWithType: EndpointAddressElementBase.Address
  fullName: CoreWCF.Configuration.EndpointAddressElementBase.Address
- uid: System.Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: CoreWCF.Configuration.EndpointAddressElementBase.Headers*
  commentId: Overload:CoreWCF.Configuration.EndpointAddressElementBase.Headers
  isExternal: true
  name: Headers
  nameWithType: EndpointAddressElementBase.Headers
  fullName: CoreWCF.Configuration.EndpointAddressElementBase.Headers
- uid: CoreWCF.Configuration.AddressHeaderCollectionElement
  commentId: T:CoreWCF.Configuration.AddressHeaderCollectionElement
  parent: CoreWCF.Configuration
  isExternal: true
  name: AddressHeaderCollectionElement
  nameWithType: AddressHeaderCollectionElement
  fullName: CoreWCF.Configuration.AddressHeaderCollectionElement
