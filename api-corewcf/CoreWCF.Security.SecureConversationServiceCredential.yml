### YamlMime:ManagedReference
items:
- uid: CoreWCF.Security.SecureConversationServiceCredential
  commentId: T:CoreWCF.Security.SecureConversationServiceCredential
  id: SecureConversationServiceCredential
  parent: CoreWCF.Security
  children:
  - CoreWCF.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  - CoreWCF.Security.SecureConversationServiceCredential.SecurityStateEncoder
  langs:
  - csharp
  - vb
  name: SecureConversationServiceCredential
  nameWithType: SecureConversationServiceCredential
  fullName: CoreWCF.Security.SecureConversationServiceCredential
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  summary: Provides credential settings for a secure conversation service.
  remarks: "Secure conversations involve the exchange of multiple messages and use a Security Context Token (SCT) to ensure security. The SCT is shared among the communicating parties for the lifetime of a communications session. A service can issue two different kinds of SCTs:  \n\n-   The first is a session-based SCT that contains a unique id. Messages carry only the id, and the service maintains a state-mapping cache that maps between the SCT ids and contents (such as claims, security keys, and so on). A well-behaved client must send an SCT cancellation to help the service optimize the cache resources. If you instantiate this class by calling &lt;xref:CoreWCF.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A> with the `requireCancellation` parameter equal to `true`, the SCT is issued in this manner.  \n\n-   The second is a self-contained SCT that resides in a cookie on the client. This SCT contains the entire state information, so requires neither state management from the service nor SCT cancellation from the client. This is sometimes called a &quot;cookie-mode&quot; SCT. Because the SCT contains the entire state information, its size is larger than in the session-based case. With session-based SCTs, the service stores much of the state information. However, because it is self-contained, it can be used across service lifetime and persists across service shutdown and restart.  \n\n"
  syntax:
    content: 'public sealed class SecureConversationServiceCredential : Object'
    content.vb: >-
      Public NotInheritable Class SecureConversationServiceCredential
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: CoreWCF.Security.SecureConversationServiceCredential.SecurityStateEncoder
  commentId: P:CoreWCF.Security.SecureConversationServiceCredential.SecurityStateEncoder
  id: SecurityStateEncoder
  parent: CoreWCF.Security.SecureConversationServiceCredential
  langs:
  - csharp
  - vb
  name: SecurityStateEncoder
  nameWithType: SecureConversationServiceCredential.SecurityStateEncoder
  fullName: CoreWCF.Security.SecureConversationServiceCredential.SecurityStateEncoder
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public SecurityStateEncoder SecurityStateEncoder { get; set; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityStateEncoder
    content.vb: Public Property SecurityStateEncoder As SecurityStateEncoder
  overload: CoreWCF.Security.SecureConversationServiceCredential.SecurityStateEncoder*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  commentId: P:CoreWCF.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  id: SecurityContextClaimTypes
  parent: CoreWCF.Security.SecureConversationServiceCredential
  langs:
  - csharp
  - vb
  name: SecurityContextClaimTypes
  nameWithType: SecureConversationServiceCredential.SecurityContextClaimTypes
  fullName: CoreWCF.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public Collection<Type> SecurityContextClaimTypes { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Type}
    content.vb: Public ReadOnly Property SecurityContextClaimTypes As Collection(Of Type)
  overload: CoreWCF.Security.SecureConversationServiceCredential.SecurityContextClaimTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CoreWCF.Security
  commentId: N:CoreWCF.Security
  isExternal: true
  name: CoreWCF.Security
  nameWithType: CoreWCF.Security
  fullName: CoreWCF.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Security.SecureConversationServiceCredential.SecurityStateEncoder*
  commentId: Overload:CoreWCF.Security.SecureConversationServiceCredential.SecurityStateEncoder
  isExternal: true
  name: SecurityStateEncoder
  nameWithType: SecureConversationServiceCredential.SecurityStateEncoder
  fullName: CoreWCF.Security.SecureConversationServiceCredential.SecurityStateEncoder
- uid: CoreWCF.Security.SecurityStateEncoder
  commentId: T:CoreWCF.Security.SecurityStateEncoder
  parent: CoreWCF.Security
  isExternal: true
  name: SecurityStateEncoder
  nameWithType: SecurityStateEncoder
  fullName: CoreWCF.Security.SecurityStateEncoder
- uid: CoreWCF.Security.SecureConversationServiceCredential.SecurityContextClaimTypes*
  commentId: Overload:CoreWCF.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  isExternal: true
  name: SecurityContextClaimTypes
  nameWithType: SecureConversationServiceCredential.SecurityContextClaimTypes
  fullName: CoreWCF.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
- uid: System.Collections.ObjectModel.Collection{System.Type}
  commentId: '!:System.Collections.ObjectModel.Collection{System.Type}'
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<Type>
  nameWithType: Collection<Type>
  fullName: System.Collections.ObjectModel.Collection<System.Type>
  nameWithType.vb: Collection(Of Type)
  fullName.vb: System.Collections.ObjectModel.Collection(Of System.Type)
  name.vb: Collection(Of Type)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<>
  nameWithType: Collection<>
  fullName: System.Collections.ObjectModel.Collection<>
  nameWithType.vb: Collection(Of )
  fullName.vb: System.Collections.ObjectModel.Collection(Of )
  name.vb: Collection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
