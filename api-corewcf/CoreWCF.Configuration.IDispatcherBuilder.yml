### YamlMime:ManagedReference
items:
- uid: CoreWCF.Configuration.IDispatcherBuilder
  commentId: T:CoreWCF.Configuration.IDispatcherBuilder
  id: IDispatcherBuilder
  parent: CoreWCF.Configuration
  children:
  - CoreWCF.Configuration.IDispatcherBuilder.BuildDispatchers(System.Type)
  langs:
  - csharp
  - vb
  name: IDispatcherBuilder
  nameWithType: IDispatcherBuilder
  fullName: CoreWCF.Configuration.IDispatcherBuilder
  type: Interface
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Configuration
  syntax:
    content: public interface IDispatcherBuilder
    content.vb: Public Interface IDispatcherBuilder
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: CoreWCF.Configuration.IDispatcherBuilder.BuildDispatchers(System.Type)
  commentId: M:CoreWCF.Configuration.IDispatcherBuilder.BuildDispatchers(System.Type)
  id: BuildDispatchers(System.Type)
  parent: CoreWCF.Configuration.IDispatcherBuilder
  langs:
  - csharp
  - vb
  name: BuildDispatchers(Type)
  nameWithType: IDispatcherBuilder.BuildDispatchers(Type)
  fullName: CoreWCF.Configuration.IDispatcherBuilder.BuildDispatchers(System.Type)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Configuration
  syntax:
    content: List<IServiceDispatcher> BuildDispatchers(Type serviceType)
    parameters:
    - id: serviceType
      type: System.Type
    return:
      type: System.Collections.Generic.List{CoreWCF.Configuration.IServiceDispatcher}
    content.vb: Function BuildDispatchers(serviceType As Type) As List(Of IServiceDispatcher)
  overload: CoreWCF.Configuration.IDispatcherBuilder.BuildDispatchers*
references:
- uid: CoreWCF.Configuration
  commentId: N:CoreWCF.Configuration
  isExternal: true
  name: CoreWCF.Configuration
  nameWithType: CoreWCF.Configuration
  fullName: CoreWCF.Configuration
- uid: CoreWCF.Configuration.IDispatcherBuilder.BuildDispatchers*
  commentId: Overload:CoreWCF.Configuration.IDispatcherBuilder.BuildDispatchers
  isExternal: true
  name: BuildDispatchers
  nameWithType: IDispatcherBuilder.BuildDispatchers
  fullName: CoreWCF.Configuration.IDispatcherBuilder.BuildDispatchers
- uid: System.Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.List{CoreWCF.Configuration.IServiceDispatcher}
  commentId: '!:System.Collections.Generic.List{CoreWCF.Configuration.IServiceDispatcher}'
  definition: System.Collections.Generic.List`1
  name: List<IServiceDispatcher>
  nameWithType: List<IServiceDispatcher>
  fullName: System.Collections.Generic.List<CoreWCF.Configuration.IServiceDispatcher>
  nameWithType.vb: List(Of IServiceDispatcher)
  fullName.vb: System.Collections.Generic.List(Of CoreWCF.Configuration.IServiceDispatcher)
  name.vb: List(Of IServiceDispatcher)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.Configuration.IServiceDispatcher
    name: IServiceDispatcher
    nameWithType: IServiceDispatcher
    fullName: CoreWCF.Configuration.IServiceDispatcher
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.Configuration.IServiceDispatcher
    name: IServiceDispatcher
    nameWithType: IServiceDispatcher
    fullName: CoreWCF.Configuration.IServiceDispatcher
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
