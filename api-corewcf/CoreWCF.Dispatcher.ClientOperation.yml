### YamlMime:ManagedReference
items:
- uid: CoreWCF.Dispatcher.ClientOperation
  commentId: T:CoreWCF.Dispatcher.ClientOperation
  id: ClientOperation
  parent: CoreWCF.Dispatcher
  children:
  - CoreWCF.Dispatcher.ClientOperation.#ctor(CoreWCF.Dispatcher.ClientRuntime,System.String,System.String)
  - CoreWCF.Dispatcher.ClientOperation.#ctor(CoreWCF.Dispatcher.ClientRuntime,System.String,System.String,System.String)
  - CoreWCF.Dispatcher.ClientOperation.Action
  - CoreWCF.Dispatcher.ClientOperation.BeginMethod
  - CoreWCF.Dispatcher.ClientOperation.ClientParameterInspectors
  - CoreWCF.Dispatcher.ClientOperation.DeserializeReply
  - CoreWCF.Dispatcher.ClientOperation.EndMethod
  - CoreWCF.Dispatcher.ClientOperation.Formatter
  - CoreWCF.Dispatcher.ClientOperation.IsInitiating
  - CoreWCF.Dispatcher.ClientOperation.IsOneWay
  - CoreWCF.Dispatcher.ClientOperation.IsTerminating
  - CoreWCF.Dispatcher.ClientOperation.Name
  - CoreWCF.Dispatcher.ClientOperation.Parent
  - CoreWCF.Dispatcher.ClientOperation.ReplyAction
  - CoreWCF.Dispatcher.ClientOperation.SerializeRequest
  - CoreWCF.Dispatcher.ClientOperation.SyncMethod
  - CoreWCF.Dispatcher.ClientOperation.TaskMethod
  - CoreWCF.Dispatcher.ClientOperation.TaskTResult
  langs:
  - csharp
  - vb
  name: ClientOperation
  nameWithType: ClientOperation
  fullName: CoreWCF.Dispatcher.ClientOperation
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  summary: Used to modify or extend the execution behavior of a specific contract operation in a client object or client channel object. This class cannot be inherited.
  remarks: "The &lt;xref:CoreWCF.Dispatcher.ClientOperation> class is the location for client run-time modifications and insertion point for custom extensions that are scoped to only one service operation. (To modify client run-time behavior for all messages in a contract, use the &lt;xref:CoreWCF.Dispatcher.ClientRuntime> class. )  \n\nInstall &lt;xref:CoreWCF.Dispatcher.ClientOperation> modifications using a custom client behavior object, either of type &lt;xref:CoreWCF.Description.IContractBehavior> (to find a particular operation to modify) or of type &lt;xref:CoreWCF.Description.IOperationBehavior> (which can then be applied by creating a custom attribute).  \n\nUse the &lt;xref:CoreWCF.Dispatcher.ClientRuntime.Operations%2A> property to locate the &lt;xref:CoreWCF.Dispatcher.ClientOperation> object that represents a particular service operation.  \n\nFor more information about clients and the client architecture, see [Accessing Services Using a WCF Client](/dotnet/framework/wcf/feature-details/accessing-services-using-a-client) and [WCF Client Architecture](/dotnet/framework/wcf/feature-details/client-architecture). For more information about customizing the client runtime, see [Extending Clients](/dotnet/framework/wcf/extending/extending-clients). For more information about using behaviors, see [Configuring and Extending the Runtime with Behaviors](/dotnet/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors).  \n\nThe following properties enable you to insert custom objects or modify the client execution behavior:  \n\n-   Use the &lt;xref:CoreWCF.Dispatcher.ClientOperation.Formatter%2A> property to insert a custom &lt;xref:CoreWCF.Dispatcher.IClientMessageFormatter> implementation for an operation or modify the current formatter.  \n\n-   Use the &lt;xref:CoreWCF.Dispatcher.ClientOperation.ParameterInspectors%2A> property to insert a custom &lt;xref:CoreWCF.Dispatcher.IParameterInspector> implementation or to modify the current one.  \n\n-   Use the &lt;xref:CoreWCF.Dispatcher.ClientOperation.SerializeRequest%2A> property to control who serializes an outbound message.  \n\n-   Use the &lt;xref:CoreWCF.Dispatcher.ClientOperation.DeserializeReply%2A> property to control who deserializes an inbound message.  \n\n-   Use the &lt;xref:CoreWCF.Dispatcher.ClientOperation.Action%2A> property to access the WS-Addressing action of the request message and the &lt;xref:CoreWCF.Dispatcher.ClientOperation.ReplyAction%2A> property to access the response message action.  \n\n-   Use the &lt;xref:CoreWCF.Dispatcher.ClientOperation.BeginMethod%2A> and &lt;xref:CoreWCF.Dispatcher.ClientOperation.EndMethod%2A> to specify which client methods are associated with an asynchronous operation.  \n\n-   Use the &lt;xref:CoreWCF.Dispatcher.ClientOperation.FaultContractInfos%2A> property to get a collection of specified types that can appear in SOAP faults as the detail type.  \n\n-   Use the &lt;xref:CoreWCF.Dispatcher.ClientOperation.IsInitiating%2A> and &lt;xref:CoreWCF.Dispatcher.ClientOperation.IsTerminating%2A> properties to control whether a session is initiated or is torn down, respectively, when the operation is called.  \n\n-   Use the &lt;xref:CoreWCF.Dispatcher.ClientOperation.IsOneWay%2A> property to control whether the client waits for a response before completing the invocation.  \n\n-   Use the &lt;xref:CoreWCF.Dispatcher.ClientOperation.Parent%2A> property to obtain the containing &lt;xref:CoreWCF.Dispatcher.ClientRuntime> object.  \n\n-   Use the &lt;xref:CoreWCF.Dispatcher.ClientOperation.Name%2A> property to get the name of the operation.  \n\n-   Use the &lt;xref:CoreWCF.Dispatcher.ClientOperation.SyncMethod%2A> property to control which method is mapped to the operation.  \n\n\n\n"
  syntax:
    content: 'public sealed class ClientOperation : Object'
    content.vb: >-
      Public NotInheritable Class ClientOperation
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: CoreWCF.Dispatcher.ClientOperation.#ctor(CoreWCF.Dispatcher.ClientRuntime,System.String,System.String)
  commentId: M:CoreWCF.Dispatcher.ClientOperation.#ctor(CoreWCF.Dispatcher.ClientRuntime,System.String,System.String)
  id: '#ctor(CoreWCF.Dispatcher.ClientRuntime,System.String,System.String)'
  parent: CoreWCF.Dispatcher.ClientOperation
  langs:
  - csharp
  - vb
  name: ClientOperation(ClientRuntime, String, String)
  nameWithType: ClientOperation.ClientOperation(ClientRuntime, String, String)
  fullName: CoreWCF.Dispatcher.ClientOperation.ClientOperation(CoreWCF.Dispatcher.ClientRuntime, System.String, System.String)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: public ClientOperation(ClientRuntime parent, string name, string action)
    parameters:
    - id: parent
      type: CoreWCF.Dispatcher.ClientRuntime
    - id: name
      type: System.String
    - id: action
      type: System.String
    content.vb: Public Sub New(parent As ClientRuntime, name As String, action As String)
  overload: CoreWCF.Dispatcher.ClientOperation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Dispatcher.ClientOperation.#ctor(CoreWCF.Dispatcher.ClientRuntime,System.String,System.String,System.String)
  commentId: M:CoreWCF.Dispatcher.ClientOperation.#ctor(CoreWCF.Dispatcher.ClientRuntime,System.String,System.String,System.String)
  id: '#ctor(CoreWCF.Dispatcher.ClientRuntime,System.String,System.String,System.String)'
  parent: CoreWCF.Dispatcher.ClientOperation
  langs:
  - csharp
  - vb
  name: ClientOperation(ClientRuntime, String, String, String)
  nameWithType: ClientOperation.ClientOperation(ClientRuntime, String, String, String)
  fullName: CoreWCF.Dispatcher.ClientOperation.ClientOperation(CoreWCF.Dispatcher.ClientRuntime, System.String, System.String, System.String)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: public ClientOperation(ClientRuntime parent, string name, string action, string replyAction)
    parameters:
    - id: parent
      type: CoreWCF.Dispatcher.ClientRuntime
    - id: name
      type: System.String
    - id: action
      type: System.String
    - id: replyAction
      type: System.String
    content.vb: Public Sub New(parent As ClientRuntime, name As String, action As String, replyAction As String)
  overload: CoreWCF.Dispatcher.ClientOperation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Dispatcher.ClientOperation.Action
  commentId: P:CoreWCF.Dispatcher.ClientOperation.Action
  id: Action
  parent: CoreWCF.Dispatcher.ClientOperation
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: ClientOperation.Action
  fullName: CoreWCF.Dispatcher.ClientOperation.Action
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: public string Action { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Action As String
  overload: CoreWCF.Dispatcher.ClientOperation.Action*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Dispatcher.ClientOperation.BeginMethod
  commentId: P:CoreWCF.Dispatcher.ClientOperation.BeginMethod
  id: BeginMethod
  parent: CoreWCF.Dispatcher.ClientOperation
  langs:
  - csharp
  - vb
  name: BeginMethod
  nameWithType: ClientOperation.BeginMethod
  fullName: CoreWCF.Dispatcher.ClientOperation.BeginMethod
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: public MethodInfo BeginMethod { get; set; }
    parameters: []
    return:
      type: System.Reflection.MethodInfo
    content.vb: Public Property BeginMethod As MethodInfo
  overload: CoreWCF.Dispatcher.ClientOperation.BeginMethod*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Dispatcher.ClientOperation.EndMethod
  commentId: P:CoreWCF.Dispatcher.ClientOperation.EndMethod
  id: EndMethod
  parent: CoreWCF.Dispatcher.ClientOperation
  langs:
  - csharp
  - vb
  name: EndMethod
  nameWithType: ClientOperation.EndMethod
  fullName: CoreWCF.Dispatcher.ClientOperation.EndMethod
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: public MethodInfo EndMethod { get; set; }
    parameters: []
    return:
      type: System.Reflection.MethodInfo
    content.vb: Public Property EndMethod As MethodInfo
  overload: CoreWCF.Dispatcher.ClientOperation.EndMethod*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Dispatcher.ClientOperation.SyncMethod
  commentId: P:CoreWCF.Dispatcher.ClientOperation.SyncMethod
  id: SyncMethod
  parent: CoreWCF.Dispatcher.ClientOperation
  langs:
  - csharp
  - vb
  name: SyncMethod
  nameWithType: ClientOperation.SyncMethod
  fullName: CoreWCF.Dispatcher.ClientOperation.SyncMethod
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: public MethodInfo SyncMethod { get; set; }
    parameters: []
    return:
      type: System.Reflection.MethodInfo
    content.vb: Public Property SyncMethod As MethodInfo
  overload: CoreWCF.Dispatcher.ClientOperation.SyncMethod*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Dispatcher.ClientOperation.Formatter
  commentId: P:CoreWCF.Dispatcher.ClientOperation.Formatter
  id: Formatter
  parent: CoreWCF.Dispatcher.ClientOperation
  langs:
  - csharp
  - vb
  name: Formatter
  nameWithType: ClientOperation.Formatter
  fullName: CoreWCF.Dispatcher.ClientOperation.Formatter
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: public IClientMessageFormatter Formatter { get; set; }
    parameters: []
    return:
      type: CoreWCF.Dispatcher.IClientMessageFormatter
    content.vb: Public Property Formatter As IClientMessageFormatter
  overload: CoreWCF.Dispatcher.ClientOperation.Formatter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Dispatcher.ClientOperation.IsInitiating
  commentId: P:CoreWCF.Dispatcher.ClientOperation.IsInitiating
  id: IsInitiating
  parent: CoreWCF.Dispatcher.ClientOperation
  langs:
  - csharp
  - vb
  name: IsInitiating
  nameWithType: ClientOperation.IsInitiating
  fullName: CoreWCF.Dispatcher.ClientOperation.IsInitiating
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: public bool IsInitiating { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsInitiating As Boolean
  overload: CoreWCF.Dispatcher.ClientOperation.IsInitiating*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Dispatcher.ClientOperation.IsOneWay
  commentId: P:CoreWCF.Dispatcher.ClientOperation.IsOneWay
  id: IsOneWay
  parent: CoreWCF.Dispatcher.ClientOperation
  langs:
  - csharp
  - vb
  name: IsOneWay
  nameWithType: ClientOperation.IsOneWay
  fullName: CoreWCF.Dispatcher.ClientOperation.IsOneWay
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: public bool IsOneWay { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsOneWay As Boolean
  overload: CoreWCF.Dispatcher.ClientOperation.IsOneWay*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Dispatcher.ClientOperation.IsTerminating
  commentId: P:CoreWCF.Dispatcher.ClientOperation.IsTerminating
  id: IsTerminating
  parent: CoreWCF.Dispatcher.ClientOperation
  langs:
  - csharp
  - vb
  name: IsTerminating
  nameWithType: ClientOperation.IsTerminating
  fullName: CoreWCF.Dispatcher.ClientOperation.IsTerminating
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: public bool IsTerminating { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsTerminating As Boolean
  overload: CoreWCF.Dispatcher.ClientOperation.IsTerminating*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Dispatcher.ClientOperation.Name
  commentId: P:CoreWCF.Dispatcher.ClientOperation.Name
  id: Name
  parent: CoreWCF.Dispatcher.ClientOperation
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ClientOperation.Name
  fullName: CoreWCF.Dispatcher.ClientOperation.Name
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: CoreWCF.Dispatcher.ClientOperation.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Dispatcher.ClientOperation.ClientParameterInspectors
  commentId: P:CoreWCF.Dispatcher.ClientOperation.ClientParameterInspectors
  id: ClientParameterInspectors
  parent: CoreWCF.Dispatcher.ClientOperation
  langs:
  - csharp
  - vb
  name: ClientParameterInspectors
  nameWithType: ClientOperation.ClientParameterInspectors
  fullName: CoreWCF.Dispatcher.ClientOperation.ClientParameterInspectors
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: public ICollection<IParameterInspector> ClientParameterInspectors { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{CoreWCF.Dispatcher.IParameterInspector}
    content.vb: Public ReadOnly Property ClientParameterInspectors As ICollection(Of IParameterInspector)
  overload: CoreWCF.Dispatcher.ClientOperation.ClientParameterInspectors*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Dispatcher.ClientOperation.Parent
  commentId: P:CoreWCF.Dispatcher.ClientOperation.Parent
  id: Parent
  parent: CoreWCF.Dispatcher.ClientOperation
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: ClientOperation.Parent
  fullName: CoreWCF.Dispatcher.ClientOperation.Parent
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: public ClientRuntime Parent { get; }
    parameters: []
    return:
      type: CoreWCF.Dispatcher.ClientRuntime
    content.vb: Public ReadOnly Property Parent As ClientRuntime
  overload: CoreWCF.Dispatcher.ClientOperation.Parent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Dispatcher.ClientOperation.ReplyAction
  commentId: P:CoreWCF.Dispatcher.ClientOperation.ReplyAction
  id: ReplyAction
  parent: CoreWCF.Dispatcher.ClientOperation
  langs:
  - csharp
  - vb
  name: ReplyAction
  nameWithType: ClientOperation.ReplyAction
  fullName: CoreWCF.Dispatcher.ClientOperation.ReplyAction
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: public string ReplyAction { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ReplyAction As String
  overload: CoreWCF.Dispatcher.ClientOperation.ReplyAction*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Dispatcher.ClientOperation.SerializeRequest
  commentId: P:CoreWCF.Dispatcher.ClientOperation.SerializeRequest
  id: SerializeRequest
  parent: CoreWCF.Dispatcher.ClientOperation
  langs:
  - csharp
  - vb
  name: SerializeRequest
  nameWithType: ClientOperation.SerializeRequest
  fullName: CoreWCF.Dispatcher.ClientOperation.SerializeRequest
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: public bool SerializeRequest { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SerializeRequest As Boolean
  overload: CoreWCF.Dispatcher.ClientOperation.SerializeRequest*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Dispatcher.ClientOperation.DeserializeReply
  commentId: P:CoreWCF.Dispatcher.ClientOperation.DeserializeReply
  id: DeserializeReply
  parent: CoreWCF.Dispatcher.ClientOperation
  langs:
  - csharp
  - vb
  name: DeserializeReply
  nameWithType: ClientOperation.DeserializeReply
  fullName: CoreWCF.Dispatcher.ClientOperation.DeserializeReply
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: public bool DeserializeReply { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DeserializeReply As Boolean
  overload: CoreWCF.Dispatcher.ClientOperation.DeserializeReply*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Dispatcher.ClientOperation.TaskMethod
  commentId: P:CoreWCF.Dispatcher.ClientOperation.TaskMethod
  id: TaskMethod
  parent: CoreWCF.Dispatcher.ClientOperation
  langs:
  - csharp
  - vb
  name: TaskMethod
  nameWithType: ClientOperation.TaskMethod
  fullName: CoreWCF.Dispatcher.ClientOperation.TaskMethod
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: public MethodInfo TaskMethod { get; set; }
    parameters: []
    return:
      type: System.Reflection.MethodInfo
    content.vb: Public Property TaskMethod As MethodInfo
  overload: CoreWCF.Dispatcher.ClientOperation.TaskMethod*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Dispatcher.ClientOperation.TaskTResult
  commentId: P:CoreWCF.Dispatcher.ClientOperation.TaskTResult
  id: TaskTResult
  parent: CoreWCF.Dispatcher.ClientOperation
  langs:
  - csharp
  - vb
  name: TaskTResult
  nameWithType: ClientOperation.TaskTResult
  fullName: CoreWCF.Dispatcher.ClientOperation.TaskTResult
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: public Type TaskTResult { get; set; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Property TaskTResult As Type
  overload: CoreWCF.Dispatcher.ClientOperation.TaskTResult*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: CoreWCF.Dispatcher
  commentId: N:CoreWCF.Dispatcher
  isExternal: true
  name: CoreWCF.Dispatcher
  nameWithType: CoreWCF.Dispatcher
  fullName: CoreWCF.Dispatcher
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Dispatcher.ClientOperation.#ctor*
  commentId: Overload:CoreWCF.Dispatcher.ClientOperation.#ctor
  isExternal: true
  name: ClientOperation
  nameWithType: ClientOperation.ClientOperation
  fullName: CoreWCF.Dispatcher.ClientOperation.ClientOperation
- uid: CoreWCF.Dispatcher.ClientRuntime
  commentId: T:CoreWCF.Dispatcher.ClientRuntime
  parent: CoreWCF.Dispatcher
  isExternal: true
  name: ClientRuntime
  nameWithType: ClientRuntime
  fullName: CoreWCF.Dispatcher.ClientRuntime
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CoreWCF.Dispatcher.ClientOperation.Action*
  commentId: Overload:CoreWCF.Dispatcher.ClientOperation.Action
  isExternal: true
  name: Action
  nameWithType: ClientOperation.Action
  fullName: CoreWCF.Dispatcher.ClientOperation.Action
- uid: CoreWCF.Dispatcher.ClientOperation.BeginMethod*
  commentId: Overload:CoreWCF.Dispatcher.ClientOperation.BeginMethod
  isExternal: true
  name: BeginMethod
  nameWithType: ClientOperation.BeginMethod
  fullName: CoreWCF.Dispatcher.ClientOperation.BeginMethod
- uid: System.Reflection.MethodInfo
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: CoreWCF.Dispatcher.ClientOperation.EndMethod*
  commentId: Overload:CoreWCF.Dispatcher.ClientOperation.EndMethod
  isExternal: true
  name: EndMethod
  nameWithType: ClientOperation.EndMethod
  fullName: CoreWCF.Dispatcher.ClientOperation.EndMethod
- uid: CoreWCF.Dispatcher.ClientOperation.SyncMethod*
  commentId: Overload:CoreWCF.Dispatcher.ClientOperation.SyncMethod
  isExternal: true
  name: SyncMethod
  nameWithType: ClientOperation.SyncMethod
  fullName: CoreWCF.Dispatcher.ClientOperation.SyncMethod
- uid: CoreWCF.Dispatcher.ClientOperation.Formatter*
  commentId: Overload:CoreWCF.Dispatcher.ClientOperation.Formatter
  isExternal: true
  name: Formatter
  nameWithType: ClientOperation.Formatter
  fullName: CoreWCF.Dispatcher.ClientOperation.Formatter
- uid: CoreWCF.Dispatcher.IClientMessageFormatter
  commentId: T:CoreWCF.Dispatcher.IClientMessageFormatter
  parent: CoreWCF.Dispatcher
  isExternal: true
  name: IClientMessageFormatter
  nameWithType: IClientMessageFormatter
  fullName: CoreWCF.Dispatcher.IClientMessageFormatter
- uid: CoreWCF.Dispatcher.ClientOperation.IsInitiating*
  commentId: Overload:CoreWCF.Dispatcher.ClientOperation.IsInitiating
  isExternal: true
  name: IsInitiating
  nameWithType: ClientOperation.IsInitiating
  fullName: CoreWCF.Dispatcher.ClientOperation.IsInitiating
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.Dispatcher.ClientOperation.IsOneWay*
  commentId: Overload:CoreWCF.Dispatcher.ClientOperation.IsOneWay
  isExternal: true
  name: IsOneWay
  nameWithType: ClientOperation.IsOneWay
  fullName: CoreWCF.Dispatcher.ClientOperation.IsOneWay
- uid: CoreWCF.Dispatcher.ClientOperation.IsTerminating*
  commentId: Overload:CoreWCF.Dispatcher.ClientOperation.IsTerminating
  isExternal: true
  name: IsTerminating
  nameWithType: ClientOperation.IsTerminating
  fullName: CoreWCF.Dispatcher.ClientOperation.IsTerminating
- uid: CoreWCF.Dispatcher.ClientOperation.Name*
  commentId: Overload:CoreWCF.Dispatcher.ClientOperation.Name
  isExternal: true
  name: Name
  nameWithType: ClientOperation.Name
  fullName: CoreWCF.Dispatcher.ClientOperation.Name
- uid: CoreWCF.Dispatcher.ClientOperation.ClientParameterInspectors*
  commentId: Overload:CoreWCF.Dispatcher.ClientOperation.ClientParameterInspectors
  isExternal: true
  name: ClientParameterInspectors
  nameWithType: ClientOperation.ClientParameterInspectors
  fullName: CoreWCF.Dispatcher.ClientOperation.ClientParameterInspectors
- uid: System.Collections.Generic.ICollection{CoreWCF.Dispatcher.IParameterInspector}
  commentId: '!:System.Collections.Generic.ICollection{CoreWCF.Dispatcher.IParameterInspector}'
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<IParameterInspector>
  nameWithType: ICollection<IParameterInspector>
  fullName: System.Collections.Generic.ICollection<CoreWCF.Dispatcher.IParameterInspector>
  nameWithType.vb: ICollection(Of IParameterInspector)
  fullName.vb: System.Collections.Generic.ICollection(Of CoreWCF.Dispatcher.IParameterInspector)
  name.vb: ICollection(Of IParameterInspector)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.Dispatcher.IParameterInspector
    name: IParameterInspector
    nameWithType: IParameterInspector
    fullName: CoreWCF.Dispatcher.IParameterInspector
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.Dispatcher.IParameterInspector
    name: IParameterInspector
    nameWithType: IParameterInspector
    fullName: CoreWCF.Dispatcher.IParameterInspector
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<>
  nameWithType: ICollection<>
  fullName: System.Collections.Generic.ICollection<>
  nameWithType.vb: ICollection(Of )
  fullName.vb: System.Collections.Generic.ICollection(Of )
  name.vb: ICollection(Of )
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Dispatcher.ClientOperation.Parent*
  commentId: Overload:CoreWCF.Dispatcher.ClientOperation.Parent
  isExternal: true
  name: Parent
  nameWithType: ClientOperation.Parent
  fullName: CoreWCF.Dispatcher.ClientOperation.Parent
- uid: CoreWCF.Dispatcher.ClientOperation.ReplyAction*
  commentId: Overload:CoreWCF.Dispatcher.ClientOperation.ReplyAction
  isExternal: true
  name: ReplyAction
  nameWithType: ClientOperation.ReplyAction
  fullName: CoreWCF.Dispatcher.ClientOperation.ReplyAction
- uid: CoreWCF.Dispatcher.ClientOperation.SerializeRequest*
  commentId: Overload:CoreWCF.Dispatcher.ClientOperation.SerializeRequest
  isExternal: true
  name: SerializeRequest
  nameWithType: ClientOperation.SerializeRequest
  fullName: CoreWCF.Dispatcher.ClientOperation.SerializeRequest
- uid: CoreWCF.Dispatcher.ClientOperation.DeserializeReply*
  commentId: Overload:CoreWCF.Dispatcher.ClientOperation.DeserializeReply
  isExternal: true
  name: DeserializeReply
  nameWithType: ClientOperation.DeserializeReply
  fullName: CoreWCF.Dispatcher.ClientOperation.DeserializeReply
- uid: CoreWCF.Dispatcher.ClientOperation.TaskMethod*
  commentId: Overload:CoreWCF.Dispatcher.ClientOperation.TaskMethod
  isExternal: true
  name: TaskMethod
  nameWithType: ClientOperation.TaskMethod
  fullName: CoreWCF.Dispatcher.ClientOperation.TaskMethod
- uid: CoreWCF.Dispatcher.ClientOperation.TaskTResult*
  commentId: Overload:CoreWCF.Dispatcher.ClientOperation.TaskTResult
  isExternal: true
  name: TaskTResult
  nameWithType: ClientOperation.TaskTResult
  fullName: CoreWCF.Dispatcher.ClientOperation.TaskTResult
- uid: System.Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
