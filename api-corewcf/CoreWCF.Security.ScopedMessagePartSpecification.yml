### YamlMime:ManagedReference
items:
- uid: CoreWCF.Security.ScopedMessagePartSpecification
  commentId: T:CoreWCF.Security.ScopedMessagePartSpecification
  id: ScopedMessagePartSpecification
  parent: CoreWCF.Security
  children:
  - CoreWCF.Security.ScopedMessagePartSpecification.#ctor
  - CoreWCF.Security.ScopedMessagePartSpecification.#ctor(CoreWCF.Security.ScopedMessagePartSpecification)
  - CoreWCF.Security.ScopedMessagePartSpecification.Actions
  - CoreWCF.Security.ScopedMessagePartSpecification.AddParts(CoreWCF.Security.MessagePartSpecification)
  - CoreWCF.Security.ScopedMessagePartSpecification.AddParts(CoreWCF.Security.MessagePartSpecification,System.String)
  - CoreWCF.Security.ScopedMessagePartSpecification.ChannelParts
  - CoreWCF.Security.ScopedMessagePartSpecification.IsReadOnly
  - CoreWCF.Security.ScopedMessagePartSpecification.MakeReadOnly
  - CoreWCF.Security.ScopedMessagePartSpecification.TryGetParts(System.String,CoreWCF.Security.MessagePartSpecification@)
  - CoreWCF.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.Boolean,CoreWCF.Security.MessagePartSpecification@)
  langs:
  - csharp
  - vb
  name: ScopedMessagePartSpecification
  nameWithType: ScopedMessagePartSpecification
  fullName: CoreWCF.Security.ScopedMessagePartSpecification
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  summary: Specifies which parts are included in a message.
  remarks: "This class contains the &lt;xref:CoreWCF.Security.MessagePartSpecification> instances of different messages, each distinguished by the message Action.  \n\n"
  syntax:
    content: 'public class ScopedMessagePartSpecification : Object'
    content.vb: >-
      Public Class ScopedMessagePartSpecification
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.Security.ScopedMessagePartSpecification.#ctor
  commentId: M:CoreWCF.Security.ScopedMessagePartSpecification.#ctor
  id: '#ctor'
  parent: CoreWCF.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  - vb
  name: ScopedMessagePartSpecification()
  nameWithType: ScopedMessagePartSpecification.ScopedMessagePartSpecification()
  fullName: CoreWCF.Security.ScopedMessagePartSpecification.ScopedMessagePartSpecification()
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public ScopedMessagePartSpecification()
    content.vb: Public Sub New
  overload: CoreWCF.Security.ScopedMessagePartSpecification.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.ScopedMessagePartSpecification.#ctor(CoreWCF.Security.ScopedMessagePartSpecification)
  commentId: M:CoreWCF.Security.ScopedMessagePartSpecification.#ctor(CoreWCF.Security.ScopedMessagePartSpecification)
  id: '#ctor(CoreWCF.Security.ScopedMessagePartSpecification)'
  parent: CoreWCF.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  - vb
  name: ScopedMessagePartSpecification(ScopedMessagePartSpecification)
  nameWithType: ScopedMessagePartSpecification.ScopedMessagePartSpecification(ScopedMessagePartSpecification)
  fullName: CoreWCF.Security.ScopedMessagePartSpecification.ScopedMessagePartSpecification(CoreWCF.Security.ScopedMessagePartSpecification)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public ScopedMessagePartSpecification(ScopedMessagePartSpecification other)
    parameters:
    - id: other
      type: CoreWCF.Security.ScopedMessagePartSpecification
    content.vb: Public Sub New(other As ScopedMessagePartSpecification)
  overload: CoreWCF.Security.ScopedMessagePartSpecification.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.ScopedMessagePartSpecification.AddParts(CoreWCF.Security.MessagePartSpecification)
  commentId: M:CoreWCF.Security.ScopedMessagePartSpecification.AddParts(CoreWCF.Security.MessagePartSpecification)
  id: AddParts(CoreWCF.Security.MessagePartSpecification)
  parent: CoreWCF.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  - vb
  name: AddParts(MessagePartSpecification)
  nameWithType: ScopedMessagePartSpecification.AddParts(MessagePartSpecification)
  fullName: CoreWCF.Security.ScopedMessagePartSpecification.AddParts(CoreWCF.Security.MessagePartSpecification)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public void AddParts(MessagePartSpecification parts)
    parameters:
    - id: parts
      type: CoreWCF.Security.MessagePartSpecification
    content.vb: Public Sub AddParts(parts As MessagePartSpecification)
  overload: CoreWCF.Security.ScopedMessagePartSpecification.AddParts*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.ScopedMessagePartSpecification.AddParts(CoreWCF.Security.MessagePartSpecification,System.String)
  commentId: M:CoreWCF.Security.ScopedMessagePartSpecification.AddParts(CoreWCF.Security.MessagePartSpecification,System.String)
  id: AddParts(CoreWCF.Security.MessagePartSpecification,System.String)
  parent: CoreWCF.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  - vb
  name: AddParts(MessagePartSpecification, String)
  nameWithType: ScopedMessagePartSpecification.AddParts(MessagePartSpecification, String)
  fullName: CoreWCF.Security.ScopedMessagePartSpecification.AddParts(CoreWCF.Security.MessagePartSpecification, System.String)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public void AddParts(MessagePartSpecification parts, string action)
    parameters:
    - id: parts
      type: CoreWCF.Security.MessagePartSpecification
    - id: action
      type: System.String
    content.vb: Public Sub AddParts(parts As MessagePartSpecification, action As String)
  overload: CoreWCF.Security.ScopedMessagePartSpecification.AddParts*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.Boolean,CoreWCF.Security.MessagePartSpecification@)
  commentId: M:CoreWCF.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.Boolean,CoreWCF.Security.MessagePartSpecification@)
  id: TryGetParts(System.String,System.Boolean,CoreWCF.Security.MessagePartSpecification@)
  parent: CoreWCF.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  - vb
  name: TryGetParts(String, Boolean, out MessagePartSpecification)
  nameWithType: ScopedMessagePartSpecification.TryGetParts(String, Boolean, out MessagePartSpecification)
  fullName: CoreWCF.Security.ScopedMessagePartSpecification.TryGetParts(System.String, System.Boolean, out CoreWCF.Security.MessagePartSpecification)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public bool TryGetParts(string action, bool excludeChannelScope, out MessagePartSpecification parts)
    parameters:
    - id: action
      type: System.String
    - id: excludeChannelScope
      type: System.Boolean
    - id: parts
      type: CoreWCF.Security.MessagePartSpecification
    return:
      type: System.Boolean
    content.vb: Public Function TryGetParts(action As String, excludeChannelScope As Boolean, ByRef parts As MessagePartSpecification) As Boolean
  overload: CoreWCF.Security.ScopedMessagePartSpecification.TryGetParts*
  nameWithType.vb: ScopedMessagePartSpecification.TryGetParts(String, Boolean, ByRef MessagePartSpecification)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.Security.ScopedMessagePartSpecification.TryGetParts(System.String, System.Boolean, ByRef CoreWCF.Security.MessagePartSpecification)
  name.vb: TryGetParts(String, Boolean, ByRef MessagePartSpecification)
- uid: CoreWCF.Security.ScopedMessagePartSpecification.TryGetParts(System.String,CoreWCF.Security.MessagePartSpecification@)
  commentId: M:CoreWCF.Security.ScopedMessagePartSpecification.TryGetParts(System.String,CoreWCF.Security.MessagePartSpecification@)
  id: TryGetParts(System.String,CoreWCF.Security.MessagePartSpecification@)
  parent: CoreWCF.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  - vb
  name: TryGetParts(String, out MessagePartSpecification)
  nameWithType: ScopedMessagePartSpecification.TryGetParts(String, out MessagePartSpecification)
  fullName: CoreWCF.Security.ScopedMessagePartSpecification.TryGetParts(System.String, out CoreWCF.Security.MessagePartSpecification)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public bool TryGetParts(string action, out MessagePartSpecification parts)
    parameters:
    - id: action
      type: System.String
    - id: parts
      type: CoreWCF.Security.MessagePartSpecification
    return:
      type: System.Boolean
    content.vb: Public Function TryGetParts(action As String, ByRef parts As MessagePartSpecification) As Boolean
  overload: CoreWCF.Security.ScopedMessagePartSpecification.TryGetParts*
  nameWithType.vb: ScopedMessagePartSpecification.TryGetParts(String, ByRef MessagePartSpecification)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.Security.ScopedMessagePartSpecification.TryGetParts(System.String, ByRef CoreWCF.Security.MessagePartSpecification)
  name.vb: TryGetParts(String, ByRef MessagePartSpecification)
- uid: CoreWCF.Security.ScopedMessagePartSpecification.MakeReadOnly
  commentId: M:CoreWCF.Security.ScopedMessagePartSpecification.MakeReadOnly
  id: MakeReadOnly
  parent: CoreWCF.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  - vb
  name: MakeReadOnly()
  nameWithType: ScopedMessagePartSpecification.MakeReadOnly()
  fullName: CoreWCF.Security.ScopedMessagePartSpecification.MakeReadOnly()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public void MakeReadOnly()
    content.vb: Public Sub MakeReadOnly
  overload: CoreWCF.Security.ScopedMessagePartSpecification.MakeReadOnly*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.ScopedMessagePartSpecification.Actions
  commentId: P:CoreWCF.Security.ScopedMessagePartSpecification.Actions
  id: Actions
  parent: CoreWCF.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  - vb
  name: Actions
  nameWithType: ScopedMessagePartSpecification.Actions
  fullName: CoreWCF.Security.ScopedMessagePartSpecification.Actions
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public ICollection<string> Actions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: Public ReadOnly Property Actions As ICollection(Of String)
  overload: CoreWCF.Security.ScopedMessagePartSpecification.Actions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.ScopedMessagePartSpecification.ChannelParts
  commentId: P:CoreWCF.Security.ScopedMessagePartSpecification.ChannelParts
  id: ChannelParts
  parent: CoreWCF.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  - vb
  name: ChannelParts
  nameWithType: ScopedMessagePartSpecification.ChannelParts
  fullName: CoreWCF.Security.ScopedMessagePartSpecification.ChannelParts
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public MessagePartSpecification ChannelParts { get; }
    parameters: []
    return:
      type: CoreWCF.Security.MessagePartSpecification
    content.vb: Public ReadOnly Property ChannelParts As MessagePartSpecification
  overload: CoreWCF.Security.ScopedMessagePartSpecification.ChannelParts*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.ScopedMessagePartSpecification.IsReadOnly
  commentId: P:CoreWCF.Security.ScopedMessagePartSpecification.IsReadOnly
  id: IsReadOnly
  parent: CoreWCF.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: ScopedMessagePartSpecification.IsReadOnly
  fullName: CoreWCF.Security.ScopedMessagePartSpecification.IsReadOnly
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: CoreWCF.Security.ScopedMessagePartSpecification.IsReadOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CoreWCF.Security
  commentId: N:CoreWCF.Security
  isExternal: true
  name: CoreWCF.Security
  nameWithType: CoreWCF.Security
  fullName: CoreWCF.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Security.ScopedMessagePartSpecification.#ctor*
  commentId: Overload:CoreWCF.Security.ScopedMessagePartSpecification.#ctor
  isExternal: true
  name: ScopedMessagePartSpecification
  nameWithType: ScopedMessagePartSpecification.ScopedMessagePartSpecification
  fullName: CoreWCF.Security.ScopedMessagePartSpecification.ScopedMessagePartSpecification
- uid: CoreWCF.Security.ScopedMessagePartSpecification
  commentId: T:CoreWCF.Security.ScopedMessagePartSpecification
  parent: CoreWCF.Security
  isExternal: true
  name: ScopedMessagePartSpecification
  nameWithType: ScopedMessagePartSpecification
  fullName: CoreWCF.Security.ScopedMessagePartSpecification
- uid: CoreWCF.Security.ScopedMessagePartSpecification.AddParts*
  commentId: Overload:CoreWCF.Security.ScopedMessagePartSpecification.AddParts
  isExternal: true
  name: AddParts
  nameWithType: ScopedMessagePartSpecification.AddParts
  fullName: CoreWCF.Security.ScopedMessagePartSpecification.AddParts
- uid: CoreWCF.Security.MessagePartSpecification
  commentId: T:CoreWCF.Security.MessagePartSpecification
  parent: CoreWCF.Security
  isExternal: true
  name: MessagePartSpecification
  nameWithType: MessagePartSpecification
  fullName: CoreWCF.Security.MessagePartSpecification
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CoreWCF.Security.ScopedMessagePartSpecification.TryGetParts*
  commentId: Overload:CoreWCF.Security.ScopedMessagePartSpecification.TryGetParts
  isExternal: true
  name: TryGetParts
  nameWithType: ScopedMessagePartSpecification.TryGetParts
  fullName: CoreWCF.Security.ScopedMessagePartSpecification.TryGetParts
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.Security.ScopedMessagePartSpecification.MakeReadOnly*
  commentId: Overload:CoreWCF.Security.ScopedMessagePartSpecification.MakeReadOnly
  isExternal: true
  name: MakeReadOnly
  nameWithType: ScopedMessagePartSpecification.MakeReadOnly
  fullName: CoreWCF.Security.ScopedMessagePartSpecification.MakeReadOnly
- uid: CoreWCF.Security.ScopedMessagePartSpecification.Actions*
  commentId: Overload:CoreWCF.Security.ScopedMessagePartSpecification.Actions
  isExternal: true
  name: Actions
  nameWithType: ScopedMessagePartSpecification.Actions
  fullName: CoreWCF.Security.ScopedMessagePartSpecification.Actions
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: '!:System.Collections.Generic.ICollection{System.String}'
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of System.String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<>
  nameWithType: ICollection<>
  fullName: System.Collections.Generic.ICollection<>
  nameWithType.vb: ICollection(Of )
  fullName.vb: System.Collections.Generic.ICollection(Of )
  name.vb: ICollection(Of )
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Security.ScopedMessagePartSpecification.ChannelParts*
  commentId: Overload:CoreWCF.Security.ScopedMessagePartSpecification.ChannelParts
  isExternal: true
  name: ChannelParts
  nameWithType: ScopedMessagePartSpecification.ChannelParts
  fullName: CoreWCF.Security.ScopedMessagePartSpecification.ChannelParts
- uid: CoreWCF.Security.ScopedMessagePartSpecification.IsReadOnly*
  commentId: Overload:CoreWCF.Security.ScopedMessagePartSpecification.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ScopedMessagePartSpecification.IsReadOnly
  fullName: CoreWCF.Security.ScopedMessagePartSpecification.IsReadOnly
