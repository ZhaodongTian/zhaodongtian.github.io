### YamlMime:ManagedReference
items:
- uid: CoreWCF.IContextChannel
  commentId: T:CoreWCF.IContextChannel
  id: IContextChannel
  parent: CoreWCF
  children:
  - CoreWCF.IContextChannel.InputSession
  - CoreWCF.IContextChannel.LocalAddress
  - CoreWCF.IContextChannel.OperationTimeout
  - CoreWCF.IContextChannel.OutputSession
  - CoreWCF.IContextChannel.RemoteAddress
  - CoreWCF.IContextChannel.SessionId
  langs:
  - csharp
  - vb
  name: IContextChannel
  nameWithType: IContextChannel
  fullName: CoreWCF.IContextChannel
  type: Interface
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF
  summary: Defines the interface for the context control of a channel.
  remarks: "\n[!INCLUDE [untrusted-data-interface-note](~/includes/untrusted-data-interface-note.md)]\n\nThe &lt;xref:CoreWCF.IContextChannel> defines the controls for the context of a channel. This includes the &lt;xref:CoreWCF.IContextChannel.SessionId%2A>, &lt;xref:CoreWCF.IContextChannel.InputSession%2A>, &lt;xref:CoreWCF.IContextChannel.OutputSession%2A>, and &lt;xref:CoreWCF.IContextChannel.AllowOutputBatching%2A> for the channel, and the &lt;xref:CoreWCF.IContextChannel.LocalAddress%2A> and &lt;xref:CoreWCF.IContextChannel.RemoteAddress%2A> for the endpoints participating in the session. The &lt;xref:CoreWCF.IContextChannel> interface forms part of the &lt;xref:CoreWCF.IServiceChannel> and &lt;xref:CoreWCF.IClientChannel> interfaces and of the &lt;xref:CoreWCF.IDuplexContextChannel> interface.  \n\n"
  syntax:
    content: 'public interface IContextChannel : IChannel, ICommunicationObject, IExtensibleObject<IContextChannel>'
    content.vb: >-
      Public Interface IContextChannel
          Inherits IChannel, ICommunicationObject, IExtensibleObject(Of IContextChannel)
  inheritedMembers:
  - CoreWCF.Channels.IChannel.GetProperty``1
  - CoreWCF.Channels.IChannel.ChannelDispatcher
  - CoreWCF.ICommunicationObject.Abort
  - CoreWCF.ICommunicationObject.CloseAsync
  - CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
  - CoreWCF.ICommunicationObject.OpenAsync
  - CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
  - CoreWCF.ICommunicationObject.State
  - CoreWCF.ICommunicationObject.Closed
  - CoreWCF.ICommunicationObject.Closing
  - CoreWCF.ICommunicationObject.Faulted
  - CoreWCF.ICommunicationObject.Opened
  - CoreWCF.ICommunicationObject.Opening
  - CoreWCF.IExtensibleObject{CoreWCF.IContextChannel}.Extensions
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: CoreWCF.IContextChannel.InputSession
  commentId: P:CoreWCF.IContextChannel.InputSession
  id: InputSession
  parent: CoreWCF.IContextChannel
  langs:
  - csharp
  - vb
  name: InputSession
  nameWithType: IContextChannel.InputSession
  fullName: CoreWCF.IContextChannel.InputSession
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF
  syntax:
    content: IInputSession InputSession { get; }
    parameters: []
    return:
      type: CoreWCF.Channels.IInputSession
    content.vb: ReadOnly Property InputSession As IInputSession
  overload: CoreWCF.IContextChannel.InputSession*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: CoreWCF.IContextChannel.LocalAddress
  commentId: P:CoreWCF.IContextChannel.LocalAddress
  id: LocalAddress
  parent: CoreWCF.IContextChannel
  langs:
  - csharp
  - vb
  name: LocalAddress
  nameWithType: IContextChannel.LocalAddress
  fullName: CoreWCF.IContextChannel.LocalAddress
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF
  syntax:
    content: EndpointAddress LocalAddress { get; }
    parameters: []
    return:
      type: CoreWCF.EndpointAddress
    content.vb: ReadOnly Property LocalAddress As EndpointAddress
  overload: CoreWCF.IContextChannel.LocalAddress*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: CoreWCF.IContextChannel.OperationTimeout
  commentId: P:CoreWCF.IContextChannel.OperationTimeout
  id: OperationTimeout
  parent: CoreWCF.IContextChannel
  langs:
  - csharp
  - vb
  name: OperationTimeout
  nameWithType: IContextChannel.OperationTimeout
  fullName: CoreWCF.IContextChannel.OperationTimeout
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF
  syntax:
    content: TimeSpan OperationTimeout { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Property OperationTimeout As TimeSpan
  overload: CoreWCF.IContextChannel.OperationTimeout*
  modifiers.csharp:
  - get
  - set
- uid: CoreWCF.IContextChannel.OutputSession
  commentId: P:CoreWCF.IContextChannel.OutputSession
  id: OutputSession
  parent: CoreWCF.IContextChannel
  langs:
  - csharp
  - vb
  name: OutputSession
  nameWithType: IContextChannel.OutputSession
  fullName: CoreWCF.IContextChannel.OutputSession
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF
  syntax:
    content: IOutputSession OutputSession { get; }
    parameters: []
    return:
      type: CoreWCF.Channels.IOutputSession
    content.vb: ReadOnly Property OutputSession As IOutputSession
  overload: CoreWCF.IContextChannel.OutputSession*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: CoreWCF.IContextChannel.RemoteAddress
  commentId: P:CoreWCF.IContextChannel.RemoteAddress
  id: RemoteAddress
  parent: CoreWCF.IContextChannel
  langs:
  - csharp
  - vb
  name: RemoteAddress
  nameWithType: IContextChannel.RemoteAddress
  fullName: CoreWCF.IContextChannel.RemoteAddress
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF
  syntax:
    content: EndpointAddress RemoteAddress { get; }
    parameters: []
    return:
      type: CoreWCF.EndpointAddress
    content.vb: ReadOnly Property RemoteAddress As EndpointAddress
  overload: CoreWCF.IContextChannel.RemoteAddress*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: CoreWCF.IContextChannel.SessionId
  commentId: P:CoreWCF.IContextChannel.SessionId
  id: SessionId
  parent: CoreWCF.IContextChannel
  langs:
  - csharp
  - vb
  name: SessionId
  nameWithType: IContextChannel.SessionId
  fullName: CoreWCF.IContextChannel.SessionId
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF
  syntax:
    content: string SessionId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property SessionId As String
  overload: CoreWCF.IContextChannel.SessionId*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: CoreWCF
  commentId: N:CoreWCF
  isExternal: true
  name: CoreWCF
  nameWithType: CoreWCF
  fullName: CoreWCF
- uid: CoreWCF.Channels.IChannel.GetProperty``1
  commentId: M:CoreWCF.Channels.IChannel.GetProperty``1
  parent: CoreWCF.Channels.IChannel
  isExternal: true
  name: GetProperty<T>()
  nameWithType: IChannel.GetProperty<T>()
  fullName: CoreWCF.Channels.IChannel.GetProperty<T>()
  nameWithType.vb: IChannel.GetProperty(Of T)()
  fullName.vb: CoreWCF.Channels.IChannel.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
  spec.csharp:
  - uid: CoreWCF.Channels.IChannel.GetProperty``1
    name: GetProperty<T>
    nameWithType: IChannel.GetProperty<T>
    fullName: CoreWCF.Channels.IChannel.GetProperty<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.IChannel.GetProperty``1
    name: GetProperty(Of T)
    nameWithType: IChannel.GetProperty(Of T)
    fullName: CoreWCF.Channels.IChannel.GetProperty(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.IChannel.ChannelDispatcher
  commentId: P:CoreWCF.Channels.IChannel.ChannelDispatcher
  parent: CoreWCF.Channels.IChannel
  isExternal: true
  name: ChannelDispatcher
  nameWithType: IChannel.ChannelDispatcher
  fullName: CoreWCF.Channels.IChannel.ChannelDispatcher
- uid: CoreWCF.ICommunicationObject.Abort
  commentId: M:CoreWCF.ICommunicationObject.Abort
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Abort()
  nameWithType: ICommunicationObject.Abort()
  fullName: CoreWCF.ICommunicationObject.Abort()
  spec.csharp:
  - uid: CoreWCF.ICommunicationObject.Abort
    name: Abort
    nameWithType: ICommunicationObject.Abort
    fullName: CoreWCF.ICommunicationObject.Abort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.ICommunicationObject.Abort
    name: Abort
    nameWithType: ICommunicationObject.Abort
    fullName: CoreWCF.ICommunicationObject.Abort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.ICommunicationObject.CloseAsync
  commentId: M:CoreWCF.ICommunicationObject.CloseAsync
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: CloseAsync()
  nameWithType: ICommunicationObject.CloseAsync()
  fullName: CoreWCF.ICommunicationObject.CloseAsync()
  spec.csharp:
  - uid: CoreWCF.ICommunicationObject.CloseAsync
    name: CloseAsync
    nameWithType: ICommunicationObject.CloseAsync
    fullName: CoreWCF.ICommunicationObject.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.ICommunicationObject.CloseAsync
    name: CloseAsync
    nameWithType: ICommunicationObject.CloseAsync
    fullName: CoreWCF.ICommunicationObject.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
  commentId: M:CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: CloseAsync(CancellationToken)
  nameWithType: ICommunicationObject.CloseAsync(CancellationToken)
  fullName: CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
    name: CloseAsync
    nameWithType: ICommunicationObject.CloseAsync
    fullName: CoreWCF.ICommunicationObject.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
    name: CloseAsync
    nameWithType: ICommunicationObject.CloseAsync
    fullName: CoreWCF.ICommunicationObject.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.ICommunicationObject.OpenAsync
  commentId: M:CoreWCF.ICommunicationObject.OpenAsync
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: OpenAsync()
  nameWithType: ICommunicationObject.OpenAsync()
  fullName: CoreWCF.ICommunicationObject.OpenAsync()
  spec.csharp:
  - uid: CoreWCF.ICommunicationObject.OpenAsync
    name: OpenAsync
    nameWithType: ICommunicationObject.OpenAsync
    fullName: CoreWCF.ICommunicationObject.OpenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.ICommunicationObject.OpenAsync
    name: OpenAsync
    nameWithType: ICommunicationObject.OpenAsync
    fullName: CoreWCF.ICommunicationObject.OpenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
  commentId: M:CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: OpenAsync(CancellationToken)
  nameWithType: ICommunicationObject.OpenAsync(CancellationToken)
  fullName: CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: ICommunicationObject.OpenAsync
    fullName: CoreWCF.ICommunicationObject.OpenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: ICommunicationObject.OpenAsync
    fullName: CoreWCF.ICommunicationObject.OpenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.ICommunicationObject.State
  commentId: P:CoreWCF.ICommunicationObject.State
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: State
  nameWithType: ICommunicationObject.State
  fullName: CoreWCF.ICommunicationObject.State
- uid: CoreWCF.ICommunicationObject.Closed
  commentId: E:CoreWCF.ICommunicationObject.Closed
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Closed
  nameWithType: ICommunicationObject.Closed
  fullName: CoreWCF.ICommunicationObject.Closed
- uid: CoreWCF.ICommunicationObject.Closing
  commentId: E:CoreWCF.ICommunicationObject.Closing
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Closing
  nameWithType: ICommunicationObject.Closing
  fullName: CoreWCF.ICommunicationObject.Closing
- uid: CoreWCF.ICommunicationObject.Faulted
  commentId: E:CoreWCF.ICommunicationObject.Faulted
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Faulted
  nameWithType: ICommunicationObject.Faulted
  fullName: CoreWCF.ICommunicationObject.Faulted
- uid: CoreWCF.ICommunicationObject.Opened
  commentId: E:CoreWCF.ICommunicationObject.Opened
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Opened
  nameWithType: ICommunicationObject.Opened
  fullName: CoreWCF.ICommunicationObject.Opened
- uid: CoreWCF.ICommunicationObject.Opening
  commentId: E:CoreWCF.ICommunicationObject.Opening
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Opening
  nameWithType: ICommunicationObject.Opening
  fullName: CoreWCF.ICommunicationObject.Opening
- uid: CoreWCF.IExtensibleObject{CoreWCF.IContextChannel}.Extensions
  commentId: P:CoreWCF.IExtensibleObject{CoreWCF.IContextChannel}.Extensions
  parent: CoreWCF.IExtensibleObject{CoreWCF.IContextChannel}
  definition: CoreWCF.IExtensibleObject`1.Extensions
  name: Extensions
  nameWithType: IExtensibleObject<IContextChannel>.Extensions
  fullName: CoreWCF.IExtensibleObject<CoreWCF.IContextChannel>.Extensions
  nameWithType.vb: IExtensibleObject(Of IContextChannel).Extensions
  fullName.vb: CoreWCF.IExtensibleObject(Of CoreWCF.IContextChannel).Extensions
- uid: CoreWCF.Channels.IChannel
  commentId: T:CoreWCF.Channels.IChannel
  parent: CoreWCF.Channels
  isExternal: true
  name: IChannel
  nameWithType: IChannel
  fullName: CoreWCF.Channels.IChannel
- uid: CoreWCF.ICommunicationObject
  commentId: T:CoreWCF.ICommunicationObject
  parent: CoreWCF
  isExternal: true
  name: ICommunicationObject
  nameWithType: ICommunicationObject
  fullName: CoreWCF.ICommunicationObject
- uid: CoreWCF.IExtensibleObject`1.Extensions
  commentId: P:CoreWCF.IExtensibleObject`1.Extensions
  isExternal: true
  name: Extensions
  nameWithType: IExtensibleObject<T>.Extensions
  fullName: CoreWCF.IExtensibleObject<T>.Extensions
  nameWithType.vb: IExtensibleObject(Of T).Extensions
  fullName.vb: CoreWCF.IExtensibleObject(Of T).Extensions
- uid: CoreWCF.IExtensibleObject{CoreWCF.IContextChannel}
  commentId: T:CoreWCF.IExtensibleObject{CoreWCF.IContextChannel}
  parent: CoreWCF
  definition: CoreWCF.IExtensibleObject`1
  name: IExtensibleObject<IContextChannel>
  nameWithType: IExtensibleObject<IContextChannel>
  fullName: CoreWCF.IExtensibleObject<CoreWCF.IContextChannel>
  nameWithType.vb: IExtensibleObject(Of IContextChannel)
  fullName.vb: CoreWCF.IExtensibleObject(Of CoreWCF.IContextChannel)
  name.vb: IExtensibleObject(Of IContextChannel)
  spec.csharp:
  - uid: CoreWCF.IExtensibleObject`1
    name: IExtensibleObject
    nameWithType: IExtensibleObject
    fullName: CoreWCF.IExtensibleObject
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.IContextChannel
    name: IContextChannel
    nameWithType: IContextChannel
    fullName: CoreWCF.IContextChannel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CoreWCF.IExtensibleObject`1
    name: IExtensibleObject
    nameWithType: IExtensibleObject
    fullName: CoreWCF.IExtensibleObject
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.IContextChannel
    name: IContextChannel
    nameWithType: IContextChannel
    fullName: CoreWCF.IContextChannel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels
  commentId: N:CoreWCF.Channels
  isExternal: true
  name: CoreWCF.Channels
  nameWithType: CoreWCF.Channels
  fullName: CoreWCF.Channels
- uid: CoreWCF.IExtensibleObject`1
  commentId: T:CoreWCF.IExtensibleObject`1
  isExternal: true
  name: IExtensibleObject<T>
  nameWithType: IExtensibleObject<T>
  fullName: CoreWCF.IExtensibleObject<T>
  nameWithType.vb: IExtensibleObject(Of T)
  fullName.vb: CoreWCF.IExtensibleObject(Of T)
  name.vb: IExtensibleObject(Of T)
  spec.csharp:
  - uid: CoreWCF.IExtensibleObject`1
    name: IExtensibleObject
    nameWithType: IExtensibleObject
    fullName: CoreWCF.IExtensibleObject
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CoreWCF.IExtensibleObject`1
    name: IExtensibleObject
    nameWithType: IExtensibleObject
    fullName: CoreWCF.IExtensibleObject
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IContextChannel.InputSession*
  commentId: Overload:CoreWCF.IContextChannel.InputSession
  isExternal: true
  name: InputSession
  nameWithType: IContextChannel.InputSession
  fullName: CoreWCF.IContextChannel.InputSession
- uid: CoreWCF.Channels.IInputSession
  commentId: T:CoreWCF.Channels.IInputSession
  parent: CoreWCF.Channels
  isExternal: true
  name: IInputSession
  nameWithType: IInputSession
  fullName: CoreWCF.Channels.IInputSession
- uid: CoreWCF.IContextChannel.LocalAddress*
  commentId: Overload:CoreWCF.IContextChannel.LocalAddress
  isExternal: true
  name: LocalAddress
  nameWithType: IContextChannel.LocalAddress
  fullName: CoreWCF.IContextChannel.LocalAddress
- uid: CoreWCF.EndpointAddress
  commentId: T:CoreWCF.EndpointAddress
  parent: CoreWCF
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: CoreWCF.EndpointAddress
- uid: CoreWCF.IContextChannel.OperationTimeout*
  commentId: Overload:CoreWCF.IContextChannel.OperationTimeout
  isExternal: true
  name: OperationTimeout
  nameWithType: IContextChannel.OperationTimeout
  fullName: CoreWCF.IContextChannel.OperationTimeout
- uid: System.TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: CoreWCF.IContextChannel.OutputSession*
  commentId: Overload:CoreWCF.IContextChannel.OutputSession
  isExternal: true
  name: OutputSession
  nameWithType: IContextChannel.OutputSession
  fullName: CoreWCF.IContextChannel.OutputSession
- uid: CoreWCF.Channels.IOutputSession
  commentId: T:CoreWCF.Channels.IOutputSession
  parent: CoreWCF.Channels
  isExternal: true
  name: IOutputSession
  nameWithType: IOutputSession
  fullName: CoreWCF.Channels.IOutputSession
- uid: CoreWCF.IContextChannel.RemoteAddress*
  commentId: Overload:CoreWCF.IContextChannel.RemoteAddress
  isExternal: true
  name: RemoteAddress
  nameWithType: IContextChannel.RemoteAddress
  fullName: CoreWCF.IContextChannel.RemoteAddress
- uid: CoreWCF.IContextChannel.SessionId*
  commentId: Overload:CoreWCF.IContextChannel.SessionId
  isExternal: true
  name: SessionId
  nameWithType: IContextChannel.SessionId
  fullName: CoreWCF.IContextChannel.SessionId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
