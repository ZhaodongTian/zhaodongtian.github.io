### YamlMime:ManagedReference
items:
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters
  commentId: T:CoreWCF.Security.Tokens.SecurityTokenParameters
  id: SecurityTokenParameters
  parent: CoreWCF.Security.Tokens
  children:
  - CoreWCF.Security.Tokens.SecurityTokenParameters.#ctor
  - CoreWCF.Security.Tokens.SecurityTokenParameters.#ctor(CoreWCF.Security.Tokens.SecurityTokenParameters)
  - CoreWCF.Security.Tokens.SecurityTokenParameters.Clone
  - CoreWCF.Security.Tokens.SecurityTokenParameters.CloneCore
  - CoreWCF.Security.Tokens.SecurityTokenParameters.CreateKeyIdentifierClause(CoreWCF.IdentityModel.Tokens.SecurityToken,CoreWCF.Security.Tokens.SecurityTokenReferenceStyle)
  - CoreWCF.Security.Tokens.SecurityTokenParameters.HasAsymmetricKey
  - CoreWCF.Security.Tokens.SecurityTokenParameters.InclusionMode
  - CoreWCF.Security.Tokens.SecurityTokenParameters.InitializeSecurityTokenRequirement(CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement)
  - CoreWCF.Security.Tokens.SecurityTokenParameters.MatchesKeyIdentifierClause(CoreWCF.IdentityModel.Tokens.SecurityToken,CoreWCF.IdentityModel.SecurityKeyIdentifierClause,CoreWCF.Security.Tokens.SecurityTokenReferenceStyle)
  - CoreWCF.Security.Tokens.SecurityTokenParameters.ReferenceStyle
  - CoreWCF.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys
  - CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsClientAuthentication
  - CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsClientWindowsIdentity
  - CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsServerAuthentication
  - CoreWCF.Security.Tokens.SecurityTokenParameters.ToString
  langs:
  - csharp
  - vb
  name: SecurityTokenParameters
  nameWithType: SecurityTokenParameters
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  summary: Specifies an  class that when implemented represents security token parameters.
  remarks: "Security token parameters provide information about the tokens (for example, token type, issuer, and so on) required by the security binding element.  \n\nThe security token parameter classes derived from this one are a collection of token properties and methods, and are used in creating different kinds of security binding elements and tokens. Not all of the properties are relevant to all derived classes. For example, the &lt;xref:CoreWCF.Security.Tokens.SecurityTokenParameters.ReferenceStyle%2A> has no relevance in an issued token (SAML token) case.  \n\n\n\n"
  syntax:
    content: 'public abstract class SecurityTokenParameters : Object'
    content.vb: >-
      Public MustInherit Class SecurityTokenParameters
          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - CoreWCF.Security.Tokens.IssuedSecurityTokenParameters
  - CoreWCF.Security.Tokens.SecureConversationSecurityTokenParameters
  - CoreWCF.Security.Tokens.SslSecurityTokenParameters
  - CoreWCF.Security.Tokens.SspiSecurityTokenParameters
  - CoreWCF.Security.Tokens.UserNameSecurityTokenParameters
  - CoreWCF.Security.Tokens.X509SecurityTokenParameters
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.#ctor(CoreWCF.Security.Tokens.SecurityTokenParameters)
  commentId: M:CoreWCF.Security.Tokens.SecurityTokenParameters.#ctor(CoreWCF.Security.Tokens.SecurityTokenParameters)
  id: '#ctor(CoreWCF.Security.Tokens.SecurityTokenParameters)'
  parent: CoreWCF.Security.Tokens.SecurityTokenParameters
  langs:
  - csharp
  - vb
  name: SecurityTokenParameters(SecurityTokenParameters)
  nameWithType: SecurityTokenParameters.SecurityTokenParameters(SecurityTokenParameters)
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.SecurityTokenParameters(CoreWCF.Security.Tokens.SecurityTokenParameters)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: protected SecurityTokenParameters(SecurityTokenParameters other)
    parameters:
    - id: other
      type: CoreWCF.Security.Tokens.SecurityTokenParameters
    content.vb: Protected Sub New(other As SecurityTokenParameters)
  overload: CoreWCF.Security.Tokens.SecurityTokenParameters.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.#ctor
  commentId: M:CoreWCF.Security.Tokens.SecurityTokenParameters.#ctor
  id: '#ctor'
  parent: CoreWCF.Security.Tokens.SecurityTokenParameters
  langs:
  - csharp
  - vb
  name: SecurityTokenParameters()
  nameWithType: SecurityTokenParameters.SecurityTokenParameters()
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.SecurityTokenParameters()
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: protected SecurityTokenParameters()
    content.vb: Protected Sub New
  overload: CoreWCF.Security.Tokens.SecurityTokenParameters.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.Clone
  commentId: M:CoreWCF.Security.Tokens.SecurityTokenParameters.Clone
  id: Clone
  parent: CoreWCF.Security.Tokens.SecurityTokenParameters
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: SecurityTokenParameters.Clone()
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.Clone()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public SecurityTokenParameters Clone()
    return:
      type: CoreWCF.Security.Tokens.SecurityTokenParameters
    content.vb: Public Function Clone As SecurityTokenParameters
  overload: CoreWCF.Security.Tokens.SecurityTokenParameters.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.CloneCore
  commentId: M:CoreWCF.Security.Tokens.SecurityTokenParameters.CloneCore
  id: CloneCore
  parent: CoreWCF.Security.Tokens.SecurityTokenParameters
  langs:
  - csharp
  - vb
  name: CloneCore()
  nameWithType: SecurityTokenParameters.CloneCore()
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.CloneCore()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: protected abstract SecurityTokenParameters CloneCore()
    return:
      type: CoreWCF.Security.Tokens.SecurityTokenParameters
    content.vb: Protected MustOverride Function CloneCore As SecurityTokenParameters
  overload: CoreWCF.Security.Tokens.SecurityTokenParameters.CloneCore*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.CreateKeyIdentifierClause(CoreWCF.IdentityModel.Tokens.SecurityToken,CoreWCF.Security.Tokens.SecurityTokenReferenceStyle)
  commentId: M:CoreWCF.Security.Tokens.SecurityTokenParameters.CreateKeyIdentifierClause(CoreWCF.IdentityModel.Tokens.SecurityToken,CoreWCF.Security.Tokens.SecurityTokenReferenceStyle)
  id: CreateKeyIdentifierClause(CoreWCF.IdentityModel.Tokens.SecurityToken,CoreWCF.Security.Tokens.SecurityTokenReferenceStyle)
  parent: CoreWCF.Security.Tokens.SecurityTokenParameters
  langs:
  - csharp
  - vb
  name: CreateKeyIdentifierClause(SecurityToken, SecurityTokenReferenceStyle)
  nameWithType: SecurityTokenParameters.CreateKeyIdentifierClause(SecurityToken, SecurityTokenReferenceStyle)
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.CreateKeyIdentifierClause(CoreWCF.IdentityModel.Tokens.SecurityToken, CoreWCF.Security.Tokens.SecurityTokenReferenceStyle)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: protected abstract SecurityKeyIdentifierClause CreateKeyIdentifierClause(SecurityToken token, SecurityTokenReferenceStyle referenceStyle)
    parameters:
    - id: token
      type: CoreWCF.IdentityModel.Tokens.SecurityToken
    - id: referenceStyle
      type: CoreWCF.Security.Tokens.SecurityTokenReferenceStyle
    return:
      type: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    content.vb: Protected MustOverride Function CreateKeyIdentifierClause(token As SecurityToken, referenceStyle As SecurityTokenReferenceStyle) As SecurityKeyIdentifierClause
  overload: CoreWCF.Security.Tokens.SecurityTokenParameters.CreateKeyIdentifierClause*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.InitializeSecurityTokenRequirement(CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement)
  commentId: M:CoreWCF.Security.Tokens.SecurityTokenParameters.InitializeSecurityTokenRequirement(CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement)
  id: InitializeSecurityTokenRequirement(CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: CoreWCF.Security.Tokens.SecurityTokenParameters
  langs:
  - csharp
  - vb
  name: InitializeSecurityTokenRequirement(SecurityTokenRequirement)
  nameWithType: SecurityTokenParameters.InitializeSecurityTokenRequirement(SecurityTokenRequirement)
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.InitializeSecurityTokenRequirement(CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: protected abstract void InitializeSecurityTokenRequirement(SecurityTokenRequirement requirement)
    parameters:
    - id: requirement
      type: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement
    content.vb: Protected MustOverride Sub InitializeSecurityTokenRequirement(requirement As SecurityTokenRequirement)
  overload: CoreWCF.Security.Tokens.SecurityTokenParameters.InitializeSecurityTokenRequirement*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.MatchesKeyIdentifierClause(CoreWCF.IdentityModel.Tokens.SecurityToken,CoreWCF.IdentityModel.SecurityKeyIdentifierClause,CoreWCF.Security.Tokens.SecurityTokenReferenceStyle)
  commentId: M:CoreWCF.Security.Tokens.SecurityTokenParameters.MatchesKeyIdentifierClause(CoreWCF.IdentityModel.Tokens.SecurityToken,CoreWCF.IdentityModel.SecurityKeyIdentifierClause,CoreWCF.Security.Tokens.SecurityTokenReferenceStyle)
  id: MatchesKeyIdentifierClause(CoreWCF.IdentityModel.Tokens.SecurityToken,CoreWCF.IdentityModel.SecurityKeyIdentifierClause,CoreWCF.Security.Tokens.SecurityTokenReferenceStyle)
  parent: CoreWCF.Security.Tokens.SecurityTokenParameters
  langs:
  - csharp
  - vb
  name: MatchesKeyIdentifierClause(SecurityToken, SecurityKeyIdentifierClause, SecurityTokenReferenceStyle)
  nameWithType: SecurityTokenParameters.MatchesKeyIdentifierClause(SecurityToken, SecurityKeyIdentifierClause, SecurityTokenReferenceStyle)
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.MatchesKeyIdentifierClause(CoreWCF.IdentityModel.Tokens.SecurityToken, CoreWCF.IdentityModel.SecurityKeyIdentifierClause, CoreWCF.Security.Tokens.SecurityTokenReferenceStyle)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: protected virtual bool MatchesKeyIdentifierClause(SecurityToken token, SecurityKeyIdentifierClause keyIdentifierClause, SecurityTokenReferenceStyle referenceStyle)
    parameters:
    - id: token
      type: CoreWCF.IdentityModel.Tokens.SecurityToken
    - id: keyIdentifierClause
      type: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    - id: referenceStyle
      type: CoreWCF.Security.Tokens.SecurityTokenReferenceStyle
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function MatchesKeyIdentifierClause(token As SecurityToken, keyIdentifierClause As SecurityKeyIdentifierClause, referenceStyle As SecurityTokenReferenceStyle) As Boolean
  overload: CoreWCF.Security.Tokens.SecurityTokenParameters.MatchesKeyIdentifierClause*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.ToString
  commentId: M:CoreWCF.Security.Tokens.SecurityTokenParameters.ToString
  id: ToString
  parent: CoreWCF.Security.Tokens.SecurityTokenParameters
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SecurityTokenParameters.ToString()
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.ToString()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: CoreWCF.Security.Tokens.SecurityTokenParameters.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.HasAsymmetricKey
  commentId: P:CoreWCF.Security.Tokens.SecurityTokenParameters.HasAsymmetricKey
  id: HasAsymmetricKey
  parent: CoreWCF.Security.Tokens.SecurityTokenParameters
  langs:
  - csharp
  - vb
  name: HasAsymmetricKey
  nameWithType: SecurityTokenParameters.HasAsymmetricKey
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.HasAsymmetricKey
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: protected abstract bool HasAsymmetricKey { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected MustOverride ReadOnly Property HasAsymmetricKey As Boolean
  overload: CoreWCF.Security.Tokens.SecurityTokenParameters.HasAsymmetricKey*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.InclusionMode
  commentId: P:CoreWCF.Security.Tokens.SecurityTokenParameters.InclusionMode
  id: InclusionMode
  parent: CoreWCF.Security.Tokens.SecurityTokenParameters
  langs:
  - csharp
  - vb
  name: InclusionMode
  nameWithType: SecurityTokenParameters.InclusionMode
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.InclusionMode
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public SecurityTokenInclusionMode InclusionMode { get; set; }
    parameters: []
    return:
      type: CoreWCF.Security.Tokens.SecurityTokenInclusionMode
    content.vb: Public Property InclusionMode As SecurityTokenInclusionMode
  overload: CoreWCF.Security.Tokens.SecurityTokenParameters.InclusionMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.ReferenceStyle
  commentId: P:CoreWCF.Security.Tokens.SecurityTokenParameters.ReferenceStyle
  id: ReferenceStyle
  parent: CoreWCF.Security.Tokens.SecurityTokenParameters
  langs:
  - csharp
  - vb
  name: ReferenceStyle
  nameWithType: SecurityTokenParameters.ReferenceStyle
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.ReferenceStyle
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public SecurityTokenReferenceStyle ReferenceStyle { get; set; }
    parameters: []
    return:
      type: CoreWCF.Security.Tokens.SecurityTokenReferenceStyle
    content.vb: Public Property ReferenceStyle As SecurityTokenReferenceStyle
  overload: CoreWCF.Security.Tokens.SecurityTokenParameters.ReferenceStyle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys
  commentId: P:CoreWCF.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys
  id: RequireDerivedKeys
  parent: CoreWCF.Security.Tokens.SecurityTokenParameters
  langs:
  - csharp
  - vb
  name: RequireDerivedKeys
  nameWithType: SecurityTokenParameters.RequireDerivedKeys
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public bool RequireDerivedKeys { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RequireDerivedKeys As Boolean
  overload: CoreWCF.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsClientAuthentication
  commentId: P:CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsClientAuthentication
  id: SupportsClientAuthentication
  parent: CoreWCF.Security.Tokens.SecurityTokenParameters
  langs:
  - csharp
  - vb
  name: SupportsClientAuthentication
  nameWithType: SecurityTokenParameters.SupportsClientAuthentication
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsClientAuthentication
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: protected abstract bool SupportsClientAuthentication { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected MustOverride ReadOnly Property SupportsClientAuthentication As Boolean
  overload: CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsClientAuthentication*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsServerAuthentication
  commentId: P:CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsServerAuthentication
  id: SupportsServerAuthentication
  parent: CoreWCF.Security.Tokens.SecurityTokenParameters
  langs:
  - csharp
  - vb
  name: SupportsServerAuthentication
  nameWithType: SecurityTokenParameters.SupportsServerAuthentication
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsServerAuthentication
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: protected abstract bool SupportsServerAuthentication { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected MustOverride ReadOnly Property SupportsServerAuthentication As Boolean
  overload: CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsServerAuthentication*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsClientWindowsIdentity
  commentId: P:CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsClientWindowsIdentity
  id: SupportsClientWindowsIdentity
  parent: CoreWCF.Security.Tokens.SecurityTokenParameters
  langs:
  - csharp
  - vb
  name: SupportsClientWindowsIdentity
  nameWithType: SecurityTokenParameters.SupportsClientWindowsIdentity
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsClientWindowsIdentity
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: protected abstract bool SupportsClientWindowsIdentity { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected MustOverride ReadOnly Property SupportsClientWindowsIdentity As Boolean
  overload: CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsClientWindowsIdentity*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
references:
- uid: CoreWCF.Security.Tokens
  commentId: N:CoreWCF.Security.Tokens
  isExternal: true
  name: CoreWCF.Security.Tokens
  nameWithType: CoreWCF.Security.Tokens
  fullName: CoreWCF.Security.Tokens
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.#ctor*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityTokenParameters.#ctor
  isExternal: true
  name: SecurityTokenParameters
  nameWithType: SecurityTokenParameters.SecurityTokenParameters
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.SecurityTokenParameters
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters
  commentId: T:CoreWCF.Security.Tokens.SecurityTokenParameters
  parent: CoreWCF.Security.Tokens
  isExternal: true
  name: SecurityTokenParameters
  nameWithType: SecurityTokenParameters
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.Clone*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityTokenParameters.Clone
  isExternal: true
  name: Clone
  nameWithType: SecurityTokenParameters.Clone
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.Clone
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.CloneCore*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityTokenParameters.CloneCore
  isExternal: true
  name: CloneCore
  nameWithType: SecurityTokenParameters.CloneCore
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.CloneCore
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.CreateKeyIdentifierClause*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityTokenParameters.CreateKeyIdentifierClause
  isExternal: true
  name: CreateKeyIdentifierClause
  nameWithType: SecurityTokenParameters.CreateKeyIdentifierClause
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.CreateKeyIdentifierClause
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityToken
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
- uid: CoreWCF.Security.Tokens.SecurityTokenReferenceStyle
  commentId: T:CoreWCF.Security.Tokens.SecurityTokenReferenceStyle
  parent: CoreWCF.Security.Tokens
  isExternal: true
  name: SecurityTokenReferenceStyle
  nameWithType: SecurityTokenReferenceStyle
  fullName: CoreWCF.Security.Tokens.SecurityTokenReferenceStyle
- uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
  commentId: T:CoreWCF.IdentityModel.SecurityKeyIdentifierClause
  parent: CoreWCF.IdentityModel
  isExternal: true
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
- uid: CoreWCF.IdentityModel.Tokens
  commentId: N:CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: CoreWCF.IdentityModel.Tokens
  nameWithType: CoreWCF.IdentityModel.Tokens
  fullName: CoreWCF.IdentityModel.Tokens
- uid: CoreWCF.IdentityModel
  commentId: N:CoreWCF.IdentityModel
  isExternal: true
  name: CoreWCF.IdentityModel
  nameWithType: CoreWCF.IdentityModel
  fullName: CoreWCF.IdentityModel
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.InitializeSecurityTokenRequirement*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityTokenParameters.InitializeSecurityTokenRequirement
  isExternal: true
  name: InitializeSecurityTokenRequirement
  nameWithType: SecurityTokenParameters.InitializeSecurityTokenRequirement
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.InitializeSecurityTokenRequirement
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement
  commentId: T:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement
  parent: CoreWCF.IdentityModel.Selectors
  isExternal: true
  name: SecurityTokenRequirement
  nameWithType: SecurityTokenRequirement
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement
- uid: CoreWCF.IdentityModel.Selectors
  commentId: N:CoreWCF.IdentityModel.Selectors
  isExternal: true
  name: CoreWCF.IdentityModel.Selectors
  nameWithType: CoreWCF.IdentityModel.Selectors
  fullName: CoreWCF.IdentityModel.Selectors
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.MatchesKeyIdentifierClause*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityTokenParameters.MatchesKeyIdentifierClause
  isExternal: true
  name: MatchesKeyIdentifierClause
  nameWithType: SecurityTokenParameters.MatchesKeyIdentifierClause
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.MatchesKeyIdentifierClause
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.ToString*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityTokenParameters.ToString
  isExternal: true
  name: ToString
  nameWithType: SecurityTokenParameters.ToString
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.HasAsymmetricKey*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityTokenParameters.HasAsymmetricKey
  isExternal: true
  name: HasAsymmetricKey
  nameWithType: SecurityTokenParameters.HasAsymmetricKey
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.HasAsymmetricKey
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.InclusionMode*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityTokenParameters.InclusionMode
  isExternal: true
  name: InclusionMode
  nameWithType: SecurityTokenParameters.InclusionMode
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.InclusionMode
- uid: CoreWCF.Security.Tokens.SecurityTokenInclusionMode
  commentId: T:CoreWCF.Security.Tokens.SecurityTokenInclusionMode
  parent: CoreWCF.Security.Tokens
  isExternal: true
  name: SecurityTokenInclusionMode
  nameWithType: SecurityTokenInclusionMode
  fullName: CoreWCF.Security.Tokens.SecurityTokenInclusionMode
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.ReferenceStyle*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityTokenParameters.ReferenceStyle
  isExternal: true
  name: ReferenceStyle
  nameWithType: SecurityTokenParameters.ReferenceStyle
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.ReferenceStyle
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys
  isExternal: true
  name: RequireDerivedKeys
  nameWithType: SecurityTokenParameters.RequireDerivedKeys
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsClientAuthentication*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsClientAuthentication
  isExternal: true
  name: SupportsClientAuthentication
  nameWithType: SecurityTokenParameters.SupportsClientAuthentication
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsClientAuthentication
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsServerAuthentication*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsServerAuthentication
  isExternal: true
  name: SupportsServerAuthentication
  nameWithType: SecurityTokenParameters.SupportsServerAuthentication
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsServerAuthentication
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsClientWindowsIdentity*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsClientWindowsIdentity
  isExternal: true
  name: SupportsClientWindowsIdentity
  nameWithType: SecurityTokenParameters.SupportsClientWindowsIdentity
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters.SupportsClientWindowsIdentity
