### YamlMime:ManagedReference
items:
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  id: SecurityTokenHandlerCollectionManager
  parent: CoreWCF.IdentityModel.Tokens
  children:
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.#ctor(System.String)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey(System.String)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item(System.String)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName
  langs:
  - csharp
  - vb
  name: SecurityTokenHandlerCollectionManager
  nameWithType: SecurityTokenHandlerCollectionManager
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nA class which manages multiple named <xref href=\"CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollection\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: 'public class SecurityTokenHandlerCollectionManager : Object'
    content.vb: >-
      Public Class SecurityTokenHandlerCollectionManager
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.#ctor(System.String)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  langs:
  - csharp
  - vb
  name: SecurityTokenHandlerCollectionManager(String)
  nameWithType: SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollectionManager(String)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollectionManager(System.String)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nInitialize an instance of <xref href=\"CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\" data-throw-if-not-resolved=\"false\"></xref> for a given named service.\n"
  syntax:
    content: public SecurityTokenHandlerCollectionManager(string serviceName)
    parameters:
    - id: serviceName
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> indicating the name of the associated service.
    content.vb: Public Sub New(serviceName As String)
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager
  id: CreateEmptySecurityTokenHandlerCollectionManager
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  langs:
  - csharp
  - vb
  name: CreateEmptySecurityTokenHandlerCollectionManager()
  nameWithType: SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager()
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nNo token handlers are created.\n"
  syntax:
    content: public static SecurityTokenHandlerCollectionManager CreateEmptySecurityTokenHandlerCollectionManager()
    return:
      type: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
      description: An empty token handler collection manager.
    content.vb: Public Shared Function CreateEmptySecurityTokenHandlerCollectionManager As SecurityTokenHandlerCollectionManager
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey(System.String)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  langs:
  - csharp
  - vb
  name: ContainsKey(String)
  nameWithType: SecurityTokenHandlerCollectionManager.ContainsKey(String)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey(System.String)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public bool ContainsKey(string usage)
    parameters:
    - id: usage
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function ContainsKey(usage As String) As Boolean
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count
  id: Count
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: SecurityTokenHandlerCollectionManager.Count
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets a count of the number of SecurityTokenHandlerCollections in this \nSecurityTokenHandlerCollectionManager.\n"
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName
  id: ServiceName
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: SecurityTokenHandlerCollectionManager.ServiceName
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets the service name.\n"
  syntax:
    content: public string ServiceName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ServiceName As String
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections
  id: SecurityTokenHandlerCollections
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  langs:
  - csharp
  - vb
  name: SecurityTokenHandlerCollections
  nameWithType: SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets an enumeration over the SecurityTokenHandlerCollection list.\n"
  syntax:
    content: public IEnumerable<SecurityTokenHandlerCollection> SecurityTokenHandlerCollections { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollection}
    content.vb: Public ReadOnly Property SecurityTokenHandlerCollections As IEnumerable(Of SecurityTokenHandlerCollection)
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item(System.String)
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item(System.String)
  id: Item(System.String)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: SecurityTokenHandlerCollectionManager.Item[String]
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item[System.String]
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public SecurityTokenHandlerCollection this[string usage] { get; set; }
    parameters:
    - id: usage
      type: System.String
    return:
      type: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollection
    content.vb: Public Property Item(usage As String) As SecurityTokenHandlerCollection
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item*
  nameWithType.vb: SecurityTokenHandlerCollectionManager.Item(String)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item(System.String)
  name.vb: Item(String)
references:
- uid: CoreWCF.IdentityModel.Tokens
  commentId: N:CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: CoreWCF.IdentityModel.Tokens
  nameWithType: CoreWCF.IdentityModel.Tokens
  fullName: CoreWCF.IdentityModel.Tokens
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.#ctor*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.#ctor
  isExternal: true
  name: SecurityTokenHandlerCollectionManager
  nameWithType: SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollectionManager
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollectionManager
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager
  isExternal: true
  name: CreateEmptySecurityTokenHandlerCollectionManager
  nameWithType: SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SecurityTokenHandlerCollectionManager
  nameWithType: SecurityTokenHandlerCollectionManager
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey
  isExternal: true
  name: ContainsKey
  nameWithType: SecurityTokenHandlerCollectionManager.ContainsKey
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count
  isExternal: true
  name: Count
  nameWithType: SecurityTokenHandlerCollectionManager.Count
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName
  isExternal: true
  name: ServiceName
  nameWithType: SecurityTokenHandlerCollectionManager.ServiceName
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections
  isExternal: true
  name: SecurityTokenHandlerCollections
  nameWithType: SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections
- uid: System.Collections.Generic.IEnumerable{CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollection}
  commentId: '!:System.Collections.Generic.IEnumerable{CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollection}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SecurityTokenHandlerCollection>
  nameWithType: IEnumerable<SecurityTokenHandlerCollection>
  fullName: System.Collections.Generic.IEnumerable<CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollection>
  nameWithType.vb: IEnumerable(Of SecurityTokenHandlerCollection)
  fullName.vb: System.Collections.Generic.IEnumerable(Of CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  name.vb: IEnumerable(Of SecurityTokenHandlerCollection)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollection
    name: SecurityTokenHandlerCollection
    nameWithType: SecurityTokenHandlerCollection
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollection
    name: SecurityTokenHandlerCollection
    nameWithType: SecurityTokenHandlerCollection
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item
  isExternal: true
  name: Item
  nameWithType: SecurityTokenHandlerCollectionManager.Item
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollection
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollection
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SecurityTokenHandlerCollection
  nameWithType: SecurityTokenHandlerCollection
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollection
