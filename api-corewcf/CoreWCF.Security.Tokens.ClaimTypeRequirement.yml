### YamlMime:ManagedReference
items:
- uid: CoreWCF.Security.Tokens.ClaimTypeRequirement
  commentId: T:CoreWCF.Security.Tokens.ClaimTypeRequirement
  id: ClaimTypeRequirement
  parent: CoreWCF.Security.Tokens
  children:
  - CoreWCF.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)
  - CoreWCF.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)
  - CoreWCF.Security.Tokens.ClaimTypeRequirement.ClaimType
  - CoreWCF.Security.Tokens.ClaimTypeRequirement.IsOptional
  langs:
  - csharp
  - vb
  name: ClaimTypeRequirement
  nameWithType: ClaimTypeRequirement
  fullName: CoreWCF.Security.Tokens.ClaimTypeRequirement
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  summary: Specifies the types of required and optional claims expected to appear in the federated credential.
  remarks: "In a federated scenario, services state the requirements on incoming credentials. For example, the incoming credentials must possess a certain set of claim types. This requirement is manifested in a security policy. When a client requests a security token from a security token service (for example, CardSpace), it puts the requirements into a token request so that the security token service can issue the security token that satisfies the requirements accordingly.  \n\n\n\n"
  syntax:
    content: 'public class ClaimTypeRequirement : Object'
    content.vb: >-
      Public Class ClaimTypeRequirement
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)
  commentId: M:CoreWCF.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: CoreWCF.Security.Tokens.ClaimTypeRequirement
  langs:
  - csharp
  - vb
  name: ClaimTypeRequirement(String)
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement(String)
  fullName: CoreWCF.Security.Tokens.ClaimTypeRequirement.ClaimTypeRequirement(System.String)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public ClaimTypeRequirement(string claimType)
    parameters:
    - id: claimType
      type: System.String
    content.vb: Public Sub New(claimType As String)
  overload: CoreWCF.Security.Tokens.ClaimTypeRequirement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)
  commentId: M:CoreWCF.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: CoreWCF.Security.Tokens.ClaimTypeRequirement
  langs:
  - csharp
  - vb
  name: ClaimTypeRequirement(String, Boolean)
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement(String, Boolean)
  fullName: CoreWCF.Security.Tokens.ClaimTypeRequirement.ClaimTypeRequirement(System.String, System.Boolean)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public ClaimTypeRequirement(string claimType, bool isOptional)
    parameters:
    - id: claimType
      type: System.String
    - id: isOptional
      type: System.Boolean
    content.vb: Public Sub New(claimType As String, isOptional As Boolean)
  overload: CoreWCF.Security.Tokens.ClaimTypeRequirement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.Tokens.ClaimTypeRequirement.ClaimType
  commentId: P:CoreWCF.Security.Tokens.ClaimTypeRequirement.ClaimType
  id: ClaimType
  parent: CoreWCF.Security.Tokens.ClaimTypeRequirement
  langs:
  - csharp
  - vb
  name: ClaimType
  nameWithType: ClaimTypeRequirement.ClaimType
  fullName: CoreWCF.Security.Tokens.ClaimTypeRequirement.ClaimType
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public string ClaimType { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ClaimType As String
  overload: CoreWCF.Security.Tokens.ClaimTypeRequirement.ClaimType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.Tokens.ClaimTypeRequirement.IsOptional
  commentId: P:CoreWCF.Security.Tokens.ClaimTypeRequirement.IsOptional
  id: IsOptional
  parent: CoreWCF.Security.Tokens.ClaimTypeRequirement
  langs:
  - csharp
  - vb
  name: IsOptional
  nameWithType: ClaimTypeRequirement.IsOptional
  fullName: CoreWCF.Security.Tokens.ClaimTypeRequirement.IsOptional
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public bool IsOptional { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOptional As Boolean
  overload: CoreWCF.Security.Tokens.ClaimTypeRequirement.IsOptional*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CoreWCF.Security.Tokens
  commentId: N:CoreWCF.Security.Tokens
  isExternal: true
  name: CoreWCF.Security.Tokens
  nameWithType: CoreWCF.Security.Tokens
  fullName: CoreWCF.Security.Tokens
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Security.Tokens.ClaimTypeRequirement.#ctor*
  commentId: Overload:CoreWCF.Security.Tokens.ClaimTypeRequirement.#ctor
  isExternal: true
  name: ClaimTypeRequirement
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement
  fullName: CoreWCF.Security.Tokens.ClaimTypeRequirement.ClaimTypeRequirement
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.Security.Tokens.ClaimTypeRequirement.ClaimType*
  commentId: Overload:CoreWCF.Security.Tokens.ClaimTypeRequirement.ClaimType
  isExternal: true
  name: ClaimType
  nameWithType: ClaimTypeRequirement.ClaimType
  fullName: CoreWCF.Security.Tokens.ClaimTypeRequirement.ClaimType
- uid: CoreWCF.Security.Tokens.ClaimTypeRequirement.IsOptional*
  commentId: Overload:CoreWCF.Security.Tokens.ClaimTypeRequirement.IsOptional
  isExternal: true
  name: IsOptional
  nameWithType: ClaimTypeRequirement.IsOptional
  fullName: CoreWCF.Security.Tokens.ClaimTypeRequirement.IsOptional
