### YamlMime:ManagedReference
items:
- uid: CoreWCF.Channels.PrivacyNoticeBindingElement
  commentId: T:CoreWCF.Channels.PrivacyNoticeBindingElement
  id: PrivacyNoticeBindingElement
  parent: CoreWCF.Channels
  children:
  - CoreWCF.Channels.PrivacyNoticeBindingElement.#ctor
  - CoreWCF.Channels.PrivacyNoticeBindingElement.#ctor(CoreWCF.Channels.PrivacyNoticeBindingElement)
  - CoreWCF.Channels.PrivacyNoticeBindingElement.Clone
  - CoreWCF.Channels.PrivacyNoticeBindingElement.CoreWCF#Description#IPolicyExportExtension#ExportPolicy(CoreWCF.Description.MetadataExporter,CoreWCF.Description.PolicyConversionContext)
  - CoreWCF.Channels.PrivacyNoticeBindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
  - CoreWCF.Channels.PrivacyNoticeBindingElement.IsMatch(CoreWCF.Channels.BindingElement)
  - CoreWCF.Channels.PrivacyNoticeBindingElement.Url
  - CoreWCF.Channels.PrivacyNoticeBindingElement.Version
  langs:
  - csharp
  - vb
  name: PrivacyNoticeBindingElement
  nameWithType: PrivacyNoticeBindingElement
  fullName: CoreWCF.Channels.PrivacyNoticeBindingElement
  type: Class
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: Represents the binding element that contains the privacy policy for the WS-Federation binding.
  remarks: To be added.
  syntax:
    content: 'public sealed class PrivacyNoticeBindingElement : BindingElement, IPolicyExportExtension'
    content.vb: >-
      Public NotInheritable Class PrivacyNoticeBindingElement
          Inherits BindingElement
          Implements IPolicyExportExtension
  inheritance:
  - System.Object
  - CoreWCF.Channels.BindingElement
  implements:
  - CoreWCF.Description.IPolicyExportExtension
  inheritedMembers:
  - CoreWCF.Channels.BindingElement.BuildServiceDispatcher``1(CoreWCF.Channels.BindingContext,CoreWCF.Configuration.IServiceDispatcher)
  - CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher``1(CoreWCF.Channels.BindingContext)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: CoreWCF.Channels.PrivacyNoticeBindingElement.#ctor
  commentId: M:CoreWCF.Channels.PrivacyNoticeBindingElement.#ctor
  id: '#ctor'
  parent: CoreWCF.Channels.PrivacyNoticeBindingElement
  langs:
  - csharp
  - vb
  name: PrivacyNoticeBindingElement()
  nameWithType: PrivacyNoticeBindingElement.PrivacyNoticeBindingElement()
  fullName: CoreWCF.Channels.PrivacyNoticeBindingElement.PrivacyNoticeBindingElement()
  type: Constructor
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: "Initializes a new instance of the <xref:CoreWCF.Channels.PrivacyNoticeBindingElement> class."
  syntax:
    content: public PrivacyNoticeBindingElement()
    content.vb: Public Sub New
  overload: CoreWCF.Channels.PrivacyNoticeBindingElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Channels.PrivacyNoticeBindingElement.#ctor(CoreWCF.Channels.PrivacyNoticeBindingElement)
  commentId: M:CoreWCF.Channels.PrivacyNoticeBindingElement.#ctor(CoreWCF.Channels.PrivacyNoticeBindingElement)
  id: '#ctor(CoreWCF.Channels.PrivacyNoticeBindingElement)'
  parent: CoreWCF.Channels.PrivacyNoticeBindingElement
  langs:
  - csharp
  - vb
  name: PrivacyNoticeBindingElement(PrivacyNoticeBindingElement)
  nameWithType: PrivacyNoticeBindingElement.PrivacyNoticeBindingElement(PrivacyNoticeBindingElement)
  fullName: CoreWCF.Channels.PrivacyNoticeBindingElement.PrivacyNoticeBindingElement(CoreWCF.Channels.PrivacyNoticeBindingElement)
  type: Constructor
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: "Initializes a new instance of the <xref:CoreWCF.Channels.PrivacyNoticeBindingElement> class from an existing element."
  syntax:
    content: public PrivacyNoticeBindingElement(PrivacyNoticeBindingElement elementToBeCloned)
    parameters:
    - id: elementToBeCloned
      type: CoreWCF.Channels.PrivacyNoticeBindingElement
      description: "The <xref:CoreWCF.Channels.PrivacyNoticeBindingElement> used to initialize the new element."
    content.vb: Public Sub New(elementToBeCloned As PrivacyNoticeBindingElement)
  overload: CoreWCF.Channels.PrivacyNoticeBindingElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Channels.PrivacyNoticeBindingElement.Clone
  commentId: M:CoreWCF.Channels.PrivacyNoticeBindingElement.Clone
  id: Clone
  parent: CoreWCF.Channels.PrivacyNoticeBindingElement
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: PrivacyNoticeBindingElement.Clone()
  fullName: CoreWCF.Channels.PrivacyNoticeBindingElement.Clone()
  type: Method
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: Creates a copy of the current binding element.
  syntax:
    content: public override BindingElement Clone()
    return:
      type: CoreWCF.Channels.BindingElement
      description: "A <xref:CoreWCF.Channels.BindingElement> that is a copy of the current element."
    content.vb: Public Overrides Function Clone As BindingElement
  overridden: CoreWCF.Channels.BindingElement.Clone
  overload: CoreWCF.Channels.PrivacyNoticeBindingElement.Clone*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CoreWCF.Channels.PrivacyNoticeBindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
  commentId: M:CoreWCF.Channels.PrivacyNoticeBindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
  id: GetProperty``1(CoreWCF.Channels.BindingContext)
  parent: CoreWCF.Channels.PrivacyNoticeBindingElement
  langs:
  - csharp
  - vb
  name: GetProperty<T>(BindingContext)
  nameWithType: PrivacyNoticeBindingElement.GetProperty<T>(BindingContext)
  fullName: CoreWCF.Channels.PrivacyNoticeBindingElement.GetProperty<T>(CoreWCF.Channels.BindingContext)
  type: Method
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: Queries the binding element stack to see whether it supports a particular interface.
  syntax:
    content: >-
      public override T GetProperty<T>(BindingContext context)
          where T : class
    parameters:
    - id: context
      type: CoreWCF.Channels.BindingContext
      description: "The <xref:CoreWCF.Channels.BindingContext> for the current binding element."
    typeParameters:
    - id: T
      description: "The interface whose support is being tested."
    return:
      type: '{T}'
      description: The interface whose support is being tested.
    content.vb: Public Overrides Function GetProperty(Of T As Class)(context As BindingContext) As T
  overridden: CoreWCF.Channels.BindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
  overload: CoreWCF.Channels.PrivacyNoticeBindingElement.GetProperty*
  nameWithType.vb: PrivacyNoticeBindingElement.GetProperty(Of T)(BindingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: CoreWCF.Channels.PrivacyNoticeBindingElement.GetProperty(Of T)(CoreWCF.Channels.BindingContext)
  name.vb: GetProperty(Of T)(BindingContext)
  remarks: "Calls <xref:CoreWCF.Channels.BindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)> on the next binding element in the binding context."
- uid: CoreWCF.Channels.PrivacyNoticeBindingElement.CoreWCF#Description#IPolicyExportExtension#ExportPolicy(CoreWCF.Description.MetadataExporter,CoreWCF.Description.PolicyConversionContext)
  commentId: M:CoreWCF.Channels.PrivacyNoticeBindingElement.CoreWCF#Description#IPolicyExportExtension#ExportPolicy(CoreWCF.Description.MetadataExporter,CoreWCF.Description.PolicyConversionContext)
  id: CoreWCF#Description#IPolicyExportExtension#ExportPolicy(CoreWCF.Description.MetadataExporter,CoreWCF.Description.PolicyConversionContext)
  isEii: true
  parent: CoreWCF.Channels.PrivacyNoticeBindingElement
  langs:
  - csharp
  - vb
  name: IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)
  nameWithType: PrivacyNoticeBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)
  fullName: CoreWCF.Channels.PrivacyNoticeBindingElement.CoreWCF.Description.IPolicyExportExtension.ExportPolicy(CoreWCF.Description.MetadataExporter, CoreWCF.Description.PolicyConversionContext)
  type: Method
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: "Exports custom policy assertions regarding the privacy notice from the binding elements that contain the policy."
  syntax:
    content: void IPolicyExportExtension.ExportPolicy(MetadataExporter exporter, PolicyConversionContext context)
    parameters:
    - id: exporter
      type: CoreWCF.Description.MetadataExporter
      description: "The <xref:CoreWCF.Description.MetadataExporter> that you can use to modify the exporting process."
    - id: context
      type: CoreWCF.Description.PolicyConversionContext
      description: "The <xref:CoreWCF.Description.PolicyConversionContext> that contains the binding assertions and elements associated with the policy."
    content.vb: Sub CoreWCF.Description.IPolicyExportExtension.ExportPolicy(exporter As MetadataExporter, context As PolicyConversionContext) Implements IPolicyExportExtension.ExportPolicy
  overload: CoreWCF.Channels.PrivacyNoticeBindingElement.CoreWCF#Description#IPolicyExportExtension#ExportPolicy*
  implements:
  - CoreWCF.Description.IPolicyExportExtension.ExportPolicy(CoreWCF.Description.MetadataExporter,CoreWCF.Description.PolicyConversionContext)
  nameWithType.vb: PrivacyNoticeBindingElement.CoreWCF.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)
  name.vb: CoreWCF.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)
- uid: CoreWCF.Channels.PrivacyNoticeBindingElement.IsMatch(CoreWCF.Channels.BindingElement)
  commentId: M:CoreWCF.Channels.PrivacyNoticeBindingElement.IsMatch(CoreWCF.Channels.BindingElement)
  id: IsMatch(CoreWCF.Channels.BindingElement)
  parent: CoreWCF.Channels.PrivacyNoticeBindingElement
  langs:
  - csharp
  - vb
  name: IsMatch(BindingElement)
  nameWithType: PrivacyNoticeBindingElement.IsMatch(BindingElement)
  fullName: CoreWCF.Channels.PrivacyNoticeBindingElement.IsMatch(CoreWCF.Channels.BindingElement)
  type: Method
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  syntax:
    content: protected override bool IsMatch(BindingElement b)
    parameters:
    - id: b
      type: CoreWCF.Channels.BindingElement
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function IsMatch(b As BindingElement) As Boolean
  overridden: CoreWCF.Channels.BindingElement.IsMatch(CoreWCF.Channels.BindingElement)
  overload: CoreWCF.Channels.PrivacyNoticeBindingElement.IsMatch*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: CoreWCF.Channels.PrivacyNoticeBindingElement.Url
  commentId: P:CoreWCF.Channels.PrivacyNoticeBindingElement.Url
  id: Url
  parent: CoreWCF.Channels.PrivacyNoticeBindingElement
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: PrivacyNoticeBindingElement.Url
  fullName: CoreWCF.Channels.PrivacyNoticeBindingElement.Url
  type: Property
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: Gets or sets the URI at which the privacy notice is located.
  syntax:
    content: public Uri Url { get; set; }
    parameters: []
    return:
      type: System.Uri
      description: "The [Uri](https://learn.microsoft.com/en-us/dotnet/api/system.uri?view=netframework-4.8.1) at which the privacy notice is located."
    content.vb: Public Property Url As Uri
  overload: CoreWCF.Channels.PrivacyNoticeBindingElement.Url*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Channels.PrivacyNoticeBindingElement.Version
  commentId: P:CoreWCF.Channels.PrivacyNoticeBindingElement.Version
  id: Version
  parent: CoreWCF.Channels.PrivacyNoticeBindingElement
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: PrivacyNoticeBindingElement.Version
  fullName: CoreWCF.Channels.PrivacyNoticeBindingElement.Version
  type: Property
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: Gets or sets the privacy notice version number for the binding.
  syntax:
    content: public int Version { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: The version number of the privacy notice.
    content.vb: Public Property Version As Integer
  overload: CoreWCF.Channels.PrivacyNoticeBindingElement.Version*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: CoreWCF.Channels
  commentId: N:CoreWCF.Channels
  isExternal: true
  name: CoreWCF.Channels
  nameWithType: CoreWCF.Channels
  fullName: CoreWCF.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CoreWCF.Channels.BindingElement
  commentId: T:CoreWCF.Channels.BindingElement
  parent: CoreWCF.Channels
  isExternal: true
  name: BindingElement
  nameWithType: BindingElement
  fullName: CoreWCF.Channels.BindingElement
- uid: CoreWCF.Description.IPolicyExportExtension
  commentId: T:CoreWCF.Description.IPolicyExportExtension
  parent: CoreWCF.Description
  isExternal: true
  name: IPolicyExportExtension
  nameWithType: IPolicyExportExtension
  fullName: CoreWCF.Description.IPolicyExportExtension
- uid: CoreWCF.Channels.BindingElement.BuildServiceDispatcher``1(CoreWCF.Channels.BindingContext,CoreWCF.Configuration.IServiceDispatcher)
  commentId: M:CoreWCF.Channels.BindingElement.BuildServiceDispatcher``1(CoreWCF.Channels.BindingContext,CoreWCF.Configuration.IServiceDispatcher)
  parent: CoreWCF.Channels.BindingElement
  isExternal: true
  name: BuildServiceDispatcher<TChannel>(BindingContext, IServiceDispatcher)
  nameWithType: BindingElement.BuildServiceDispatcher<TChannel>(BindingContext, IServiceDispatcher)
  fullName: CoreWCF.Channels.BindingElement.BuildServiceDispatcher<TChannel>(CoreWCF.Channels.BindingContext, CoreWCF.Configuration.IServiceDispatcher)
  nameWithType.vb: BindingElement.BuildServiceDispatcher(Of TChannel)(BindingContext, IServiceDispatcher)
  fullName.vb: CoreWCF.Channels.BindingElement.BuildServiceDispatcher(Of TChannel)(CoreWCF.Channels.BindingContext, CoreWCF.Configuration.IServiceDispatcher)
  name.vb: BuildServiceDispatcher(Of TChannel)(BindingContext, IServiceDispatcher)
  spec.csharp:
  - uid: CoreWCF.Channels.BindingElement.BuildServiceDispatcher``1(CoreWCF.Channels.BindingContext,CoreWCF.Configuration.IServiceDispatcher)
    name: BuildServiceDispatcher<TChannel>
    nameWithType: BindingElement.BuildServiceDispatcher<TChannel>
    fullName: CoreWCF.Channels.BindingElement.BuildServiceDispatcher<TChannel>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: CoreWCF.Channels.BindingContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.Configuration.IServiceDispatcher
    name: IServiceDispatcher
    nameWithType: IServiceDispatcher
    fullName: CoreWCF.Configuration.IServiceDispatcher
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.BindingElement.BuildServiceDispatcher``1(CoreWCF.Channels.BindingContext,CoreWCF.Configuration.IServiceDispatcher)
    name: BuildServiceDispatcher(Of TChannel)
    nameWithType: BindingElement.BuildServiceDispatcher(Of TChannel)
    fullName: CoreWCF.Channels.BindingElement.BuildServiceDispatcher(Of TChannel)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: CoreWCF.Channels.BindingContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.Configuration.IServiceDispatcher
    name: IServiceDispatcher
    nameWithType: IServiceDispatcher
    fullName: CoreWCF.Configuration.IServiceDispatcher
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher``1(CoreWCF.Channels.BindingContext)
  commentId: M:CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher``1(CoreWCF.Channels.BindingContext)
  parent: CoreWCF.Channels.BindingElement
  isExternal: true
  name: CanBuildServiceDispatcher<TChannel>(BindingContext)
  nameWithType: BindingElement.CanBuildServiceDispatcher<TChannel>(BindingContext)
  fullName: CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher<TChannel>(CoreWCF.Channels.BindingContext)
  nameWithType.vb: BindingElement.CanBuildServiceDispatcher(Of TChannel)(BindingContext)
  fullName.vb: CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher(Of TChannel)(CoreWCF.Channels.BindingContext)
  name.vb: CanBuildServiceDispatcher(Of TChannel)(BindingContext)
  spec.csharp:
  - uid: CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher``1(CoreWCF.Channels.BindingContext)
    name: CanBuildServiceDispatcher<TChannel>
    nameWithType: BindingElement.CanBuildServiceDispatcher<TChannel>
    fullName: CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher<TChannel>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: CoreWCF.Channels.BindingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher``1(CoreWCF.Channels.BindingContext)
    name: CanBuildServiceDispatcher(Of TChannel)
    nameWithType: BindingElement.CanBuildServiceDispatcher(Of TChannel)
    fullName: CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher(Of TChannel)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: CoreWCF.Channels.BindingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Description
  commentId: N:CoreWCF.Description
  isExternal: true
  name: CoreWCF.Description
  nameWithType: CoreWCF.Description
  fullName: CoreWCF.Description
- uid: CoreWCF.Channels.PrivacyNoticeBindingElement.#ctor*
  commentId: Overload:CoreWCF.Channels.PrivacyNoticeBindingElement.#ctor
  isExternal: true
  name: PrivacyNoticeBindingElement
  nameWithType: PrivacyNoticeBindingElement.PrivacyNoticeBindingElement
  fullName: CoreWCF.Channels.PrivacyNoticeBindingElement.PrivacyNoticeBindingElement
- uid: CoreWCF.Channels.PrivacyNoticeBindingElement
  commentId: T:CoreWCF.Channels.PrivacyNoticeBindingElement
  parent: CoreWCF.Channels
  isExternal: true
  name: PrivacyNoticeBindingElement
  nameWithType: PrivacyNoticeBindingElement
  fullName: CoreWCF.Channels.PrivacyNoticeBindingElement
- uid: CoreWCF.Channels.BindingElement.Clone
  commentId: M:CoreWCF.Channels.BindingElement.Clone
  parent: CoreWCF.Channels.BindingElement
  isExternal: true
  name: Clone()
  nameWithType: BindingElement.Clone()
  fullName: CoreWCF.Channels.BindingElement.Clone()
  spec.csharp:
  - uid: CoreWCF.Channels.BindingElement.Clone
    name: Clone
    nameWithType: BindingElement.Clone
    fullName: CoreWCF.Channels.BindingElement.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.BindingElement.Clone
    name: Clone
    nameWithType: BindingElement.Clone
    fullName: CoreWCF.Channels.BindingElement.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.PrivacyNoticeBindingElement.Clone*
  commentId: Overload:CoreWCF.Channels.PrivacyNoticeBindingElement.Clone
  isExternal: true
  name: Clone
  nameWithType: PrivacyNoticeBindingElement.Clone
  fullName: CoreWCF.Channels.PrivacyNoticeBindingElement.Clone
- uid: CoreWCF.Channels.BindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
  commentId: M:CoreWCF.Channels.BindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
  parent: CoreWCF.Channels.BindingElement
  isExternal: true
  name: GetProperty<T>(BindingContext)
  nameWithType: BindingElement.GetProperty<T>(BindingContext)
  fullName: CoreWCF.Channels.BindingElement.GetProperty<T>(CoreWCF.Channels.BindingContext)
  nameWithType.vb: BindingElement.GetProperty(Of T)(BindingContext)
  fullName.vb: CoreWCF.Channels.BindingElement.GetProperty(Of T)(CoreWCF.Channels.BindingContext)
  name.vb: GetProperty(Of T)(BindingContext)
  spec.csharp:
  - uid: CoreWCF.Channels.BindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
    name: GetProperty<T>
    nameWithType: BindingElement.GetProperty<T>
    fullName: CoreWCF.Channels.BindingElement.GetProperty<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: CoreWCF.Channels.BindingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.BindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
    name: GetProperty(Of T)
    nameWithType: BindingElement.GetProperty(Of T)
    fullName: CoreWCF.Channels.BindingElement.GetProperty(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: CoreWCF.Channels.BindingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.PrivacyNoticeBindingElement.GetProperty*
  commentId: Overload:CoreWCF.Channels.PrivacyNoticeBindingElement.GetProperty
  isExternal: true
  name: GetProperty
  nameWithType: PrivacyNoticeBindingElement.GetProperty
  fullName: CoreWCF.Channels.PrivacyNoticeBindingElement.GetProperty
- uid: CoreWCF.Channels.BindingContext
  commentId: T:CoreWCF.Channels.BindingContext
  parent: CoreWCF.Channels
  isExternal: true
  name: BindingContext
  nameWithType: BindingContext
  fullName: CoreWCF.Channels.BindingContext
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: CoreWCF.Channels.PrivacyNoticeBindingElement.CoreWCF#Description#IPolicyExportExtension#ExportPolicy*
  commentId: Overload:CoreWCF.Channels.PrivacyNoticeBindingElement.CoreWCF#Description#IPolicyExportExtension#ExportPolicy
  isExternal: true
  name: IPolicyExportExtension.ExportPolicy
  nameWithType: PrivacyNoticeBindingElement.IPolicyExportExtension.ExportPolicy
  fullName: CoreWCF.Channels.PrivacyNoticeBindingElement.CoreWCF.Description.IPolicyExportExtension.ExportPolicy
  nameWithType.vb: PrivacyNoticeBindingElement.CoreWCF.Description.IPolicyExportExtension.ExportPolicy
  name.vb: CoreWCF.Description.IPolicyExportExtension.ExportPolicy
- uid: CoreWCF.Description.IPolicyExportExtension.ExportPolicy(CoreWCF.Description.MetadataExporter,CoreWCF.Description.PolicyConversionContext)
  commentId: M:CoreWCF.Description.IPolicyExportExtension.ExportPolicy(CoreWCF.Description.MetadataExporter,CoreWCF.Description.PolicyConversionContext)
  parent: CoreWCF.Description.IPolicyExportExtension
  isExternal: true
  name: ExportPolicy(MetadataExporter, PolicyConversionContext)
  nameWithType: IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)
  fullName: CoreWCF.Description.IPolicyExportExtension.ExportPolicy(CoreWCF.Description.MetadataExporter, CoreWCF.Description.PolicyConversionContext)
  spec.csharp:
  - uid: CoreWCF.Description.IPolicyExportExtension.ExportPolicy(CoreWCF.Description.MetadataExporter,CoreWCF.Description.PolicyConversionContext)
    name: ExportPolicy
    nameWithType: IPolicyExportExtension.ExportPolicy
    fullName: CoreWCF.Description.IPolicyExportExtension.ExportPolicy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Description.MetadataExporter
    name: MetadataExporter
    nameWithType: MetadataExporter
    fullName: CoreWCF.Description.MetadataExporter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.Description.PolicyConversionContext
    name: PolicyConversionContext
    nameWithType: PolicyConversionContext
    fullName: CoreWCF.Description.PolicyConversionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Description.IPolicyExportExtension.ExportPolicy(CoreWCF.Description.MetadataExporter,CoreWCF.Description.PolicyConversionContext)
    name: ExportPolicy
    nameWithType: IPolicyExportExtension.ExportPolicy
    fullName: CoreWCF.Description.IPolicyExportExtension.ExportPolicy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Description.MetadataExporter
    name: MetadataExporter
    nameWithType: MetadataExporter
    fullName: CoreWCF.Description.MetadataExporter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.Description.PolicyConversionContext
    name: PolicyConversionContext
    nameWithType: PolicyConversionContext
    fullName: CoreWCF.Description.PolicyConversionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Description.MetadataExporter
  commentId: T:CoreWCF.Description.MetadataExporter
  parent: CoreWCF.Description
  isExternal: true
  name: MetadataExporter
  nameWithType: MetadataExporter
  fullName: CoreWCF.Description.MetadataExporter
- uid: CoreWCF.Description.PolicyConversionContext
  commentId: T:CoreWCF.Description.PolicyConversionContext
  parent: CoreWCF.Description
  isExternal: true
  name: PolicyConversionContext
  nameWithType: PolicyConversionContext
  fullName: CoreWCF.Description.PolicyConversionContext
- uid: CoreWCF.Channels.BindingElement.IsMatch(CoreWCF.Channels.BindingElement)
  commentId: M:CoreWCF.Channels.BindingElement.IsMatch(CoreWCF.Channels.BindingElement)
  parent: CoreWCF.Channels.BindingElement
  isExternal: true
  name: IsMatch(BindingElement)
  nameWithType: BindingElement.IsMatch(BindingElement)
  fullName: CoreWCF.Channels.BindingElement.IsMatch(CoreWCF.Channels.BindingElement)
  spec.csharp:
  - uid: CoreWCF.Channels.BindingElement.IsMatch(CoreWCF.Channels.BindingElement)
    name: IsMatch
    nameWithType: BindingElement.IsMatch
    fullName: CoreWCF.Channels.BindingElement.IsMatch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingElement
    name: BindingElement
    nameWithType: BindingElement
    fullName: CoreWCF.Channels.BindingElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.BindingElement.IsMatch(CoreWCF.Channels.BindingElement)
    name: IsMatch
    nameWithType: BindingElement.IsMatch
    fullName: CoreWCF.Channels.BindingElement.IsMatch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingElement
    name: BindingElement
    nameWithType: BindingElement
    fullName: CoreWCF.Channels.BindingElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.PrivacyNoticeBindingElement.IsMatch*
  commentId: Overload:CoreWCF.Channels.PrivacyNoticeBindingElement.IsMatch
  isExternal: true
  name: IsMatch
  nameWithType: PrivacyNoticeBindingElement.IsMatch
  fullName: CoreWCF.Channels.PrivacyNoticeBindingElement.IsMatch
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.Channels.PrivacyNoticeBindingElement.Url*
  commentId: Overload:CoreWCF.Channels.PrivacyNoticeBindingElement.Url
  isExternal: true
  name: Url
  nameWithType: PrivacyNoticeBindingElement.Url
  fullName: CoreWCF.Channels.PrivacyNoticeBindingElement.Url
- uid: System.Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: CoreWCF.Channels.PrivacyNoticeBindingElement.Version*
  commentId: Overload:CoreWCF.Channels.PrivacyNoticeBindingElement.Version
  isExternal: true
  name: Version
  nameWithType: PrivacyNoticeBindingElement.Version
  fullName: CoreWCF.Channels.PrivacyNoticeBindingElement.Version
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
