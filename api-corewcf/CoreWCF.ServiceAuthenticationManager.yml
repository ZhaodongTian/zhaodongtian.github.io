### YamlMime:ManagedReference
items:
- uid: CoreWCF.ServiceAuthenticationManager
  commentId: T:CoreWCF.ServiceAuthenticationManager
  id: ServiceAuthenticationManager
  parent: CoreWCF
  children:
  - CoreWCF.ServiceAuthenticationManager.#ctor
  - CoreWCF.ServiceAuthenticationManager.Authenticate(System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy},System.Uri,CoreWCF.Channels.Message@)
  - CoreWCF.ServiceAuthenticationManager.AuthenticateAsync(System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy},System.Uri,CoreWCF.Channels.Message)
  langs:
  - csharp
  - vb
  name: ServiceAuthenticationManager
  nameWithType: ServiceAuthenticationManager
  fullName: CoreWCF.ServiceAuthenticationManager
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF
  summary: Represents a service authentication manager.
  remarks: To be added.
  syntax:
    content: 'public class ServiceAuthenticationManager : Object'
    content.vb: >-
      Public Class ServiceAuthenticationManager
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.ServiceAuthenticationManager.Authenticate(System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy},System.Uri,CoreWCF.Channels.Message@)
  commentId: M:CoreWCF.ServiceAuthenticationManager.Authenticate(System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy},System.Uri,CoreWCF.Channels.Message@)
  id: Authenticate(System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy},System.Uri,CoreWCF.Channels.Message@)
  parent: CoreWCF.ServiceAuthenticationManager
  langs:
  - csharp
  - vb
  name: Authenticate(ReadOnlyCollection<IAuthorizationPolicy>, Uri, ref Message)
  nameWithType: ServiceAuthenticationManager.Authenticate(ReadOnlyCollection<IAuthorizationPolicy>, Uri, ref Message)
  fullName: CoreWCF.ServiceAuthenticationManager.Authenticate(System.Collections.ObjectModel.ReadOnlyCollection<CoreWCF.IdentityModel.Policy.IAuthorizationPolicy>, System.Uri, ref CoreWCF.Channels.Message)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF
  syntax:
    content: public virtual ReadOnlyCollection<IAuthorizationPolicy> Authenticate(ReadOnlyCollection<IAuthorizationPolicy> authPolicy, Uri listenUri, ref Message message)
    parameters:
    - id: authPolicy
      type: System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy}
    - id: listenUri
      type: System.Uri
    - id: message
      type: CoreWCF.Channels.Message
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy}
    content.vb: Public Overridable Function Authenticate(authPolicy As ReadOnlyCollection(Of IAuthorizationPolicy), listenUri As Uri, ByRef message As Message) As ReadOnlyCollection(Of IAuthorizationPolicy)
  overload: CoreWCF.ServiceAuthenticationManager.Authenticate*
  nameWithType.vb: ServiceAuthenticationManager.Authenticate(ReadOnlyCollection(Of IAuthorizationPolicy), Uri, ByRef Message)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: CoreWCF.ServiceAuthenticationManager.Authenticate(System.Collections.ObjectModel.ReadOnlyCollection(Of CoreWCF.IdentityModel.Policy.IAuthorizationPolicy), System.Uri, ByRef CoreWCF.Channels.Message)
  name.vb: Authenticate(ReadOnlyCollection(Of IAuthorizationPolicy), Uri, ByRef Message)
- uid: CoreWCF.ServiceAuthenticationManager.AuthenticateAsync(System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy},System.Uri,CoreWCF.Channels.Message)
  commentId: M:CoreWCF.ServiceAuthenticationManager.AuthenticateAsync(System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy},System.Uri,CoreWCF.Channels.Message)
  id: AuthenticateAsync(System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy},System.Uri,CoreWCF.Channels.Message)
  parent: CoreWCF.ServiceAuthenticationManager
  langs:
  - csharp
  - vb
  name: AuthenticateAsync(ReadOnlyCollection<IAuthorizationPolicy>, Uri, Message)
  nameWithType: ServiceAuthenticationManager.AuthenticateAsync(ReadOnlyCollection<IAuthorizationPolicy>, Uri, Message)
  fullName: CoreWCF.ServiceAuthenticationManager.AuthenticateAsync(System.Collections.ObjectModel.ReadOnlyCollection<CoreWCF.IdentityModel.Policy.IAuthorizationPolicy>, System.Uri, CoreWCF.Channels.Message)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF
  syntax:
    content: public virtual ValueTask<(ReadOnlyCollection<IAuthorizationPolicy>, Message)> AuthenticateAsync(ReadOnlyCollection<IAuthorizationPolicy> authPolicy, Uri listenUri, Message message)
    parameters:
    - id: authPolicy
      type: System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy}
    - id: listenUri
      type: System.Uri
    - id: message
      type: CoreWCF.Channels.Message
    return:
      type: System.Threading.Tasks.ValueTask{System.ValueTuple{System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy},CoreWCF.Channels.Message}}
    content.vb: Public Overridable Function AuthenticateAsync(authPolicy As ReadOnlyCollection(Of IAuthorizationPolicy), listenUri As Uri, message As Message) As ValueTask(Of(ReadOnlyCollection(Of IAuthorizationPolicy), Message)(Of ReadOnlyCollection(Of IAuthorizationPolicy), Message)
  overload: CoreWCF.ServiceAuthenticationManager.AuthenticateAsync*
  nameWithType.vb: ServiceAuthenticationManager.AuthenticateAsync(ReadOnlyCollection(Of IAuthorizationPolicy), Uri, Message)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: CoreWCF.ServiceAuthenticationManager.AuthenticateAsync(System.Collections.ObjectModel.ReadOnlyCollection(Of CoreWCF.IdentityModel.Policy.IAuthorizationPolicy), System.Uri, CoreWCF.Channels.Message)
  name.vb: AuthenticateAsync(ReadOnlyCollection(Of IAuthorizationPolicy), Uri, Message)
- uid: CoreWCF.ServiceAuthenticationManager.#ctor
  commentId: M:CoreWCF.ServiceAuthenticationManager.#ctor
  id: '#ctor'
  parent: CoreWCF.ServiceAuthenticationManager
  langs:
  - csharp
  - vb
  name: ServiceAuthenticationManager()
  nameWithType: ServiceAuthenticationManager.ServiceAuthenticationManager()
  fullName: CoreWCF.ServiceAuthenticationManager.ServiceAuthenticationManager()
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF
  syntax:
    content: public ServiceAuthenticationManager()
    content.vb: Public Sub New
  overload: CoreWCF.ServiceAuthenticationManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: CoreWCF
  commentId: N:CoreWCF
  isExternal: true
  name: CoreWCF
  nameWithType: CoreWCF
  fullName: CoreWCF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.ServiceAuthenticationManager.Authenticate*
  commentId: Overload:CoreWCF.ServiceAuthenticationManager.Authenticate
  isExternal: true
  name: Authenticate
  nameWithType: ServiceAuthenticationManager.Authenticate
  fullName: CoreWCF.ServiceAuthenticationManager.Authenticate
- uid: System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy}
  commentId: '!:System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy}'
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<CoreWCF.IdentityModel.Policy.IAuthorizationPolicy>
  nameWithType.vb: ReadOnlyCollection(Of IAuthorizationPolicy)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of CoreWCF.IdentityModel.Policy.IAuthorizationPolicy)
  name.vb: ReadOnlyCollection(Of IAuthorizationPolicy)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: CoreWCF.Channels.Message
  commentId: T:CoreWCF.Channels.Message
  parent: CoreWCF.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: CoreWCF.Channels.Message
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<>
  nameWithType: ReadOnlyCollection<>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<>
  nameWithType.vb: ReadOnlyCollection(Of )
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of )
  name.vb: ReadOnlyCollection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels
  commentId: N:CoreWCF.Channels
  isExternal: true
  name: CoreWCF.Channels
  nameWithType: CoreWCF.Channels
  fullName: CoreWCF.Channels
- uid: CoreWCF.ServiceAuthenticationManager.AuthenticateAsync*
  commentId: Overload:CoreWCF.ServiceAuthenticationManager.AuthenticateAsync
  isExternal: true
  name: AuthenticateAsync
  nameWithType: ServiceAuthenticationManager.AuthenticateAsync
  fullName: CoreWCF.ServiceAuthenticationManager.AuthenticateAsync
- uid: System.Threading.Tasks.ValueTask{System.ValueTuple{System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy},CoreWCF.Channels.Message}}
  commentId: '!:System.Threading.Tasks.ValueTask{System.ValueTuple{System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy},CoreWCF.Channels.Message}}'
  definition: System.Threading.Tasks.ValueTask`1
  name: ValueTask<(, )<ReadOnlyCollection<IAuthorizationPolicy>, Message>>
  nameWithType: ValueTask<(, )<ReadOnlyCollection<IAuthorizationPolicy>, Message>>
  fullName: System.Threading.Tasks.ValueTask<System.ValueTuple<System.Collections.ObjectModel.ReadOnlyCollection<CoreWCF.IdentityModel.Policy.IAuthorizationPolicy>, CoreWCF.Channels.Message>>
  nameWithType.vb: ValueTask(Of (, )(Of ReadOnlyCollection(Of IAuthorizationPolicy), Message))
  fullName.vb: System.Threading.Tasks.ValueTask(Of System.ValueTuple(Of System.Collections.ObjectModel.ReadOnlyCollection(Of CoreWCF.IdentityModel.Policy.IAuthorizationPolicy), CoreWCF.Channels.Message))
  name.vb: ValueTask(Of (, )(Of ReadOnlyCollection(Of IAuthorizationPolicy), Message))
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`2
    name: (, )
    nameWithType: (, )
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.Channels.Message
    name: Message
    nameWithType: Message
    fullName: CoreWCF.Channels.Message
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`2
    name: (, )
    nameWithType: (, )
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.Channels.Message
    name: Message
    nameWithType: Message
    fullName: CoreWCF.Channels.Message
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.ValueTask`1
  isExternal: true
  name: ValueTask<>
  nameWithType: ValueTask<>
  fullName: System.Threading.Tasks.ValueTask<>
  nameWithType.vb: ValueTask(Of )
  fullName.vb: System.Threading.Tasks.ValueTask(Of )
  name.vb: ValueTask(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.ServiceAuthenticationManager.#ctor*
  commentId: Overload:CoreWCF.ServiceAuthenticationManager.#ctor
  isExternal: true
  name: ServiceAuthenticationManager
  nameWithType: ServiceAuthenticationManager.ServiceAuthenticationManager
  fullName: CoreWCF.ServiceAuthenticationManager.ServiceAuthenticationManager
