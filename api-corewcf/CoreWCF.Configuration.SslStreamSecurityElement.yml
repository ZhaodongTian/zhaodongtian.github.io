### YamlMime:ManagedReference
items:
- uid: CoreWCF.Configuration.SslStreamSecurityElement
  commentId: T:CoreWCF.Configuration.SslStreamSecurityElement
  id: SslStreamSecurityElement
  parent: CoreWCF.Configuration
  children:
  - CoreWCF.Configuration.SslStreamSecurityElement.#ctor
  - CoreWCF.Configuration.SslStreamSecurityElement.ApplyConfiguration(CoreWCF.Channels.BindingElement)
  - CoreWCF.Configuration.SslStreamSecurityElement.BindingElementType
  - CoreWCF.Configuration.SslStreamSecurityElement.CopyFrom(CoreWCF.Configuration.ServiceModelExtensionElement)
  - CoreWCF.Configuration.SslStreamSecurityElement.CreateBindingElement
  - CoreWCF.Configuration.SslStreamSecurityElement.InitializeFrom(CoreWCF.Channels.BindingElement)
  - CoreWCF.Configuration.SslStreamSecurityElement.RequireClientCertificate
  - CoreWCF.Configuration.SslStreamSecurityElement.SslProtocols
  langs:
  - csharp
  - vb
  name: SslStreamSecurityElement
  nameWithType: SslStreamSecurityElement
  fullName: CoreWCF.Configuration.SslStreamSecurityElement
  type: Class
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  summary: Represents the configuration element that specifies the security settings for a SSL stream binding. This class cannot be inherited.
  remarks: To be added.
  syntax:
    content: 'public sealed class SslStreamSecurityElement : BindingElementExtensionElement'
    content.vb: >-
      Public NotInheritable Class SslStreamSecurityElement
          Inherits BindingElementExtensionElement
  inheritance:
  - System.Object
  - CoreWCF.Configuration.ServiceModelConfigurationElement
  - CoreWCF.Configuration.ServiceModelExtensionElement
  - CoreWCF.Configuration.BindingElementExtensionElement
  inheritedMembers:
  - CoreWCF.Configuration.ServiceModelExtensionElement.ExtensionCollectionName
  - CoreWCF.Configuration.ServiceModelExtensionElement.ConfigurationElementName
  - CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,{T})
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: CoreWCF.Configuration.SslStreamSecurityElement.#ctor
  commentId: M:CoreWCF.Configuration.SslStreamSecurityElement.#ctor
  id: '#ctor'
  parent: CoreWCF.Configuration.SslStreamSecurityElement
  langs:
  - csharp
  - vb
  name: SslStreamSecurityElement()
  nameWithType: SslStreamSecurityElement.SslStreamSecurityElement()
  fullName: CoreWCF.Configuration.SslStreamSecurityElement.SslStreamSecurityElement()
  type: Constructor
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public SslStreamSecurityElement()
    content.vb: Public Sub New
  overload: CoreWCF.Configuration.SslStreamSecurityElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.SslStreamSecurityElement.ApplyConfiguration(CoreWCF.Channels.BindingElement)
  commentId: M:CoreWCF.Configuration.SslStreamSecurityElement.ApplyConfiguration(CoreWCF.Channels.BindingElement)
  id: ApplyConfiguration(CoreWCF.Channels.BindingElement)
  parent: CoreWCF.Configuration.SslStreamSecurityElement
  langs:
  - csharp
  - vb
  name: ApplyConfiguration(BindingElement)
  nameWithType: SslStreamSecurityElement.ApplyConfiguration(BindingElement)
  fullName: CoreWCF.Configuration.SslStreamSecurityElement.ApplyConfiguration(CoreWCF.Channels.BindingElement)
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public override void ApplyConfiguration(BindingElement bindingElement)
    parameters:
    - id: bindingElement
      type: CoreWCF.Channels.BindingElement
    content.vb: Public Overrides Sub ApplyConfiguration(bindingElement As BindingElement)
  overridden: CoreWCF.Configuration.BindingElementExtensionElement.ApplyConfiguration(CoreWCF.Channels.BindingElement)
  overload: CoreWCF.Configuration.SslStreamSecurityElement.ApplyConfiguration*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CoreWCF.Configuration.SslStreamSecurityElement.CreateBindingElement
  commentId: M:CoreWCF.Configuration.SslStreamSecurityElement.CreateBindingElement
  id: CreateBindingElement
  parent: CoreWCF.Configuration.SslStreamSecurityElement
  langs:
  - csharp
  - vb
  name: CreateBindingElement()
  nameWithType: SslStreamSecurityElement.CreateBindingElement()
  fullName: CoreWCF.Configuration.SslStreamSecurityElement.CreateBindingElement()
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: protected override BindingElement CreateBindingElement()
    return:
      type: CoreWCF.Channels.BindingElement
    content.vb: Protected Overrides Function CreateBindingElement As BindingElement
  overridden: CoreWCF.Configuration.BindingElementExtensionElement.CreateBindingElement
  overload: CoreWCF.Configuration.SslStreamSecurityElement.CreateBindingElement*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: CoreWCF.Configuration.SslStreamSecurityElement.CopyFrom(CoreWCF.Configuration.ServiceModelExtensionElement)
  commentId: M:CoreWCF.Configuration.SslStreamSecurityElement.CopyFrom(CoreWCF.Configuration.ServiceModelExtensionElement)
  id: CopyFrom(CoreWCF.Configuration.ServiceModelExtensionElement)
  parent: CoreWCF.Configuration.SslStreamSecurityElement
  langs:
  - csharp
  - vb
  name: CopyFrom(ServiceModelExtensionElement)
  nameWithType: SslStreamSecurityElement.CopyFrom(ServiceModelExtensionElement)
  fullName: CoreWCF.Configuration.SslStreamSecurityElement.CopyFrom(CoreWCF.Configuration.ServiceModelExtensionElement)
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public override void CopyFrom(ServiceModelExtensionElement from)
    parameters:
    - id: from
      type: CoreWCF.Configuration.ServiceModelExtensionElement
    content.vb: Public Overrides Sub CopyFrom(from As ServiceModelExtensionElement)
  overridden: CoreWCF.Configuration.ServiceModelExtensionElement.CopyFrom(CoreWCF.Configuration.ServiceModelExtensionElement)
  overload: CoreWCF.Configuration.SslStreamSecurityElement.CopyFrom*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CoreWCF.Configuration.SslStreamSecurityElement.InitializeFrom(CoreWCF.Channels.BindingElement)
  commentId: M:CoreWCF.Configuration.SslStreamSecurityElement.InitializeFrom(CoreWCF.Channels.BindingElement)
  id: InitializeFrom(CoreWCF.Channels.BindingElement)
  parent: CoreWCF.Configuration.SslStreamSecurityElement
  langs:
  - csharp
  - vb
  name: InitializeFrom(BindingElement)
  nameWithType: SslStreamSecurityElement.InitializeFrom(BindingElement)
  fullName: CoreWCF.Configuration.SslStreamSecurityElement.InitializeFrom(CoreWCF.Channels.BindingElement)
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: protected override void InitializeFrom(BindingElement bindingElement)
    parameters:
    - id: bindingElement
      type: CoreWCF.Channels.BindingElement
    content.vb: Protected Overrides Sub InitializeFrom(bindingElement As BindingElement)
  overridden: CoreWCF.Configuration.BindingElementExtensionElement.InitializeFrom(CoreWCF.Channels.BindingElement)
  overload: CoreWCF.Configuration.SslStreamSecurityElement.InitializeFrom*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: CoreWCF.Configuration.SslStreamSecurityElement.RequireClientCertificate
  commentId: P:CoreWCF.Configuration.SslStreamSecurityElement.RequireClientCertificate
  id: RequireClientCertificate
  parent: CoreWCF.Configuration.SslStreamSecurityElement
  langs:
  - csharp
  - vb
  name: RequireClientCertificate
  nameWithType: SslStreamSecurityElement.RequireClientCertificate
  fullName: CoreWCF.Configuration.SslStreamSecurityElement.RequireClientCertificate
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public bool RequireClientCertificate { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RequireClientCertificate As Boolean
  overload: CoreWCF.Configuration.SslStreamSecurityElement.RequireClientCertificate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.SslStreamSecurityElement.SslProtocols
  commentId: P:CoreWCF.Configuration.SslStreamSecurityElement.SslProtocols
  id: SslProtocols
  parent: CoreWCF.Configuration.SslStreamSecurityElement
  langs:
  - csharp
  - vb
  name: SslProtocols
  nameWithType: SslStreamSecurityElement.SslProtocols
  fullName: CoreWCF.Configuration.SslStreamSecurityElement.SslProtocols
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public SslProtocols SslProtocols { get; }
    parameters: []
    return:
      type: System.Security.Authentication.SslProtocols
    content.vb: Public ReadOnly Property SslProtocols As SslProtocols
  overload: CoreWCF.Configuration.SslStreamSecurityElement.SslProtocols*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Configuration.SslStreamSecurityElement.BindingElementType
  commentId: P:CoreWCF.Configuration.SslStreamSecurityElement.BindingElementType
  id: BindingElementType
  parent: CoreWCF.Configuration.SslStreamSecurityElement
  langs:
  - csharp
  - vb
  name: BindingElementType
  nameWithType: SslStreamSecurityElement.BindingElementType
  fullName: CoreWCF.Configuration.SslStreamSecurityElement.BindingElementType
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public override Type BindingElementType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Overrides ReadOnly Property BindingElementType As Type
  overridden: CoreWCF.Configuration.BindingElementExtensionElement.BindingElementType
  overload: CoreWCF.Configuration.SslStreamSecurityElement.BindingElementType*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: CoreWCF.Configuration
  commentId: N:CoreWCF.Configuration
  isExternal: true
  name: CoreWCF.Configuration
  nameWithType: CoreWCF.Configuration
  fullName: CoreWCF.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CoreWCF.Configuration.ServiceModelConfigurationElement
  commentId: T:CoreWCF.Configuration.ServiceModelConfigurationElement
  parent: CoreWCF.Configuration
  isExternal: true
  name: ServiceModelConfigurationElement
  nameWithType: ServiceModelConfigurationElement
  fullName: CoreWCF.Configuration.ServiceModelConfigurationElement
- uid: CoreWCF.Configuration.ServiceModelExtensionElement
  commentId: T:CoreWCF.Configuration.ServiceModelExtensionElement
  parent: CoreWCF.Configuration
  isExternal: true
  name: ServiceModelExtensionElement
  nameWithType: ServiceModelExtensionElement
  fullName: CoreWCF.Configuration.ServiceModelExtensionElement
- uid: CoreWCF.Configuration.BindingElementExtensionElement
  commentId: T:CoreWCF.Configuration.BindingElementExtensionElement
  parent: CoreWCF.Configuration
  isExternal: true
  name: BindingElementExtensionElement
  nameWithType: BindingElementExtensionElement
  fullName: CoreWCF.Configuration.BindingElementExtensionElement
- uid: CoreWCF.Configuration.ServiceModelExtensionElement.ExtensionCollectionName
  commentId: P:CoreWCF.Configuration.ServiceModelExtensionElement.ExtensionCollectionName
  parent: CoreWCF.Configuration.ServiceModelExtensionElement
  isExternal: true
  name: ExtensionCollectionName
  nameWithType: ServiceModelExtensionElement.ExtensionCollectionName
  fullName: CoreWCF.Configuration.ServiceModelExtensionElement.ExtensionCollectionName
- uid: CoreWCF.Configuration.ServiceModelExtensionElement.ConfigurationElementName
  commentId: P:CoreWCF.Configuration.ServiceModelExtensionElement.ConfigurationElementName
  parent: CoreWCF.Configuration.ServiceModelExtensionElement
  isExternal: true
  name: ConfigurationElementName
  nameWithType: ServiceModelExtensionElement.ConfigurationElementName
  fullName: CoreWCF.Configuration.ServiceModelExtensionElement.ConfigurationElementName
- uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,{T})
  commentId: M:CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  parent: CoreWCF.Configuration.ServiceModelConfigurationElement
  definition: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  name: SetPropertyValueIfNotDefaultValue<T>(String, T)
  nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)
  fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(System.String, T)
  nameWithType.vb: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  fullName.vb: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(System.String, T)
  name.vb: SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  spec.csharp:
  - uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue<T>
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue(Of T)
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  commentId: M:CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  isExternal: true
  name: SetPropertyValueIfNotDefaultValue<T>(String, T)
  nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)
  fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(System.String, T)
  nameWithType.vb: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  fullName.vb: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(System.String, T)
  name.vb: SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  spec.csharp:
  - uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue<T>
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue(Of T)
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Configuration.SslStreamSecurityElement.#ctor*
  commentId: Overload:CoreWCF.Configuration.SslStreamSecurityElement.#ctor
  isExternal: true
  name: SslStreamSecurityElement
  nameWithType: SslStreamSecurityElement.SslStreamSecurityElement
  fullName: CoreWCF.Configuration.SslStreamSecurityElement.SslStreamSecurityElement
- uid: CoreWCF.Configuration.BindingElementExtensionElement.ApplyConfiguration(CoreWCF.Channels.BindingElement)
  commentId: M:CoreWCF.Configuration.BindingElementExtensionElement.ApplyConfiguration(CoreWCF.Channels.BindingElement)
  parent: CoreWCF.Configuration.BindingElementExtensionElement
  isExternal: true
  name: ApplyConfiguration(BindingElement)
  nameWithType: BindingElementExtensionElement.ApplyConfiguration(BindingElement)
  fullName: CoreWCF.Configuration.BindingElementExtensionElement.ApplyConfiguration(CoreWCF.Channels.BindingElement)
  spec.csharp:
  - uid: CoreWCF.Configuration.BindingElementExtensionElement.ApplyConfiguration(CoreWCF.Channels.BindingElement)
    name: ApplyConfiguration
    nameWithType: BindingElementExtensionElement.ApplyConfiguration
    fullName: CoreWCF.Configuration.BindingElementExtensionElement.ApplyConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingElement
    name: BindingElement
    nameWithType: BindingElement
    fullName: CoreWCF.Channels.BindingElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Configuration.BindingElementExtensionElement.ApplyConfiguration(CoreWCF.Channels.BindingElement)
    name: ApplyConfiguration
    nameWithType: BindingElementExtensionElement.ApplyConfiguration
    fullName: CoreWCF.Configuration.BindingElementExtensionElement.ApplyConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingElement
    name: BindingElement
    nameWithType: BindingElement
    fullName: CoreWCF.Channels.BindingElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Configuration.SslStreamSecurityElement.ApplyConfiguration*
  commentId: Overload:CoreWCF.Configuration.SslStreamSecurityElement.ApplyConfiguration
  isExternal: true
  name: ApplyConfiguration
  nameWithType: SslStreamSecurityElement.ApplyConfiguration
  fullName: CoreWCF.Configuration.SslStreamSecurityElement.ApplyConfiguration
- uid: CoreWCF.Channels.BindingElement
  commentId: T:CoreWCF.Channels.BindingElement
  parent: CoreWCF.Channels
  isExternal: true
  name: BindingElement
  nameWithType: BindingElement
  fullName: CoreWCF.Channels.BindingElement
- uid: CoreWCF.Channels
  commentId: N:CoreWCF.Channels
  isExternal: true
  name: CoreWCF.Channels
  nameWithType: CoreWCF.Channels
  fullName: CoreWCF.Channels
- uid: CoreWCF.Configuration.BindingElementExtensionElement.CreateBindingElement
  commentId: M:CoreWCF.Configuration.BindingElementExtensionElement.CreateBindingElement
  parent: CoreWCF.Configuration.BindingElementExtensionElement
  isExternal: true
  name: CreateBindingElement()
  nameWithType: BindingElementExtensionElement.CreateBindingElement()
  fullName: CoreWCF.Configuration.BindingElementExtensionElement.CreateBindingElement()
  spec.csharp:
  - uid: CoreWCF.Configuration.BindingElementExtensionElement.CreateBindingElement
    name: CreateBindingElement
    nameWithType: BindingElementExtensionElement.CreateBindingElement
    fullName: CoreWCF.Configuration.BindingElementExtensionElement.CreateBindingElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Configuration.BindingElementExtensionElement.CreateBindingElement
    name: CreateBindingElement
    nameWithType: BindingElementExtensionElement.CreateBindingElement
    fullName: CoreWCF.Configuration.BindingElementExtensionElement.CreateBindingElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Configuration.SslStreamSecurityElement.CreateBindingElement*
  commentId: Overload:CoreWCF.Configuration.SslStreamSecurityElement.CreateBindingElement
  isExternal: true
  name: CreateBindingElement
  nameWithType: SslStreamSecurityElement.CreateBindingElement
  fullName: CoreWCF.Configuration.SslStreamSecurityElement.CreateBindingElement
- uid: CoreWCF.Configuration.ServiceModelExtensionElement.CopyFrom(CoreWCF.Configuration.ServiceModelExtensionElement)
  commentId: M:CoreWCF.Configuration.ServiceModelExtensionElement.CopyFrom(CoreWCF.Configuration.ServiceModelExtensionElement)
  parent: CoreWCF.Configuration.ServiceModelExtensionElement
  isExternal: true
  name: CopyFrom(ServiceModelExtensionElement)
  nameWithType: ServiceModelExtensionElement.CopyFrom(ServiceModelExtensionElement)
  fullName: CoreWCF.Configuration.ServiceModelExtensionElement.CopyFrom(CoreWCF.Configuration.ServiceModelExtensionElement)
  spec.csharp:
  - uid: CoreWCF.Configuration.ServiceModelExtensionElement.CopyFrom(CoreWCF.Configuration.ServiceModelExtensionElement)
    name: CopyFrom
    nameWithType: ServiceModelExtensionElement.CopyFrom
    fullName: CoreWCF.Configuration.ServiceModelExtensionElement.CopyFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Configuration.ServiceModelExtensionElement
    name: ServiceModelExtensionElement
    nameWithType: ServiceModelExtensionElement
    fullName: CoreWCF.Configuration.ServiceModelExtensionElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Configuration.ServiceModelExtensionElement.CopyFrom(CoreWCF.Configuration.ServiceModelExtensionElement)
    name: CopyFrom
    nameWithType: ServiceModelExtensionElement.CopyFrom
    fullName: CoreWCF.Configuration.ServiceModelExtensionElement.CopyFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Configuration.ServiceModelExtensionElement
    name: ServiceModelExtensionElement
    nameWithType: ServiceModelExtensionElement
    fullName: CoreWCF.Configuration.ServiceModelExtensionElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Configuration.SslStreamSecurityElement.CopyFrom*
  commentId: Overload:CoreWCF.Configuration.SslStreamSecurityElement.CopyFrom
  isExternal: true
  name: CopyFrom
  nameWithType: SslStreamSecurityElement.CopyFrom
  fullName: CoreWCF.Configuration.SslStreamSecurityElement.CopyFrom
- uid: CoreWCF.Configuration.BindingElementExtensionElement.InitializeFrom(CoreWCF.Channels.BindingElement)
  commentId: M:CoreWCF.Configuration.BindingElementExtensionElement.InitializeFrom(CoreWCF.Channels.BindingElement)
  parent: CoreWCF.Configuration.BindingElementExtensionElement
  isExternal: true
  name: InitializeFrom(BindingElement)
  nameWithType: BindingElementExtensionElement.InitializeFrom(BindingElement)
  fullName: CoreWCF.Configuration.BindingElementExtensionElement.InitializeFrom(CoreWCF.Channels.BindingElement)
  spec.csharp:
  - uid: CoreWCF.Configuration.BindingElementExtensionElement.InitializeFrom(CoreWCF.Channels.BindingElement)
    name: InitializeFrom
    nameWithType: BindingElementExtensionElement.InitializeFrom
    fullName: CoreWCF.Configuration.BindingElementExtensionElement.InitializeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingElement
    name: BindingElement
    nameWithType: BindingElement
    fullName: CoreWCF.Channels.BindingElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Configuration.BindingElementExtensionElement.InitializeFrom(CoreWCF.Channels.BindingElement)
    name: InitializeFrom
    nameWithType: BindingElementExtensionElement.InitializeFrom
    fullName: CoreWCF.Configuration.BindingElementExtensionElement.InitializeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingElement
    name: BindingElement
    nameWithType: BindingElement
    fullName: CoreWCF.Channels.BindingElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Configuration.SslStreamSecurityElement.InitializeFrom*
  commentId: Overload:CoreWCF.Configuration.SslStreamSecurityElement.InitializeFrom
  isExternal: true
  name: InitializeFrom
  nameWithType: SslStreamSecurityElement.InitializeFrom
  fullName: CoreWCF.Configuration.SslStreamSecurityElement.InitializeFrom
- uid: CoreWCF.Configuration.SslStreamSecurityElement.RequireClientCertificate*
  commentId: Overload:CoreWCF.Configuration.SslStreamSecurityElement.RequireClientCertificate
  isExternal: true
  name: RequireClientCertificate
  nameWithType: SslStreamSecurityElement.RequireClientCertificate
  fullName: CoreWCF.Configuration.SslStreamSecurityElement.RequireClientCertificate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.Configuration.SslStreamSecurityElement.SslProtocols*
  commentId: Overload:CoreWCF.Configuration.SslStreamSecurityElement.SslProtocols
  isExternal: true
  name: SslProtocols
  nameWithType: SslStreamSecurityElement.SslProtocols
  fullName: CoreWCF.Configuration.SslStreamSecurityElement.SslProtocols
- uid: System.Security.Authentication.SslProtocols
  isExternal: true
  name: SslProtocols
  nameWithType: SslProtocols
  fullName: System.Security.Authentication.SslProtocols
- uid: CoreWCF.Configuration.BindingElementExtensionElement.BindingElementType
  commentId: P:CoreWCF.Configuration.BindingElementExtensionElement.BindingElementType
  parent: CoreWCF.Configuration.BindingElementExtensionElement
  isExternal: true
  name: BindingElementType
  nameWithType: BindingElementExtensionElement.BindingElementType
  fullName: CoreWCF.Configuration.BindingElementExtensionElement.BindingElementType
- uid: CoreWCF.Configuration.SslStreamSecurityElement.BindingElementType*
  commentId: Overload:CoreWCF.Configuration.SslStreamSecurityElement.BindingElementType
  isExternal: true
  name: BindingElementType
  nameWithType: SslStreamSecurityElement.BindingElementType
  fullName: CoreWCF.Configuration.SslStreamSecurityElement.BindingElementType
- uid: System.Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
