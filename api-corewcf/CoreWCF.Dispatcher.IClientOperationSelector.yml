### YamlMime:ManagedReference
items:
- uid: CoreWCF.Dispatcher.IClientOperationSelector
  commentId: T:CoreWCF.Dispatcher.IClientOperationSelector
  id: IClientOperationSelector
  parent: CoreWCF.Dispatcher
  children:
  - CoreWCF.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection
  - CoreWCF.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase,System.Object[])
  langs:
  - csharp
  - vb
  name: IClientOperationSelector
  nameWithType: IClientOperationSelector
  fullName: CoreWCF.Dispatcher.IClientOperationSelector
  type: Interface
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  summary: Defines the contract for an operation selector.
  remarks: "Implement the &lt;xref:CoreWCF.Dispatcher.IClientOperationSelector> interface to create a custom operation selector that can be attached to the &lt;xref:CoreWCF.Dispatcher.ClientRuntime.OperationSelector%2A> property to choose contract operations to invoke based upon the proxy method called.  \n\n"
  syntax:
    content: public interface IClientOperationSelector
    content.vb: Public Interface IClientOperationSelector
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: CoreWCF.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase,System.Object[])
  commentId: M:CoreWCF.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase,System.Object[])
  id: SelectOperation(System.Reflection.MethodBase,System.Object[])
  parent: CoreWCF.Dispatcher.IClientOperationSelector
  langs:
  - csharp
  - vb
  name: SelectOperation(MethodBase, Object[])
  nameWithType: IClientOperationSelector.SelectOperation(MethodBase, Object[])
  fullName: CoreWCF.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase, System.Object[])
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: string SelectOperation(MethodBase method, object[] parameters)
    parameters:
    - id: method
      type: System.Reflection.MethodBase
    - id: parameters
      type: System.Object[]
    return:
      type: System.String
    content.vb: Function SelectOperation(method As MethodBase, parameters As Object()) As String
  overload: CoreWCF.Dispatcher.IClientOperationSelector.SelectOperation*
  nameWithType.vb: IClientOperationSelector.SelectOperation(MethodBase, Object())
  fullName.vb: CoreWCF.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase, System.Object())
  name.vb: SelectOperation(MethodBase, Object())
- uid: CoreWCF.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection
  commentId: P:CoreWCF.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection
  id: AreParametersRequiredForSelection
  parent: CoreWCF.Dispatcher.IClientOperationSelector
  langs:
  - csharp
  - vb
  name: AreParametersRequiredForSelection
  nameWithType: IClientOperationSelector.AreParametersRequiredForSelection
  fullName: CoreWCF.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: bool AreParametersRequiredForSelection { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property AreParametersRequiredForSelection As Boolean
  overload: CoreWCF.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: CoreWCF.Dispatcher
  commentId: N:CoreWCF.Dispatcher
  isExternal: true
  name: CoreWCF.Dispatcher
  nameWithType: CoreWCF.Dispatcher
  fullName: CoreWCF.Dispatcher
- uid: CoreWCF.Dispatcher.IClientOperationSelector.SelectOperation*
  commentId: Overload:CoreWCF.Dispatcher.IClientOperationSelector.SelectOperation
  isExternal: true
  name: SelectOperation
  nameWithType: IClientOperationSelector.SelectOperation
  fullName: CoreWCF.Dispatcher.IClientOperationSelector.SelectOperation
- uid: System.Reflection.MethodBase
  commentId: '!:System.Reflection.MethodBase'
  isExternal: true
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection*
  commentId: Overload:CoreWCF.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection
  isExternal: true
  name: AreParametersRequiredForSelection
  nameWithType: IClientOperationSelector.AreParametersRequiredForSelection
  fullName: CoreWCF.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
