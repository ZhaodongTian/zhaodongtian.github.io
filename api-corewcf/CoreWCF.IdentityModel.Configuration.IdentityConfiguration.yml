### YamlMime:ManagedReference
items:
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  commentId: T:CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  id: IdentityConfiguration
  parent: CoreWCF.IdentityModel.Configuration
  children:
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.#ctor(System.Collections.Generic.IEnumerable{CoreWCF.IdentityModel.Tokens.SecurityTokenHandler})
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.AudienceRestriction
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Caches
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.CertificateValidationMode
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.CertificateValidator
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultCertificateValidationMode
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultIssuerNameRegistryType
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultMaxClockSkew
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultRevocationMode
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultServiceName
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultTrustedStoreLocation
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DetectReplayedTokens
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Initialize
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IsInitialized
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IssuerNameRegistry
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IssuerTokenResolver
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.MaxClockSkew
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Name
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.RevocationMode
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SaveBootstrapContext
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.ServiceTokenResolver
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.TokenReplayCacheExpirationPeriod
  - CoreWCF.IdentityModel.Configuration.IdentityConfiguration.TrustedStoreLocation
  langs:
  - csharp
  - vb
  name: IdentityConfiguration
  nameWithType: IdentityConfiguration
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  summary: "\nDefines the collection of configurable properties controlling the behavior of the Windows Identity Foundation.\n"
  syntax:
    content: 'public class IdentityConfiguration : Object'
    content.vb: >-
      Public Class IdentityConfiguration
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultServiceName
  commentId: F:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultServiceName
  id: DefaultServiceName
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: DefaultServiceName
  nameWithType: IdentityConfiguration.DefaultServiceName
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultServiceName
  type: Field
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  syntax:
    content: public const string DefaultServiceName = ""
    return:
      type: System.String
    content.vb: Public Const DefaultServiceName As String = ""
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultMaxClockSkew
  commentId: F:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultMaxClockSkew
  id: DefaultMaxClockSkew
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: DefaultMaxClockSkew
  nameWithType: IdentityConfiguration.DefaultMaxClockSkew
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultMaxClockSkew
  type: Field
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  syntax:
    content: public static readonly TimeSpan DefaultMaxClockSkew
    return:
      type: System.TimeSpan
    content.vb: Public Shared ReadOnly DefaultMaxClockSkew As TimeSpan
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultCertificateValidationMode
  commentId: F:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultCertificateValidationMode
  id: DefaultCertificateValidationMode
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: DefaultCertificateValidationMode
  nameWithType: IdentityConfiguration.DefaultCertificateValidationMode
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultCertificateValidationMode
  type: Field
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  syntax:
    content: public static readonly X509CertificateValidationMode DefaultCertificateValidationMode
    return:
      type: CoreWCF.Security.X509CertificateValidationMode
    content.vb: Public Shared ReadOnly DefaultCertificateValidationMode As X509CertificateValidationMode
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultIssuerNameRegistryType
  commentId: F:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultIssuerNameRegistryType
  id: DefaultIssuerNameRegistryType
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: DefaultIssuerNameRegistryType
  nameWithType: IdentityConfiguration.DefaultIssuerNameRegistryType
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultIssuerNameRegistryType
  type: Field
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  syntax:
    content: public static readonly Type DefaultIssuerNameRegistryType
    return:
      type: System.Type
    content.vb: Public Shared ReadOnly DefaultIssuerNameRegistryType As Type
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultRevocationMode
  commentId: F:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultRevocationMode
  id: DefaultRevocationMode
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: DefaultRevocationMode
  nameWithType: IdentityConfiguration.DefaultRevocationMode
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultRevocationMode
  type: Field
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  syntax:
    content: public static readonly X509RevocationMode DefaultRevocationMode
    return:
      type: System.Security.Cryptography.X509Certificates.X509RevocationMode
    content.vb: Public Shared ReadOnly DefaultRevocationMode As X509RevocationMode
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultTrustedStoreLocation
  commentId: F:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultTrustedStoreLocation
  id: DefaultTrustedStoreLocation
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: DefaultTrustedStoreLocation
  nameWithType: IdentityConfiguration.DefaultTrustedStoreLocation
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DefaultTrustedStoreLocation
  type: Field
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  syntax:
    content: public static readonly StoreLocation DefaultTrustedStoreLocation
    return:
      type: System.Security.Cryptography.X509Certificates.StoreLocation
    content.vb: Public Shared ReadOnly DefaultTrustedStoreLocation As StoreLocation
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.#ctor(System.Collections.Generic.IEnumerable{CoreWCF.IdentityModel.Tokens.SecurityTokenHandler})
  commentId: M:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.#ctor(System.Collections.Generic.IEnumerable{CoreWCF.IdentityModel.Tokens.SecurityTokenHandler})
  id: '#ctor(System.Collections.Generic.IEnumerable{CoreWCF.IdentityModel.Tokens.SecurityTokenHandler})'
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: IdentityConfiguration(IEnumerable<SecurityTokenHandler>)
  nameWithType: IdentityConfiguration.IdentityConfiguration(IEnumerable<SecurityTokenHandler>)
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IdentityConfiguration(System.Collections.Generic.IEnumerable<CoreWCF.IdentityModel.Tokens.SecurityTokenHandler>)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  syntax:
    content: public IdentityConfiguration(IEnumerable<SecurityTokenHandler> securityTokenHandlers)
    parameters:
    - id: securityTokenHandlers
      type: System.Collections.Generic.IEnumerable{CoreWCF.IdentityModel.Tokens.SecurityTokenHandler}
    content.vb: Public Sub New(securityTokenHandlers As IEnumerable(Of SecurityTokenHandler))
  overload: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.#ctor*
  nameWithType.vb: IdentityConfiguration.IdentityConfiguration(IEnumerable(Of SecurityTokenHandler))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IdentityConfiguration(System.Collections.Generic.IEnumerable(Of CoreWCF.IdentityModel.Tokens.SecurityTokenHandler))
  name.vb: IdentityConfiguration(IEnumerable(Of SecurityTokenHandler))
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Initialize
  commentId: M:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Initialize
  id: Initialize
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: IdentityConfiguration.Initialize()
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Initialize()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  summary: "\nUpdates properties in the <xref href=\"CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\" data-throw-if-not-resolved=\"false\"></xref> objects for the \n<xref href=\"CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollection\" data-throw-if-not-resolved=\"false\"></xref> objects contained in \n<xref href=\"CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager\" data-throw-if-not-resolved=\"false\"></xref> to be consistent with the property\nvalues on this <xref href=\"CoreWCF.IdentityModel.Configuration.IdentityConfiguration\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  remarks: "\nThis method should be invoked prior to using these token handlers\nfor token processing.\n"
  syntax:
    content: public virtual void Initialize()
    content.vb: Public Overridable Sub Initialize
  overload: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Initialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: If this method is invoked more than once.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.AudienceRestriction
  commentId: P:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.AudienceRestriction
  id: AudienceRestriction
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: AudienceRestriction
  nameWithType: IdentityConfiguration.AudienceRestriction
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.AudienceRestriction
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  summary: "\nGets or sets the AudienceRestriction.\n"
  syntax:
    content: public AudienceRestriction AudienceRestriction { get; set; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Tokens.AudienceRestriction
    content.vb: Public Property AudienceRestriction As AudienceRestriction
  overload: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.AudienceRestriction*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Caches
  commentId: P:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Caches
  id: Caches
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: Caches
  nameWithType: IdentityConfiguration.Caches
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Caches
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  summary: "\nGets the Caches configured.\n"
  syntax:
    content: public IdentityModelCaches Caches { get; set; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Configuration.IdentityModelCaches
    content.vb: Public Property Caches As IdentityModelCaches
  overload: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Caches*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.CertificateValidationMode
  commentId: P:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.CertificateValidationMode
  id: CertificateValidationMode
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: CertificateValidationMode
  nameWithType: IdentityConfiguration.CertificateValidationMode
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.CertificateValidationMode
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  summary: "\nGets or sets the certificate validation mode used by handlers to validate issuer certificates\n"
  syntax:
    content: public X509CertificateValidationMode CertificateValidationMode { get; set; }
    parameters: []
    return:
      type: CoreWCF.Security.X509CertificateValidationMode
    content.vb: Public Property CertificateValidationMode As X509CertificateValidationMode
  overload: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.CertificateValidationMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.CertificateValidator
  commentId: P:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.CertificateValidator
  id: CertificateValidator
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: CertificateValidator
  nameWithType: IdentityConfiguration.CertificateValidator
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.CertificateValidator
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  summary: "\nGets or sets the certificate validator used by handlers to validate issuer certificates\n"
  syntax:
    content: public X509CertificateValidator CertificateValidator { get; set; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Selectors.X509CertificateValidator
    content.vb: Public Property CertificateValidator As X509CertificateValidator
  overload: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.CertificateValidator*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DetectReplayedTokens
  commentId: P:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DetectReplayedTokens
  id: DetectReplayedTokens
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: DetectReplayedTokens
  nameWithType: IdentityConfiguration.DetectReplayedTokens
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DetectReplayedTokens
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  summary: "\nGets or Sets detection of replaying of tokens by handlers in the default handler configuration.\n"
  syntax:
    content: public bool DetectReplayedTokens { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DetectReplayedTokens As Boolean
  overload: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DetectReplayedTokens*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IsInitialized
  commentId: P:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IsInitialized
  id: IsInitialized
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: IsInitialized
  nameWithType: IdentityConfiguration.IsInitialized
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IsInitialized
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  summary: "\nDetermines if <xref href=\"CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Initialize\" data-throw-if-not-resolved=\"false\"></xref> has been called.\n"
  syntax:
    content: public virtual bool IsInitialized { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property IsInitialized As Boolean
  overload: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IsInitialized*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.MaxClockSkew
  commentId: P:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.MaxClockSkew
  id: MaxClockSkew
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: MaxClockSkew
  nameWithType: IdentityConfiguration.MaxClockSkew
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.MaxClockSkew
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  summary: "\nGets or sets the maximum allowable time difference between the \nsystem clocks of the two parties that are communicating.\n"
  syntax:
    content: public TimeSpan MaxClockSkew { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property MaxClockSkew As TimeSpan
  overload: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.MaxClockSkew*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Name
  commentId: P:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Name
  id: Name
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IdentityConfiguration.Name
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Name
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  summary: "\nGets or sets the service name of this configuration.\n"
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IssuerNameRegistry
  commentId: P:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IssuerNameRegistry
  id: IssuerNameRegistry
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: IssuerNameRegistry
  nameWithType: IdentityConfiguration.IssuerNameRegistry
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IssuerNameRegistry
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  summary: "\nGets or sets the IssuerNameRegistry used to resolve issuer names.\n"
  syntax:
    content: public IssuerNameRegistry IssuerNameRegistry { get; set; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Tokens.IssuerNameRegistry
    content.vb: Public Property IssuerNameRegistry As IssuerNameRegistry
  overload: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IssuerNameRegistry*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate
  commentId: P:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate
  id: ServiceCertificate
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: ServiceCertificate
  nameWithType: IdentityConfiguration.ServiceCertificate
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  summary: "\nThe service certificate to initialize the ServiceTokenResolver and the SessionSecurityTokenHandler.\n"
  syntax:
    content: public X509Certificate2 ServiceCertificate { get; set; }
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
    content.vb: Public Property ServiceCertificate As X509Certificate2
  overload: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IssuerTokenResolver
  commentId: P:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IssuerTokenResolver
  id: IssuerTokenResolver
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: IssuerTokenResolver
  nameWithType: IdentityConfiguration.IssuerTokenResolver
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IssuerTokenResolver
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  summary: "\nGets or Sets the Issuer token resolver.\n"
  syntax:
    content: public SecurityTokenResolver IssuerTokenResolver { get; set; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Selectors.SecurityTokenResolver
    content.vb: Public Property IssuerTokenResolver As SecurityTokenResolver
  overload: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IssuerTokenResolver*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.RevocationMode
  commentId: P:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.RevocationMode
  id: RevocationMode
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: RevocationMode
  nameWithType: IdentityConfiguration.RevocationMode
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.RevocationMode
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  summary: "\nGets or sets the revocation mode used by handlers to validate issuer certificates\n"
  syntax:
    content: public X509RevocationMode RevocationMode { get; set; }
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509RevocationMode
    content.vb: Public Property RevocationMode As X509RevocationMode
  overload: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.RevocationMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.ServiceTokenResolver
  commentId: P:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.ServiceTokenResolver
  id: ServiceTokenResolver
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: ServiceTokenResolver
  nameWithType: IdentityConfiguration.ServiceTokenResolver
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.ServiceTokenResolver
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  summary: "\nGets or Sets the Service token resolver.\n"
  syntax:
    content: public SecurityTokenResolver ServiceTokenResolver { get; set; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Selectors.SecurityTokenResolver
    content.vb: Public Property ServiceTokenResolver As SecurityTokenResolver
  overload: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.ServiceTokenResolver*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SaveBootstrapContext
  commentId: P:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SaveBootstrapContext
  id: SaveBootstrapContext
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: SaveBootstrapContext
  nameWithType: IdentityConfiguration.SaveBootstrapContext
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SaveBootstrapContext
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  summary: "\nGets or sets if BootstrapContext is saved in the ClaimsIdentity and Sessions after token validation.\n"
  syntax:
    content: public bool SaveBootstrapContext { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SaveBootstrapContext As Boolean
  overload: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SaveBootstrapContext*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager
  commentId: P:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager
  id: SecurityTokenHandlerCollectionManager
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: SecurityTokenHandlerCollectionManager
  nameWithType: IdentityConfiguration.SecurityTokenHandlerCollectionManager
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  summary: "\nThe <xref href=\"CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager\" data-throw-if-not-resolved=\"false\"></xref> containing the set of <xref href=\"CoreWCF.IdentityModel.Tokens.SecurityTokenHandler\" data-throw-if-not-resolved=\"false\"></xref>\nobjects used for serializing and validating tokens found in WS-Trust messages.\n"
  syntax:
    content: public SecurityTokenHandlerCollectionManager SecurityTokenHandlerCollectionManager { get; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
    content.vb: Public ReadOnly Property SecurityTokenHandlerCollectionManager As SecurityTokenHandlerCollectionManager
  overload: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers
  commentId: P:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers
  id: SecurityTokenHandlers
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: SecurityTokenHandlers
  nameWithType: IdentityConfiguration.SecurityTokenHandlers
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  summary: "\nThe <xref href=\"CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollection\" data-throw-if-not-resolved=\"false\"></xref> collection of <xref href=\"CoreWCF.IdentityModel.Tokens.SecurityTokenHandler\" data-throw-if-not-resolved=\"false\"></xref>\nobjects used for serializing and validating tokens found in WS-Trust messages.\nIf user wants to register their own token handler, they\ncan simply add their own handler to this collection.\n"
  syntax:
    content: public SecurityTokenHandlerCollection SecurityTokenHandlers { get; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollection
    content.vb: Public ReadOnly Property SecurityTokenHandlers As SecurityTokenHandlerCollection
  overload: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.TokenReplayCacheExpirationPeriod
  commentId: P:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.TokenReplayCacheExpirationPeriod
  id: TokenReplayCacheExpirationPeriod
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: TokenReplayCacheExpirationPeriod
  nameWithType: IdentityConfiguration.TokenReplayCacheExpirationPeriod
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.TokenReplayCacheExpirationPeriod
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  summary: "\nGets or Sets the expiration period for items placed in the TokenReplayCache.\n"
  syntax:
    content: public TimeSpan TokenReplayCacheExpirationPeriod { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property TokenReplayCacheExpirationPeriod As TimeSpan
  overload: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.TokenReplayCacheExpirationPeriod*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.TrustedStoreLocation
  commentId: P:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.TrustedStoreLocation
  id: TrustedStoreLocation
  parent: CoreWCF.IdentityModel.Configuration.IdentityConfiguration
  langs:
  - csharp
  - vb
  name: TrustedStoreLocation
  nameWithType: IdentityConfiguration.TrustedStoreLocation
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.TrustedStoreLocation
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Configuration
  summary: "\nGets or sets the trusted store location used by handlers to validate issuer certificates\n"
  syntax:
    content: public StoreLocation TrustedStoreLocation { get; set; }
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.StoreLocation
    content.vb: Public Property TrustedStoreLocation As StoreLocation
  overload: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.TrustedStoreLocation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: CoreWCF.IdentityModel.Configuration
  commentId: N:CoreWCF.IdentityModel.Configuration
  isExternal: true
  name: CoreWCF.IdentityModel.Configuration
  nameWithType: CoreWCF.IdentityModel.Configuration
  fullName: CoreWCF.IdentityModel.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: CoreWCF.Security.X509CertificateValidationMode
  commentId: T:CoreWCF.Security.X509CertificateValidationMode
  parent: CoreWCF.Security
  isExternal: true
  name: X509CertificateValidationMode
  nameWithType: X509CertificateValidationMode
  fullName: CoreWCF.Security.X509CertificateValidationMode
- uid: CoreWCF.Security
  commentId: N:CoreWCF.Security
  isExternal: true
  name: CoreWCF.Security
  nameWithType: CoreWCF.Security
  fullName: CoreWCF.Security
- uid: System.Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Cryptography.X509Certificates.X509RevocationMode
  isExternal: true
  name: X509RevocationMode
  nameWithType: X509RevocationMode
  fullName: System.Security.Cryptography.X509Certificates.X509RevocationMode
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  isExternal: true
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.#ctor*
  commentId: Overload:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.#ctor
  isExternal: true
  name: IdentityConfiguration
  nameWithType: IdentityConfiguration.IdentityConfiguration
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IdentityConfiguration
- uid: System.Collections.Generic.IEnumerable{CoreWCF.IdentityModel.Tokens.SecurityTokenHandler}
  commentId: '!:System.Collections.Generic.IEnumerable{CoreWCF.IdentityModel.Tokens.SecurityTokenHandler}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SecurityTokenHandler>
  nameWithType: IEnumerable<SecurityTokenHandler>
  fullName: System.Collections.Generic.IEnumerable<CoreWCF.IdentityModel.Tokens.SecurityTokenHandler>
  nameWithType.vb: IEnumerable(Of SecurityTokenHandler)
  fullName.vb: System.Collections.Generic.IEnumerable(Of CoreWCF.IdentityModel.Tokens.SecurityTokenHandler)
  name.vb: IEnumerable(Of SecurityTokenHandler)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
    name: SecurityTokenHandler
    nameWithType: SecurityTokenHandler
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
    name: SecurityTokenHandler
    nameWithType: SecurityTokenHandler
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Initialize*
  commentId: Overload:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Initialize
  isExternal: true
  name: Initialize
  nameWithType: IdentityConfiguration.Initialize
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Initialize
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.AudienceRestriction*
  commentId: Overload:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.AudienceRestriction
  isExternal: true
  name: AudienceRestriction
  nameWithType: IdentityConfiguration.AudienceRestriction
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.AudienceRestriction
- uid: CoreWCF.IdentityModel.Tokens.AudienceRestriction
  commentId: T:CoreWCF.IdentityModel.Tokens.AudienceRestriction
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: AudienceRestriction
  nameWithType: AudienceRestriction
  fullName: CoreWCF.IdentityModel.Tokens.AudienceRestriction
- uid: CoreWCF.IdentityModel.Tokens
  commentId: N:CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: CoreWCF.IdentityModel.Tokens
  nameWithType: CoreWCF.IdentityModel.Tokens
  fullName: CoreWCF.IdentityModel.Tokens
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Caches*
  commentId: Overload:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Caches
  isExternal: true
  name: Caches
  nameWithType: IdentityConfiguration.Caches
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Caches
- uid: CoreWCF.IdentityModel.Configuration.IdentityModelCaches
  commentId: T:CoreWCF.IdentityModel.Configuration.IdentityModelCaches
  parent: CoreWCF.IdentityModel.Configuration
  isExternal: true
  name: IdentityModelCaches
  nameWithType: IdentityModelCaches
  fullName: CoreWCF.IdentityModel.Configuration.IdentityModelCaches
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.CertificateValidationMode*
  commentId: Overload:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.CertificateValidationMode
  isExternal: true
  name: CertificateValidationMode
  nameWithType: IdentityConfiguration.CertificateValidationMode
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.CertificateValidationMode
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.CertificateValidator*
  commentId: Overload:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.CertificateValidator
  isExternal: true
  name: CertificateValidator
  nameWithType: IdentityConfiguration.CertificateValidator
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.CertificateValidator
- uid: CoreWCF.IdentityModel.Selectors.X509CertificateValidator
  commentId: T:CoreWCF.IdentityModel.Selectors.X509CertificateValidator
  parent: CoreWCF.IdentityModel.Selectors
  isExternal: true
  name: X509CertificateValidator
  nameWithType: X509CertificateValidator
  fullName: CoreWCF.IdentityModel.Selectors.X509CertificateValidator
- uid: CoreWCF.IdentityModel.Selectors
  commentId: N:CoreWCF.IdentityModel.Selectors
  isExternal: true
  name: CoreWCF.IdentityModel.Selectors
  nameWithType: CoreWCF.IdentityModel.Selectors
  fullName: CoreWCF.IdentityModel.Selectors
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DetectReplayedTokens*
  commentId: Overload:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DetectReplayedTokens
  isExternal: true
  name: DetectReplayedTokens
  nameWithType: IdentityConfiguration.DetectReplayedTokens
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.DetectReplayedTokens
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IsInitialized*
  commentId: Overload:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IsInitialized
  isExternal: true
  name: IsInitialized
  nameWithType: IdentityConfiguration.IsInitialized
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IsInitialized
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.MaxClockSkew*
  commentId: Overload:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.MaxClockSkew
  isExternal: true
  name: MaxClockSkew
  nameWithType: IdentityConfiguration.MaxClockSkew
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.MaxClockSkew
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Name*
  commentId: Overload:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Name
  isExternal: true
  name: Name
  nameWithType: IdentityConfiguration.Name
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.Name
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IssuerNameRegistry*
  commentId: Overload:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IssuerNameRegistry
  isExternal: true
  name: IssuerNameRegistry
  nameWithType: IdentityConfiguration.IssuerNameRegistry
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IssuerNameRegistry
- uid: CoreWCF.IdentityModel.Tokens.IssuerNameRegistry
  commentId: T:CoreWCF.IdentityModel.Tokens.IssuerNameRegistry
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: IssuerNameRegistry
  nameWithType: IssuerNameRegistry
  fullName: CoreWCF.IdentityModel.Tokens.IssuerNameRegistry
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate*
  commentId: Overload:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate
  isExternal: true
  name: ServiceCertificate
  nameWithType: IdentityConfiguration.ServiceCertificate
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IssuerTokenResolver*
  commentId: Overload:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IssuerTokenResolver
  isExternal: true
  name: IssuerTokenResolver
  nameWithType: IdentityConfiguration.IssuerTokenResolver
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.IssuerTokenResolver
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenResolver
  commentId: T:CoreWCF.IdentityModel.Selectors.SecurityTokenResolver
  parent: CoreWCF.IdentityModel.Selectors
  isExternal: true
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenResolver
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.RevocationMode*
  commentId: Overload:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.RevocationMode
  isExternal: true
  name: RevocationMode
  nameWithType: IdentityConfiguration.RevocationMode
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.RevocationMode
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.ServiceTokenResolver*
  commentId: Overload:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.ServiceTokenResolver
  isExternal: true
  name: ServiceTokenResolver
  nameWithType: IdentityConfiguration.ServiceTokenResolver
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.ServiceTokenResolver
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SaveBootstrapContext*
  commentId: Overload:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SaveBootstrapContext
  isExternal: true
  name: SaveBootstrapContext
  nameWithType: IdentityConfiguration.SaveBootstrapContext
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SaveBootstrapContext
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager*
  commentId: Overload:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager
  isExternal: true
  name: SecurityTokenHandlerCollectionManager
  nameWithType: IdentityConfiguration.SecurityTokenHandlerCollectionManager
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SecurityTokenHandlerCollectionManager
  nameWithType: SecurityTokenHandlerCollectionManager
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*
  commentId: Overload:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers
  isExternal: true
  name: SecurityTokenHandlers
  nameWithType: IdentityConfiguration.SecurityTokenHandlers
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollection
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollection
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SecurityTokenHandlerCollection
  nameWithType: SecurityTokenHandlerCollection
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerCollection
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.TokenReplayCacheExpirationPeriod*
  commentId: Overload:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.TokenReplayCacheExpirationPeriod
  isExternal: true
  name: TokenReplayCacheExpirationPeriod
  nameWithType: IdentityConfiguration.TokenReplayCacheExpirationPeriod
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.TokenReplayCacheExpirationPeriod
- uid: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.TrustedStoreLocation*
  commentId: Overload:CoreWCF.IdentityModel.Configuration.IdentityConfiguration.TrustedStoreLocation
  isExternal: true
  name: TrustedStoreLocation
  nameWithType: IdentityConfiguration.TrustedStoreLocation
  fullName: CoreWCF.IdentityModel.Configuration.IdentityConfiguration.TrustedStoreLocation
