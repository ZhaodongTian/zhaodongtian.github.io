### YamlMime:ManagedReference
items:
- uid: CoreWCF.IdentityModel.Tokens.EncryptingCredentials
  commentId: T:CoreWCF.IdentityModel.Tokens.EncryptingCredentials
  id: EncryptingCredentials
  parent: CoreWCF.IdentityModel.Tokens
  children:
  - CoreWCF.IdentityModel.Tokens.EncryptingCredentials.#ctor
  - CoreWCF.IdentityModel.Tokens.EncryptingCredentials.#ctor(CoreWCF.IdentityModel.Tokens.SecurityKey,CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)
  - CoreWCF.IdentityModel.Tokens.EncryptingCredentials.Algorithm
  - CoreWCF.IdentityModel.Tokens.EncryptingCredentials.SecurityKey
  - CoreWCF.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier
  langs:
  - csharp
  - vb
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials
  fullName: CoreWCF.IdentityModel.Tokens.EncryptingCredentials
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nThis class defines the encrypting credentials which can be used to \nencrypt the proof key. It is very similar to SigningCredentials class defined \nin System.IdentityModel.dll\n"
  syntax:
    content: 'public class EncryptingCredentials : Object'
    content.vb: >-
      Public Class EncryptingCredentials
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.#ctor
  commentId: M:CoreWCF.IdentityModel.Tokens.EncryptingCredentials.#ctor
  id: '#ctor'
  parent: CoreWCF.IdentityModel.Tokens.EncryptingCredentials
  langs:
  - csharp
  - vb
  name: EncryptingCredentials()
  nameWithType: EncryptingCredentials.EncryptingCredentials()
  fullName: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.EncryptingCredentials()
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nConstructor for easy subclassing.\n"
  syntax:
    content: public EncryptingCredentials()
    content.vb: Public Sub New
  overload: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.#ctor(CoreWCF.IdentityModel.Tokens.SecurityKey,CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)
  commentId: M:CoreWCF.IdentityModel.Tokens.EncryptingCredentials.#ctor(CoreWCF.IdentityModel.Tokens.SecurityKey,CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)
  id: '#ctor(CoreWCF.IdentityModel.Tokens.SecurityKey,CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)'
  parent: CoreWCF.IdentityModel.Tokens.EncryptingCredentials
  langs:
  - csharp
  - vb
  name: EncryptingCredentials(SecurityKey, SecurityKeyIdentifier, String)
  nameWithType: EncryptingCredentials.EncryptingCredentials(SecurityKey, SecurityKeyIdentifier, String)
  fullName: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.EncryptingCredentials(CoreWCF.IdentityModel.Tokens.SecurityKey, CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier, System.String)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nConstructs an EncryptingCredentials with a security key, a security key identifier and\nthe encryption algorithm.\n"
  syntax:
    content: public EncryptingCredentials(SecurityKey key, SecurityKeyIdentifier keyIdentifier, string algorithm)
    parameters:
    - id: key
      type: CoreWCF.IdentityModel.Tokens.SecurityKey
      description: A security key for encryption.
    - id: keyIdentifier
      type: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
      description: A security key identifier for the encryption key.
    - id: algorithm
      type: System.String
      description: The encryption algorithm.
    content.vb: Public Sub New(key As SecurityKey, keyIdentifier As SecurityKeyIdentifier, algorithm As String)
  overload: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When key is null.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When key identifier is null.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When algorithm is null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.Algorithm
  commentId: P:CoreWCF.IdentityModel.Tokens.EncryptingCredentials.Algorithm
  id: Algorithm
  parent: CoreWCF.IdentityModel.Tokens.EncryptingCredentials
  langs:
  - csharp
  - vb
  name: Algorithm
  nameWithType: EncryptingCredentials.Algorithm
  fullName: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.Algorithm
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets or sets the encryption algorithm.\n"
  syntax:
    content: public string Algorithm { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Algorithm As String
  overload: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.Algorithm*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.SecurityKey
  commentId: P:CoreWCF.IdentityModel.Tokens.EncryptingCredentials.SecurityKey
  id: SecurityKey
  parent: CoreWCF.IdentityModel.Tokens.EncryptingCredentials
  langs:
  - csharp
  - vb
  name: SecurityKey
  nameWithType: EncryptingCredentials.SecurityKey
  fullName: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.SecurityKey
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets or sets the encryption key material.\n"
  syntax:
    content: public SecurityKey SecurityKey { get; set; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Tokens.SecurityKey
    content.vb: Public Property SecurityKey As SecurityKey
  overload: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.SecurityKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier
  commentId: P:CoreWCF.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier
  id: SecurityKeyIdentifier
  parent: CoreWCF.IdentityModel.Tokens.EncryptingCredentials
  langs:
  - csharp
  - vb
  name: SecurityKeyIdentifier
  nameWithType: EncryptingCredentials.SecurityKeyIdentifier
  fullName: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets or sets the SecurityKeyIdentifier that identifies the encrypting credential.\n"
  syntax:
    content: public SecurityKeyIdentifier SecurityKeyIdentifier { get; set; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
    content.vb: Public Property SecurityKeyIdentifier As SecurityKeyIdentifier
  overload: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: CoreWCF.IdentityModel.Tokens
  commentId: N:CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: CoreWCF.IdentityModel.Tokens
  nameWithType: CoreWCF.IdentityModel.Tokens
  fullName: CoreWCF.IdentityModel.Tokens
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.#ctor*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.EncryptingCredentials.#ctor
  isExternal: true
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials.EncryptingCredentials
  fullName: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.EncryptingCredentials
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: CoreWCF.IdentityModel.Tokens.SecurityKey
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityKey
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKey
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.Algorithm*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.EncryptingCredentials.Algorithm
  isExternal: true
  name: Algorithm
  nameWithType: EncryptingCredentials.Algorithm
  fullName: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.Algorithm
- uid: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.SecurityKey*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.EncryptingCredentials.SecurityKey
  isExternal: true
  name: SecurityKey
  nameWithType: EncryptingCredentials.SecurityKey
  fullName: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.SecurityKey
- uid: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier
  isExternal: true
  name: SecurityKeyIdentifier
  nameWithType: EncryptingCredentials.SecurityKeyIdentifier
  fullName: CoreWCF.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier
