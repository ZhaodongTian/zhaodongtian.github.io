### YamlMime:ManagedReference
items:
- uid: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  commentId: T:CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  id: SamlSecurityTokenAuthenticator
  parent: CoreWCF.IdentityModel.Selectors
  children:
  - CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator})
  - CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator},System.TimeSpan)
  - CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris
  - CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode
  - CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore(CoreWCF.IdentityModel.Tokens.SecurityToken)
  - CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier)
  - CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSetAsyc(CoreWCF.IdentityModel.Tokens.SecurityToken)
  - CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier)
  - CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentityAsync(CoreWCF.IdentityModel.Tokens.SecurityToken)
  - CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(Microsoft.IdentityModel.Tokens.Saml.SamlAudienceRestrictionCondition)
  - CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCoreAsync(CoreWCF.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  - vb
  name: SamlSecurityTokenAuthenticator
  nameWithType: SamlSecurityTokenAuthenticator
  fullName: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  summary: Authenticates a  security token.
  remarks: "Use the &lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator> class to authenticate &lt;xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens.  \n\n"
  syntax:
    content: 'public class SamlSecurityTokenAuthenticator : SecurityTokenAuthenticator'
    content.vb: >-
      Public Class SamlSecurityTokenAuthenticator
          Inherits SecurityTokenAuthenticator
  inheritance:
  - System.Object
  - CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator
  inheritedMembers:
  - CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  - CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  - CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenAsync(CoreWCF.IdentityModel.Tokens.SecurityToken)
  - CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(CoreWCF.IdentityModel.Tokens.SecurityToken)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator})
  commentId: M:CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator})
  id: '#ctor(System.Collections.Generic.IList{CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator})'
  parent: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  - vb
  name: SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>)
  nameWithType: SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>)
  fullName: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(System.Collections.Generic.IList<CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator>)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator> supportingAuthenticators)
    parameters:
    - id: supportingAuthenticators
      type: System.Collections.Generic.IList{CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator}
    content.vb: Public Sub New(supportingAuthenticators As IList(Of SecurityTokenAuthenticator))
  overload: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor*
  nameWithType.vb: SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList(Of SecurityTokenAuthenticator))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(System.Collections.Generic.IList(Of CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator))
  name.vb: SamlSecurityTokenAuthenticator(IList(Of SecurityTokenAuthenticator))
- uid: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator},System.TimeSpan)
  commentId: M:CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator},System.TimeSpan)
  id: '#ctor(System.Collections.Generic.IList{CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator},System.TimeSpan)'
  parent: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  - vb
  name: SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>, TimeSpan)
  nameWithType: SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>, TimeSpan)
  fullName: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(System.Collections.Generic.IList<CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator>, System.TimeSpan)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator> supportingAuthenticators, TimeSpan maxClockSkew)
    parameters:
    - id: supportingAuthenticators
      type: System.Collections.Generic.IList{CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator}
    - id: maxClockSkew
      type: System.TimeSpan
    content.vb: Public Sub New(supportingAuthenticators As IList(Of SecurityTokenAuthenticator), maxClockSkew As TimeSpan)
  overload: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor*
  nameWithType.vb: SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList(Of SecurityTokenAuthenticator), TimeSpan)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(System.Collections.Generic.IList(Of CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator), System.TimeSpan)
  name.vb: SamlSecurityTokenAuthenticator(IList(Of SecurityTokenAuthenticator), TimeSpan)
- uid: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore(CoreWCF.IdentityModel.Tokens.SecurityToken)
  commentId: M:CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore(CoreWCF.IdentityModel.Tokens.SecurityToken)
  id: CanValidateTokenCore(CoreWCF.IdentityModel.Tokens.SecurityToken)
  parent: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  - vb
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: SamlSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore(CoreWCF.IdentityModel.Tokens.SecurityToken)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: protected override bool CanValidateTokenCore(SecurityToken token)
    parameters:
    - id: token
      type: CoreWCF.IdentityModel.Tokens.SecurityToken
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function CanValidateTokenCore(token As SecurityToken) As Boolean
  overridden: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(CoreWCF.IdentityModel.Tokens.SecurityToken)
  overload: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCoreAsync(CoreWCF.IdentityModel.Tokens.SecurityToken)
  commentId: M:CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCoreAsync(CoreWCF.IdentityModel.Tokens.SecurityToken)
  id: ValidateTokenCoreAsync(CoreWCF.IdentityModel.Tokens.SecurityToken)
  parent: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  - vb
  name: ValidateTokenCoreAsync(SecurityToken)
  nameWithType: SamlSecurityTokenAuthenticator.ValidateTokenCoreAsync(SecurityToken)
  fullName: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCoreAsync(CoreWCF.IdentityModel.Tokens.SecurityToken)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: protected override ValueTask<ReadOnlyCollection<IAuthorizationPolicy>> ValidateTokenCoreAsync(SecurityToken token)
    parameters:
    - id: token
      type: CoreWCF.IdentityModel.Tokens.SecurityToken
    return:
      type: System.Threading.Tasks.ValueTask{System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy}}
    content.vb: Protected Overrides Function ValidateTokenCoreAsync(token As SecurityToken) As ValueTask(Of ReadOnlyCollection(Of IAuthorizationPolicy))
  overridden: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCoreAsync(CoreWCF.IdentityModel.Tokens.SecurityToken)
  overload: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCoreAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(Microsoft.IdentityModel.Tokens.Saml.SamlAudienceRestrictionCondition)
  commentId: M:CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(Microsoft.IdentityModel.Tokens.Saml.SamlAudienceRestrictionCondition)
  id: ValidateAudienceRestriction(Microsoft.IdentityModel.Tokens.Saml.SamlAudienceRestrictionCondition)
  parent: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  - vb
  name: ValidateAudienceRestriction(SamlAudienceRestrictionCondition)
  nameWithType: SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(SamlAudienceRestrictionCondition)
  fullName: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(Microsoft.IdentityModel.Tokens.Saml.SamlAudienceRestrictionCondition)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: protected virtual bool ValidateAudienceRestriction(SamlAudienceRestrictionCondition audienceRestrictionCondition)
    parameters:
    - id: audienceRestrictionCondition
      type: Microsoft.IdentityModel.Tokens.Saml.SamlAudienceRestrictionCondition
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function ValidateAudienceRestriction(audienceRestrictionCondition As SamlAudienceRestrictionCondition) As Boolean
  overload: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSetAsyc(CoreWCF.IdentityModel.Tokens.SecurityToken)
  commentId: M:CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSetAsyc(CoreWCF.IdentityModel.Tokens.SecurityToken)
  id: ResolveClaimSetAsyc(CoreWCF.IdentityModel.Tokens.SecurityToken)
  parent: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  - vb
  name: ResolveClaimSetAsyc(SecurityToken)
  nameWithType: SamlSecurityTokenAuthenticator.ResolveClaimSetAsyc(SecurityToken)
  fullName: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSetAsyc(CoreWCF.IdentityModel.Tokens.SecurityToken)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public virtual ValueTask<ClaimSet> ResolveClaimSetAsyc(SecurityToken token)
    parameters:
    - id: token
      type: CoreWCF.IdentityModel.Tokens.SecurityToken
    return:
      type: System.Threading.Tasks.ValueTask{CoreWCF.IdentityModel.Claims.ClaimSet}
    content.vb: Public Overridable Function ResolveClaimSetAsyc(token As SecurityToken) As ValueTask(Of ClaimSet)
  overload: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSetAsyc*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier)
  commentId: M:CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: ResolveClaimSet(CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  - vb
  name: ResolveClaimSet(SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityKeyIdentifier)
  fullName: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public virtual ClaimSet ResolveClaimSet(SecurityKeyIdentifier keyIdentifier)
    parameters:
    - id: keyIdentifier
      type: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
    return:
      type: CoreWCF.IdentityModel.Claims.ClaimSet
    content.vb: Public Overridable Function ResolveClaimSet(keyIdentifier As SecurityKeyIdentifier) As ClaimSet
  overload: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentityAsync(CoreWCF.IdentityModel.Tokens.SecurityToken)
  commentId: M:CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentityAsync(CoreWCF.IdentityModel.Tokens.SecurityToken)
  id: ResolveIdentityAsync(CoreWCF.IdentityModel.Tokens.SecurityToken)
  parent: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  - vb
  name: ResolveIdentityAsync(SecurityToken)
  nameWithType: SamlSecurityTokenAuthenticator.ResolveIdentityAsync(SecurityToken)
  fullName: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentityAsync(CoreWCF.IdentityModel.Tokens.SecurityToken)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public virtual ValueTask<IIdentity> ResolveIdentityAsync(SecurityToken token)
    parameters:
    - id: token
      type: CoreWCF.IdentityModel.Tokens.SecurityToken
    return:
      type: System.Threading.Tasks.ValueTask{System.Security.Principal.IIdentity}
    content.vb: Public Overridable Function ResolveIdentityAsync(token As SecurityToken) As ValueTask(Of IIdentity)
  overload: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentityAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier)
  commentId: M:CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: ResolveIdentity(CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  - vb
  name: ResolveIdentity(SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityKeyIdentifier)
  fullName: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public virtual IIdentity ResolveIdentity(SecurityKeyIdentifier keyIdentifier)
    parameters:
    - id: keyIdentifier
      type: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
    return:
      type: System.Security.Principal.IIdentity
    content.vb: Public Overridable Function ResolveIdentity(keyIdentifier As SecurityKeyIdentifier) As IIdentity
  overload: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode
  commentId: P:CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode
  id: AudienceUriMode
  parent: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  - vb
  name: AudienceUriMode
  nameWithType: SamlSecurityTokenAuthenticator.AudienceUriMode
  fullName: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public AudienceUriMode AudienceUriMode { get; set; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Selectors.AudienceUriMode
    content.vb: Public Property AudienceUriMode As AudienceUriMode
  overload: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris
  commentId: P:CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris
  id: AllowedAudienceUris
  parent: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  - vb
  name: AllowedAudienceUris
  nameWithType: SamlSecurityTokenAuthenticator.AllowedAudienceUris
  fullName: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public IList<string> AllowedAudienceUris { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public ReadOnly Property AllowedAudienceUris As IList(Of String)
  overload: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CoreWCF.IdentityModel.Selectors
  commentId: N:CoreWCF.IdentityModel.Selectors
  isExternal: true
  name: CoreWCF.IdentityModel.Selectors
  nameWithType: CoreWCF.IdentityModel.Selectors
  fullName: CoreWCF.IdentityModel.Selectors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator
  commentId: T:CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator
  parent: CoreWCF.IdentityModel.Selectors
  isExternal: true
  name: SecurityTokenAuthenticator
  nameWithType: SecurityTokenAuthenticator
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  commentId: M:CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  parent: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: true
  name: CanValidateToken(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.CanValidateToken(SecurityToken)
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: CanValidateToken
    nameWithType: SecurityTokenAuthenticator.CanValidateToken
    fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: CanValidateToken
    nameWithType: SecurityTokenAuthenticator.CanValidateToken
    fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  commentId: M:CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  parent: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: true
  name: ValidateToken(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.ValidateToken(SecurityToken)
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: ValidateToken
    nameWithType: SecurityTokenAuthenticator.ValidateToken
    fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: ValidateToken
    nameWithType: SecurityTokenAuthenticator.ValidateToken
    fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenAsync(CoreWCF.IdentityModel.Tokens.SecurityToken)
  commentId: M:CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenAsync(CoreWCF.IdentityModel.Tokens.SecurityToken)
  parent: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: true
  name: ValidateTokenAsync(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.ValidateTokenAsync(SecurityToken)
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenAsync(CoreWCF.IdentityModel.Tokens.SecurityToken)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenAsync(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: ValidateTokenAsync
    nameWithType: SecurityTokenAuthenticator.ValidateTokenAsync
    fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenAsync(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: ValidateTokenAsync
    nameWithType: SecurityTokenAuthenticator.ValidateTokenAsync
    fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(CoreWCF.IdentityModel.Tokens.SecurityToken)
  commentId: M:CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(CoreWCF.IdentityModel.Tokens.SecurityToken)
  parent: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: true
  name: ValidateTokenCore(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(CoreWCF.IdentityModel.Tokens.SecurityToken)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: ValidateTokenCore
    nameWithType: SecurityTokenAuthenticator.ValidateTokenCore
    fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: ValidateTokenCore
    nameWithType: SecurityTokenAuthenticator.ValidateTokenCore
    fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor
  isExternal: true
  name: SamlSecurityTokenAuthenticator
  nameWithType: SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator
  fullName: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator
- uid: System.Collections.Generic.IList{CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator}
  commentId: '!:System.Collections.Generic.IList{CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator}'
  definition: System.Collections.Generic.IList`1
  name: IList<SecurityTokenAuthenticator>
  nameWithType: IList<SecurityTokenAuthenticator>
  fullName: System.Collections.Generic.IList<CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator>
  nameWithType.vb: IList(Of SecurityTokenAuthenticator)
  fullName.vb: System.Collections.Generic.IList(Of CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator)
  name.vb: IList(Of SecurityTokenAuthenticator)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator
    name: SecurityTokenAuthenticator
    nameWithType: SecurityTokenAuthenticator
    fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator
    name: SecurityTokenAuthenticator
    nameWithType: SecurityTokenAuthenticator
    fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: System.Collections.Generic.IList<>
  nameWithType.vb: IList(Of )
  fullName.vb: System.Collections.Generic.IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(CoreWCF.IdentityModel.Tokens.SecurityToken)
  commentId: M:CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(CoreWCF.IdentityModel.Tokens.SecurityToken)
  parent: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: true
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(CoreWCF.IdentityModel.Tokens.SecurityToken)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: CanValidateTokenCore
    nameWithType: SecurityTokenAuthenticator.CanValidateTokenCore
    fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: CanValidateTokenCore
    nameWithType: SecurityTokenAuthenticator.CanValidateTokenCore
    fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore
  isExternal: true
  name: CanValidateTokenCore
  nameWithType: SamlSecurityTokenAuthenticator.CanValidateTokenCore
  fullName: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityToken
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.IdentityModel.Tokens
  commentId: N:CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: CoreWCF.IdentityModel.Tokens
  nameWithType: CoreWCF.IdentityModel.Tokens
  fullName: CoreWCF.IdentityModel.Tokens
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCoreAsync(CoreWCF.IdentityModel.Tokens.SecurityToken)
  commentId: M:CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCoreAsync(CoreWCF.IdentityModel.Tokens.SecurityToken)
  parent: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: true
  name: ValidateTokenCoreAsync(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.ValidateTokenCoreAsync(SecurityToken)
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCoreAsync(CoreWCF.IdentityModel.Tokens.SecurityToken)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCoreAsync(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: ValidateTokenCoreAsync
    nameWithType: SecurityTokenAuthenticator.ValidateTokenCoreAsync
    fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCoreAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCoreAsync(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: ValidateTokenCoreAsync
    nameWithType: SecurityTokenAuthenticator.ValidateTokenCoreAsync
    fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCoreAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCoreAsync*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCoreAsync
  isExternal: true
  name: ValidateTokenCoreAsync
  nameWithType: SamlSecurityTokenAuthenticator.ValidateTokenCoreAsync
  fullName: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCoreAsync
- uid: System.Threading.Tasks.ValueTask{System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy}}
  commentId: '!:System.Threading.Tasks.ValueTask{System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy}}'
  definition: System.Threading.Tasks.ValueTask`1
  name: ValueTask<ReadOnlyCollection<IAuthorizationPolicy>>
  nameWithType: ValueTask<ReadOnlyCollection<IAuthorizationPolicy>>
  fullName: System.Threading.Tasks.ValueTask<System.Collections.ObjectModel.ReadOnlyCollection<CoreWCF.IdentityModel.Policy.IAuthorizationPolicy>>
  nameWithType.vb: ValueTask(Of ReadOnlyCollection(Of IAuthorizationPolicy))
  fullName.vb: System.Threading.Tasks.ValueTask(Of System.Collections.ObjectModel.ReadOnlyCollection(Of CoreWCF.IdentityModel.Policy.IAuthorizationPolicy))
  name.vb: ValueTask(Of ReadOnlyCollection(Of IAuthorizationPolicy))
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.ValueTask`1
  isExternal: true
  name: ValueTask<>
  nameWithType: ValueTask<>
  fullName: System.Threading.Tasks.ValueTask<>
  nameWithType.vb: ValueTask(Of )
  fullName.vb: System.Threading.Tasks.ValueTask(Of )
  name.vb: ValueTask(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction
  isExternal: true
  name: ValidateAudienceRestriction
  nameWithType: SamlSecurityTokenAuthenticator.ValidateAudienceRestriction
  fullName: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction
- uid: Microsoft.IdentityModel.Tokens.Saml.SamlAudienceRestrictionCondition
  commentId: '!:Microsoft.IdentityModel.Tokens.Saml.SamlAudienceRestrictionCondition'
  isExternal: true
  name: SamlAudienceRestrictionCondition
  nameWithType: SamlAudienceRestrictionCondition
  fullName: Microsoft.IdentityModel.Tokens.Saml.SamlAudienceRestrictionCondition
- uid: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSetAsyc*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSetAsyc
  isExternal: true
  name: ResolveClaimSetAsyc
  nameWithType: SamlSecurityTokenAuthenticator.ResolveClaimSetAsyc
  fullName: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSetAsyc
- uid: System.Threading.Tasks.ValueTask{CoreWCF.IdentityModel.Claims.ClaimSet}
  commentId: '!:System.Threading.Tasks.ValueTask{CoreWCF.IdentityModel.Claims.ClaimSet}'
  definition: System.Threading.Tasks.ValueTask`1
  name: ValueTask<ClaimSet>
  nameWithType: ValueTask<ClaimSet>
  fullName: System.Threading.Tasks.ValueTask<CoreWCF.IdentityModel.Claims.ClaimSet>
  nameWithType.vb: ValueTask(Of ClaimSet)
  fullName.vb: System.Threading.Tasks.ValueTask(Of CoreWCF.IdentityModel.Claims.ClaimSet)
  name.vb: ValueTask(Of ClaimSet)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.IdentityModel.Claims.ClaimSet
    name: ClaimSet
    nameWithType: ClaimSet
    fullName: CoreWCF.IdentityModel.Claims.ClaimSet
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.IdentityModel.Claims.ClaimSet
    name: ClaimSet
    nameWithType: ClaimSet
    fullName: CoreWCF.IdentityModel.Claims.ClaimSet
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet
  isExternal: true
  name: ResolveClaimSet
  nameWithType: SamlSecurityTokenAuthenticator.ResolveClaimSet
  fullName: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: CoreWCF.IdentityModel.Claims.ClaimSet
  commentId: T:CoreWCF.IdentityModel.Claims.ClaimSet
  parent: CoreWCF.IdentityModel.Claims
  isExternal: true
  name: ClaimSet
  nameWithType: ClaimSet
  fullName: CoreWCF.IdentityModel.Claims.ClaimSet
- uid: CoreWCF.IdentityModel.Claims
  commentId: N:CoreWCF.IdentityModel.Claims
  isExternal: true
  name: CoreWCF.IdentityModel.Claims
  nameWithType: CoreWCF.IdentityModel.Claims
  fullName: CoreWCF.IdentityModel.Claims
- uid: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentityAsync*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentityAsync
  isExternal: true
  name: ResolveIdentityAsync
  nameWithType: SamlSecurityTokenAuthenticator.ResolveIdentityAsync
  fullName: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentityAsync
- uid: System.Threading.Tasks.ValueTask{System.Security.Principal.IIdentity}
  commentId: '!:System.Threading.Tasks.ValueTask{System.Security.Principal.IIdentity}'
  definition: System.Threading.Tasks.ValueTask`1
  name: ValueTask<IIdentity>
  nameWithType: ValueTask<IIdentity>
  fullName: System.Threading.Tasks.ValueTask<System.Security.Principal.IIdentity>
  nameWithType.vb: ValueTask(Of IIdentity)
  fullName.vb: System.Threading.Tasks.ValueTask(Of System.Security.Principal.IIdentity)
  name.vb: ValueTask(Of IIdentity)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Principal.IIdentity
    name: IIdentity
    nameWithType: IIdentity
    fullName: System.Security.Principal.IIdentity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Principal.IIdentity
    name: IIdentity
    nameWithType: IIdentity
    fullName: System.Security.Principal.IIdentity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity
  isExternal: true
  name: ResolveIdentity
  nameWithType: SamlSecurityTokenAuthenticator.ResolveIdentity
  fullName: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity
- uid: System.Security.Principal.IIdentity
  isExternal: true
  name: IIdentity
  nameWithType: IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode
  isExternal: true
  name: AudienceUriMode
  nameWithType: SamlSecurityTokenAuthenticator.AudienceUriMode
  fullName: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode
- uid: CoreWCF.IdentityModel.Selectors.AudienceUriMode
  commentId: T:CoreWCF.IdentityModel.Selectors.AudienceUriMode
  parent: CoreWCF.IdentityModel.Selectors
  isExternal: true
  name: AudienceUriMode
  nameWithType: AudienceUriMode
  fullName: CoreWCF.IdentityModel.Selectors.AudienceUriMode
- uid: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris
  isExternal: true
  name: AllowedAudienceUris
  nameWithType: SamlSecurityTokenAuthenticator.AllowedAudienceUris
  fullName: CoreWCF.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris
- uid: System.Collections.Generic.IList{System.String}
  commentId: '!:System.Collections.Generic.IList{System.String}'
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
