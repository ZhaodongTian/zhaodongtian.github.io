### YamlMime:ManagedReference
items:
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement
  commentId: T:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement
  id: SecurityTokenRequirement
  parent: CoreWCF.IdentityModel.Selectors
  children:
  - CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.#ctor
  - CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty``1(System.String)
  - CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty
  - CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeySize
  - CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty
  - CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty
  - CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty
  - CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode
  - CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.Properties
  - CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken
  - CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty
  - CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TokenType
  - CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty
  - CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty``1(System.String,``0@)
  langs:
  - csharp
  - vb
  name: SecurityTokenRequirement
  nameWithType: SecurityTokenRequirement
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  summary: Specifies security token requirements.
  remarks: "Application code typically does not need to use the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement> class, unless a custom security token, security token manager, security token provider, or security token authenticator are created. The &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement> class is used by a security token manager to specify what is required of a security token, such as the key size, key type, and how the key can be used. When a security token can be identified that matches the specified criteria, a &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider> and &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> can be obtained to provide security tokens for outgoing SOAP messages and to authenticate security tokens for incoming SOAP messages, respectively. For example, the default security token manager for outgoing SOAP messages has the &lt;xref:CoreWCF.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29> method that takes a &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement> parameter that can be called to obtain a security token provider that matches the criteria specified in the security token requirement.  \n\n\n\n"
  syntax:
    content: 'public class SecurityTokenRequirement : Object'
    content.vb: >-
      Public Class SecurityTokenRequirement
          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - CoreWCF.Security.Tokens.ServiceModelSecurityTokenRequirement
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.#ctor
  commentId: M:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.#ctor
  id: '#ctor'
  parent: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  - vb
  name: SecurityTokenRequirement()
  nameWithType: SecurityTokenRequirement.SecurityTokenRequirement()
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.SecurityTokenRequirement()
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public SecurityTokenRequirement()
    content.vb: Public Sub New
  overload: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty``1(System.String)
  commentId: M:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty``1(System.String)
  id: GetProperty``1(System.String)
  parent: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  - vb
  name: GetProperty<TValue>(String)
  nameWithType: SecurityTokenRequirement.GetProperty<TValue>(String)
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty<TValue>(System.String)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public TValue GetProperty<TValue>(string propertyName)
    parameters:
    - id: propertyName
      type: System.String
    typeParameters:
    - id: TValue
    return:
      type: '{TValue}'
    content.vb: Public Function GetProperty(Of TValue)(propertyName As String) As TValue
  overload: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty*
  nameWithType.vb: SecurityTokenRequirement.GetProperty(Of TValue)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty(Of TValue)(System.String)
  name.vb: GetProperty(Of TValue)(String)
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty``1(System.String,``0@)
  commentId: M:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty``1(System.String,``0@)
  id: TryGetProperty``1(System.String,``0@)
  parent: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  - vb
  name: TryGetProperty<TValue>(String, out TValue)
  nameWithType: SecurityTokenRequirement.TryGetProperty<TValue>(String, out TValue)
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty<TValue>(System.String, out TValue)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public bool TryGetProperty<TValue>(string propertyName, out TValue result)
    parameters:
    - id: propertyName
      type: System.String
    - id: result
      type: '{TValue}'
    typeParameters:
    - id: TValue
    return:
      type: System.Boolean
    content.vb: Public Function TryGetProperty(Of TValue)(propertyName As String, ByRef result As TValue) As Boolean
  overload: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty*
  nameWithType.vb: SecurityTokenRequirement.TryGetProperty(Of TValue)(String, ByRef TValue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty(Of TValue)(System.String, ByRef TValue)
  name.vb: TryGetProperty(Of TValue)(String, ByRef TValue)
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty
  commentId: P:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty
  id: TokenTypeProperty
  parent: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  - vb
  name: TokenTypeProperty
  nameWithType: SecurityTokenRequirement.TokenTypeProperty
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public static string TokenTypeProperty { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property TokenTypeProperty As String
  overload: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty
  commentId: P:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty
  id: KeyUsageProperty
  parent: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  - vb
  name: KeyUsageProperty
  nameWithType: SecurityTokenRequirement.KeyUsageProperty
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public static string KeyUsageProperty { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property KeyUsageProperty As String
  overload: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty
  commentId: P:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty
  id: KeyTypeProperty
  parent: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  - vb
  name: KeyTypeProperty
  nameWithType: SecurityTokenRequirement.KeyTypeProperty
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public static string KeyTypeProperty { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property KeyTypeProperty As String
  overload: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty
  commentId: P:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty
  id: KeySizeProperty
  parent: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  - vb
  name: KeySizeProperty
  nameWithType: SecurityTokenRequirement.KeySizeProperty
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public static string KeySizeProperty { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property KeySizeProperty As String
  overload: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty
  commentId: P:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty
  id: RequireCryptographicTokenProperty
  parent: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  - vb
  name: RequireCryptographicTokenProperty
  nameWithType: SecurityTokenRequirement.RequireCryptographicTokenProperty
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public static string RequireCryptographicTokenProperty { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property RequireCryptographicTokenProperty As String
  overload: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode
  commentId: P:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode
  id: PeerAuthenticationMode
  parent: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  - vb
  name: PeerAuthenticationMode
  nameWithType: SecurityTokenRequirement.PeerAuthenticationMode
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public static string PeerAuthenticationMode { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property PeerAuthenticationMode As String
  overload: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty
  commentId: P:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty
  id: IsOptionalTokenProperty
  parent: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  - vb
  name: IsOptionalTokenProperty
  nameWithType: SecurityTokenRequirement.IsOptionalTokenProperty
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public static string IsOptionalTokenProperty { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property IsOptionalTokenProperty As String
  overload: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TokenType
  commentId: P:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TokenType
  id: TokenType
  parent: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  - vb
  name: TokenType
  nameWithType: SecurityTokenRequirement.TokenType
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TokenType
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public string TokenType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TokenType As String
  overload: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TokenType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken
  commentId: P:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken
  id: RequireCryptographicToken
  parent: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  - vb
  name: RequireCryptographicToken
  nameWithType: SecurityTokenRequirement.RequireCryptographicToken
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public bool RequireCryptographicToken { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RequireCryptographicToken As Boolean
  overload: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeySize
  commentId: P:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeySize
  id: KeySize
  parent: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  - vb
  name: KeySize
  nameWithType: SecurityTokenRequirement.KeySize
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeySize
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public int KeySize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property KeySize As Integer
  overload: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeySize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.Properties
  commentId: P:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.Properties
  id: Properties
  parent: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: SecurityTokenRequirement.Properties
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.Properties
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public IDictionary<string, object> Properties { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public ReadOnly Property Properties As IDictionary(Of String, Object)
  overload: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.Properties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CoreWCF.IdentityModel.Selectors
  commentId: N:CoreWCF.IdentityModel.Selectors
  isExternal: true
  name: CoreWCF.IdentityModel.Selectors
  nameWithType: CoreWCF.IdentityModel.Selectors
  fullName: CoreWCF.IdentityModel.Selectors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.#ctor*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.#ctor
  isExternal: true
  name: SecurityTokenRequirement
  nameWithType: SecurityTokenRequirement.SecurityTokenRequirement
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.SecurityTokenRequirement
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty
  isExternal: true
  name: GetProperty
  nameWithType: SecurityTokenRequirement.GetProperty
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty
  isExternal: true
  name: TryGetProperty
  nameWithType: SecurityTokenRequirement.TryGetProperty
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty
  isExternal: true
  name: TokenTypeProperty
  nameWithType: SecurityTokenRequirement.TokenTypeProperty
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty
  isExternal: true
  name: KeyUsageProperty
  nameWithType: SecurityTokenRequirement.KeyUsageProperty
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty
  isExternal: true
  name: KeyTypeProperty
  nameWithType: SecurityTokenRequirement.KeyTypeProperty
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty
  isExternal: true
  name: KeySizeProperty
  nameWithType: SecurityTokenRequirement.KeySizeProperty
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty
  isExternal: true
  name: RequireCryptographicTokenProperty
  nameWithType: SecurityTokenRequirement.RequireCryptographicTokenProperty
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode
  isExternal: true
  name: PeerAuthenticationMode
  nameWithType: SecurityTokenRequirement.PeerAuthenticationMode
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty
  isExternal: true
  name: IsOptionalTokenProperty
  nameWithType: SecurityTokenRequirement.IsOptionalTokenProperty
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TokenType*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TokenType
  isExternal: true
  name: TokenType
  nameWithType: SecurityTokenRequirement.TokenType
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.TokenType
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken
  isExternal: true
  name: RequireCryptographicToken
  nameWithType: SecurityTokenRequirement.RequireCryptographicToken
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeySize*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeySize
  isExternal: true
  name: KeySize
  nameWithType: SecurityTokenRequirement.KeySize
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.KeySize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.Properties*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.Properties
  isExternal: true
  name: Properties
  nameWithType: SecurityTokenRequirement.Properties
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenRequirement.Properties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: '!:System.Collections.Generic.IDictionary{System.String,System.Object}'
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: System.Collections.Generic.IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullName.vb: System.Collections.Generic.IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
