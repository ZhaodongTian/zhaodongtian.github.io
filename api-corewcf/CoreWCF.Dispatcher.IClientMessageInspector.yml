### YamlMime:ManagedReference
items:
- uid: CoreWCF.Dispatcher.IClientMessageInspector
  commentId: T:CoreWCF.Dispatcher.IClientMessageInspector
  id: IClientMessageInspector
  parent: CoreWCF.Dispatcher
  children:
  - CoreWCF.Dispatcher.IClientMessageInspector.AfterReceiveReply(CoreWCF.Channels.Message@,System.Object)
  - CoreWCF.Dispatcher.IClientMessageInspector.BeforeSendRequest(CoreWCF.Channels.Message@,CoreWCF.IClientChannel)
  langs:
  - csharp
  - vb
  name: IClientMessageInspector
  nameWithType: IClientMessageInspector
  fullName: CoreWCF.Dispatcher.IClientMessageInspector
  type: Interface
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  summary: Defines a message inspector object that can be added to the  collection to view or modify messages.
  remarks: "Implement the &lt;xref:CoreWCF.Dispatcher.IClientMessageInspector> interface and add it to the &lt;xref:CoreWCF.Dispatcher.ClientRuntime.MessageInspectors%2A> collection to inspect or modify messages as they pass through a WCF client object. For details, see &lt;xref:CoreWCF.Dispatcher.ClientRuntime>.  \n\n\n\n"
  syntax:
    content: public interface IClientMessageInspector
    content.vb: Public Interface IClientMessageInspector
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: CoreWCF.Dispatcher.IClientMessageInspector.AfterReceiveReply(CoreWCF.Channels.Message@,System.Object)
  commentId: M:CoreWCF.Dispatcher.IClientMessageInspector.AfterReceiveReply(CoreWCF.Channels.Message@,System.Object)
  id: AfterReceiveReply(CoreWCF.Channels.Message@,System.Object)
  parent: CoreWCF.Dispatcher.IClientMessageInspector
  langs:
  - csharp
  - vb
  name: AfterReceiveReply(ref Message, Object)
  nameWithType: IClientMessageInspector.AfterReceiveReply(ref Message, Object)
  fullName: CoreWCF.Dispatcher.IClientMessageInspector.AfterReceiveReply(ref CoreWCF.Channels.Message, System.Object)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: void AfterReceiveReply(ref Message reply, object correlationState)
    parameters:
    - id: reply
      type: CoreWCF.Channels.Message
    - id: correlationState
      type: System.Object
    content.vb: Sub AfterReceiveReply(ByRef reply As Message, correlationState As Object)
  overload: CoreWCF.Dispatcher.IClientMessageInspector.AfterReceiveReply*
  nameWithType.vb: IClientMessageInspector.AfterReceiveReply(ByRef Message, Object)
  fullName.vb: CoreWCF.Dispatcher.IClientMessageInspector.AfterReceiveReply(ByRef CoreWCF.Channels.Message, System.Object)
  name.vb: AfterReceiveReply(ByRef Message, Object)
- uid: CoreWCF.Dispatcher.IClientMessageInspector.BeforeSendRequest(CoreWCF.Channels.Message@,CoreWCF.IClientChannel)
  commentId: M:CoreWCF.Dispatcher.IClientMessageInspector.BeforeSendRequest(CoreWCF.Channels.Message@,CoreWCF.IClientChannel)
  id: BeforeSendRequest(CoreWCF.Channels.Message@,CoreWCF.IClientChannel)
  parent: CoreWCF.Dispatcher.IClientMessageInspector
  langs:
  - csharp
  - vb
  name: BeforeSendRequest(ref Message, IClientChannel)
  nameWithType: IClientMessageInspector.BeforeSendRequest(ref Message, IClientChannel)
  fullName: CoreWCF.Dispatcher.IClientMessageInspector.BeforeSendRequest(ref CoreWCF.Channels.Message, CoreWCF.IClientChannel)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: object BeforeSendRequest(ref Message request, IClientChannel channel)
    parameters:
    - id: request
      type: CoreWCF.Channels.Message
    - id: channel
      type: CoreWCF.IClientChannel
    return:
      type: System.Object
    content.vb: Function BeforeSendRequest(ByRef request As Message, channel As IClientChannel) As Object
  overload: CoreWCF.Dispatcher.IClientMessageInspector.BeforeSendRequest*
  nameWithType.vb: IClientMessageInspector.BeforeSendRequest(ByRef Message, IClientChannel)
  fullName.vb: CoreWCF.Dispatcher.IClientMessageInspector.BeforeSendRequest(ByRef CoreWCF.Channels.Message, CoreWCF.IClientChannel)
  name.vb: BeforeSendRequest(ByRef Message, IClientChannel)
references:
- uid: CoreWCF.Dispatcher
  commentId: N:CoreWCF.Dispatcher
  isExternal: true
  name: CoreWCF.Dispatcher
  nameWithType: CoreWCF.Dispatcher
  fullName: CoreWCF.Dispatcher
- uid: CoreWCF.Dispatcher.IClientMessageInspector.AfterReceiveReply*
  commentId: Overload:CoreWCF.Dispatcher.IClientMessageInspector.AfterReceiveReply
  isExternal: true
  name: AfterReceiveReply
  nameWithType: IClientMessageInspector.AfterReceiveReply
  fullName: CoreWCF.Dispatcher.IClientMessageInspector.AfterReceiveReply
- uid: CoreWCF.Channels.Message
  commentId: T:CoreWCF.Channels.Message
  parent: CoreWCF.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: CoreWCF.Channels.Message
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CoreWCF.Channels
  commentId: N:CoreWCF.Channels
  isExternal: true
  name: CoreWCF.Channels
  nameWithType: CoreWCF.Channels
  fullName: CoreWCF.Channels
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Dispatcher.IClientMessageInspector.BeforeSendRequest*
  commentId: Overload:CoreWCF.Dispatcher.IClientMessageInspector.BeforeSendRequest
  isExternal: true
  name: BeforeSendRequest
  nameWithType: IClientMessageInspector.BeforeSendRequest
  fullName: CoreWCF.Dispatcher.IClientMessageInspector.BeforeSendRequest
- uid: CoreWCF.IClientChannel
  commentId: T:CoreWCF.IClientChannel
  parent: CoreWCF
  isExternal: true
  name: IClientChannel
  nameWithType: IClientChannel
  fullName: CoreWCF.IClientChannel
- uid: CoreWCF
  commentId: N:CoreWCF
  isExternal: true
  name: CoreWCF
  nameWithType: CoreWCF
  fullName: CoreWCF
