### YamlMime:ManagedReference
items:
- uid: CoreWCF.Security.Tokens.SupportingTokenParameters
  commentId: T:CoreWCF.Security.Tokens.SupportingTokenParameters
  id: SupportingTokenParameters
  parent: CoreWCF.Security.Tokens
  children:
  - CoreWCF.Security.Tokens.SupportingTokenParameters.#ctor
  - CoreWCF.Security.Tokens.SupportingTokenParameters.Clone
  - CoreWCF.Security.Tokens.SupportingTokenParameters.CloneCore
  - CoreWCF.Security.Tokens.SupportingTokenParameters.Endorsing
  - CoreWCF.Security.Tokens.SupportingTokenParameters.SetKeyDerivation(System.Boolean)
  - CoreWCF.Security.Tokens.SupportingTokenParameters.Signed
  - CoreWCF.Security.Tokens.SupportingTokenParameters.SignedEncrypted
  - CoreWCF.Security.Tokens.SupportingTokenParameters.SignedEndorsing
  - CoreWCF.Security.Tokens.SupportingTokenParameters.ToString
  langs:
  - csharp
  - vb
  name: SupportingTokenParameters
  nameWithType: SupportingTokenParameters
  fullName: CoreWCF.Security.Tokens.SupportingTokenParameters
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  summary: Represents the parameters for supporting security tokens required by the security binding element.
  remarks: "This class is a collection of token properties and methods, and is used in creating security binding elements and tokens. Supporting tokens specify encryption and signing requirements.  \n\n"
  syntax:
    content: 'public class SupportingTokenParameters : Object'
    content.vb: >-
      Public Class SupportingTokenParameters
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.Security.Tokens.SupportingTokenParameters.#ctor
  commentId: M:CoreWCF.Security.Tokens.SupportingTokenParameters.#ctor
  id: '#ctor'
  parent: CoreWCF.Security.Tokens.SupportingTokenParameters
  langs:
  - csharp
  - vb
  name: SupportingTokenParameters()
  nameWithType: SupportingTokenParameters.SupportingTokenParameters()
  fullName: CoreWCF.Security.Tokens.SupportingTokenParameters.SupportingTokenParameters()
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public SupportingTokenParameters()
    content.vb: Public Sub New
  overload: CoreWCF.Security.Tokens.SupportingTokenParameters.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.Tokens.SupportingTokenParameters.SetKeyDerivation(System.Boolean)
  commentId: M:CoreWCF.Security.Tokens.SupportingTokenParameters.SetKeyDerivation(System.Boolean)
  id: SetKeyDerivation(System.Boolean)
  parent: CoreWCF.Security.Tokens.SupportingTokenParameters
  langs:
  - csharp
  - vb
  name: SetKeyDerivation(Boolean)
  nameWithType: SupportingTokenParameters.SetKeyDerivation(Boolean)
  fullName: CoreWCF.Security.Tokens.SupportingTokenParameters.SetKeyDerivation(System.Boolean)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public void SetKeyDerivation(bool requireDerivedKeys)
    parameters:
    - id: requireDerivedKeys
      type: System.Boolean
    content.vb: Public Sub SetKeyDerivation(requireDerivedKeys As Boolean)
  overload: CoreWCF.Security.Tokens.SupportingTokenParameters.SetKeyDerivation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.Tokens.SupportingTokenParameters.ToString
  commentId: M:CoreWCF.Security.Tokens.SupportingTokenParameters.ToString
  id: ToString
  parent: CoreWCF.Security.Tokens.SupportingTokenParameters
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SupportingTokenParameters.ToString()
  fullName: CoreWCF.Security.Tokens.SupportingTokenParameters.ToString()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: CoreWCF.Security.Tokens.SupportingTokenParameters.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CoreWCF.Security.Tokens.SupportingTokenParameters.Clone
  commentId: M:CoreWCF.Security.Tokens.SupportingTokenParameters.Clone
  id: Clone
  parent: CoreWCF.Security.Tokens.SupportingTokenParameters
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: SupportingTokenParameters.Clone()
  fullName: CoreWCF.Security.Tokens.SupportingTokenParameters.Clone()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public SupportingTokenParameters Clone()
    return:
      type: CoreWCF.Security.Tokens.SupportingTokenParameters
    content.vb: Public Function Clone As SupportingTokenParameters
  overload: CoreWCF.Security.Tokens.SupportingTokenParameters.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.Tokens.SupportingTokenParameters.CloneCore
  commentId: M:CoreWCF.Security.Tokens.SupportingTokenParameters.CloneCore
  id: CloneCore
  parent: CoreWCF.Security.Tokens.SupportingTokenParameters
  langs:
  - csharp
  - vb
  name: CloneCore()
  nameWithType: SupportingTokenParameters.CloneCore()
  fullName: CoreWCF.Security.Tokens.SupportingTokenParameters.CloneCore()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: protected virtual SupportingTokenParameters CloneCore()
    return:
      type: CoreWCF.Security.Tokens.SupportingTokenParameters
    content.vb: Protected Overridable Function CloneCore As SupportingTokenParameters
  overload: CoreWCF.Security.Tokens.SupportingTokenParameters.CloneCore*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: CoreWCF.Security.Tokens.SupportingTokenParameters.Endorsing
  commentId: P:CoreWCF.Security.Tokens.SupportingTokenParameters.Endorsing
  id: Endorsing
  parent: CoreWCF.Security.Tokens.SupportingTokenParameters
  langs:
  - csharp
  - vb
  name: Endorsing
  nameWithType: SupportingTokenParameters.Endorsing
  fullName: CoreWCF.Security.Tokens.SupportingTokenParameters.Endorsing
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public Collection<SecurityTokenParameters> Endorsing { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{CoreWCF.Security.Tokens.SecurityTokenParameters}
    content.vb: Public ReadOnly Property Endorsing As Collection(Of SecurityTokenParameters)
  overload: CoreWCF.Security.Tokens.SupportingTokenParameters.Endorsing*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.Tokens.SupportingTokenParameters.SignedEndorsing
  commentId: P:CoreWCF.Security.Tokens.SupportingTokenParameters.SignedEndorsing
  id: SignedEndorsing
  parent: CoreWCF.Security.Tokens.SupportingTokenParameters
  langs:
  - csharp
  - vb
  name: SignedEndorsing
  nameWithType: SupportingTokenParameters.SignedEndorsing
  fullName: CoreWCF.Security.Tokens.SupportingTokenParameters.SignedEndorsing
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public Collection<SecurityTokenParameters> SignedEndorsing { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{CoreWCF.Security.Tokens.SecurityTokenParameters}
    content.vb: Public ReadOnly Property SignedEndorsing As Collection(Of SecurityTokenParameters)
  overload: CoreWCF.Security.Tokens.SupportingTokenParameters.SignedEndorsing*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.Tokens.SupportingTokenParameters.Signed
  commentId: P:CoreWCF.Security.Tokens.SupportingTokenParameters.Signed
  id: Signed
  parent: CoreWCF.Security.Tokens.SupportingTokenParameters
  langs:
  - csharp
  - vb
  name: Signed
  nameWithType: SupportingTokenParameters.Signed
  fullName: CoreWCF.Security.Tokens.SupportingTokenParameters.Signed
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public Collection<SecurityTokenParameters> Signed { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{CoreWCF.Security.Tokens.SecurityTokenParameters}
    content.vb: Public ReadOnly Property Signed As Collection(Of SecurityTokenParameters)
  overload: CoreWCF.Security.Tokens.SupportingTokenParameters.Signed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.Tokens.SupportingTokenParameters.SignedEncrypted
  commentId: P:CoreWCF.Security.Tokens.SupportingTokenParameters.SignedEncrypted
  id: SignedEncrypted
  parent: CoreWCF.Security.Tokens.SupportingTokenParameters
  langs:
  - csharp
  - vb
  name: SignedEncrypted
  nameWithType: SupportingTokenParameters.SignedEncrypted
  fullName: CoreWCF.Security.Tokens.SupportingTokenParameters.SignedEncrypted
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public Collection<SecurityTokenParameters> SignedEncrypted { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{CoreWCF.Security.Tokens.SecurityTokenParameters}
    content.vb: Public ReadOnly Property SignedEncrypted As Collection(Of SecurityTokenParameters)
  overload: CoreWCF.Security.Tokens.SupportingTokenParameters.SignedEncrypted*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CoreWCF.Security.Tokens
  commentId: N:CoreWCF.Security.Tokens
  isExternal: true
  name: CoreWCF.Security.Tokens
  nameWithType: CoreWCF.Security.Tokens
  fullName: CoreWCF.Security.Tokens
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Security.Tokens.SupportingTokenParameters.#ctor*
  commentId: Overload:CoreWCF.Security.Tokens.SupportingTokenParameters.#ctor
  isExternal: true
  name: SupportingTokenParameters
  nameWithType: SupportingTokenParameters.SupportingTokenParameters
  fullName: CoreWCF.Security.Tokens.SupportingTokenParameters.SupportingTokenParameters
- uid: CoreWCF.Security.Tokens.SupportingTokenParameters.SetKeyDerivation*
  commentId: Overload:CoreWCF.Security.Tokens.SupportingTokenParameters.SetKeyDerivation
  isExternal: true
  name: SetKeyDerivation
  nameWithType: SupportingTokenParameters.SetKeyDerivation
  fullName: CoreWCF.Security.Tokens.SupportingTokenParameters.SetKeyDerivation
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.Security.Tokens.SupportingTokenParameters.ToString*
  commentId: Overload:CoreWCF.Security.Tokens.SupportingTokenParameters.ToString
  isExternal: true
  name: ToString
  nameWithType: SupportingTokenParameters.ToString
  fullName: CoreWCF.Security.Tokens.SupportingTokenParameters.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CoreWCF.Security.Tokens.SupportingTokenParameters.Clone*
  commentId: Overload:CoreWCF.Security.Tokens.SupportingTokenParameters.Clone
  isExternal: true
  name: Clone
  nameWithType: SupportingTokenParameters.Clone
  fullName: CoreWCF.Security.Tokens.SupportingTokenParameters.Clone
- uid: CoreWCF.Security.Tokens.SupportingTokenParameters
  commentId: T:CoreWCF.Security.Tokens.SupportingTokenParameters
  parent: CoreWCF.Security.Tokens
  isExternal: true
  name: SupportingTokenParameters
  nameWithType: SupportingTokenParameters
  fullName: CoreWCF.Security.Tokens.SupportingTokenParameters
- uid: CoreWCF.Security.Tokens.SupportingTokenParameters.CloneCore*
  commentId: Overload:CoreWCF.Security.Tokens.SupportingTokenParameters.CloneCore
  isExternal: true
  name: CloneCore
  nameWithType: SupportingTokenParameters.CloneCore
  fullName: CoreWCF.Security.Tokens.SupportingTokenParameters.CloneCore
- uid: CoreWCF.Security.Tokens.SupportingTokenParameters.Endorsing*
  commentId: Overload:CoreWCF.Security.Tokens.SupportingTokenParameters.Endorsing
  isExternal: true
  name: Endorsing
  nameWithType: SupportingTokenParameters.Endorsing
  fullName: CoreWCF.Security.Tokens.SupportingTokenParameters.Endorsing
- uid: System.Collections.ObjectModel.Collection{CoreWCF.Security.Tokens.SecurityTokenParameters}
  commentId: '!:System.Collections.ObjectModel.Collection{CoreWCF.Security.Tokens.SecurityTokenParameters}'
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<SecurityTokenParameters>
  nameWithType: Collection<SecurityTokenParameters>
  fullName: System.Collections.ObjectModel.Collection<CoreWCF.Security.Tokens.SecurityTokenParameters>
  nameWithType.vb: Collection(Of SecurityTokenParameters)
  fullName.vb: System.Collections.ObjectModel.Collection(Of CoreWCF.Security.Tokens.SecurityTokenParameters)
  name.vb: Collection(Of SecurityTokenParameters)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.Security.Tokens.SecurityTokenParameters
    name: SecurityTokenParameters
    nameWithType: SecurityTokenParameters
    fullName: CoreWCF.Security.Tokens.SecurityTokenParameters
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.Security.Tokens.SecurityTokenParameters
    name: SecurityTokenParameters
    nameWithType: SecurityTokenParameters
    fullName: CoreWCF.Security.Tokens.SecurityTokenParameters
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<>
  nameWithType: Collection<>
  fullName: System.Collections.ObjectModel.Collection<>
  nameWithType.vb: Collection(Of )
  fullName.vb: System.Collections.ObjectModel.Collection(Of )
  name.vb: Collection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Security.Tokens.SupportingTokenParameters.SignedEndorsing*
  commentId: Overload:CoreWCF.Security.Tokens.SupportingTokenParameters.SignedEndorsing
  isExternal: true
  name: SignedEndorsing
  nameWithType: SupportingTokenParameters.SignedEndorsing
  fullName: CoreWCF.Security.Tokens.SupportingTokenParameters.SignedEndorsing
- uid: CoreWCF.Security.Tokens.SupportingTokenParameters.Signed*
  commentId: Overload:CoreWCF.Security.Tokens.SupportingTokenParameters.Signed
  isExternal: true
  name: Signed
  nameWithType: SupportingTokenParameters.Signed
  fullName: CoreWCF.Security.Tokens.SupportingTokenParameters.Signed
- uid: CoreWCF.Security.Tokens.SupportingTokenParameters.SignedEncrypted*
  commentId: Overload:CoreWCF.Security.Tokens.SupportingTokenParameters.SignedEncrypted
  isExternal: true
  name: SignedEncrypted
  nameWithType: SupportingTokenParameters.SignedEncrypted
  fullName: CoreWCF.Security.Tokens.SupportingTokenParameters.SignedEncrypted
