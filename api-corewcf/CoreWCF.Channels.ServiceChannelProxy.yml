### YamlMime:ManagedReference
items:
- uid: CoreWCF.Channels.ServiceChannelProxy
  commentId: T:CoreWCF.Channels.ServiceChannelProxy
  id: ServiceChannelProxy
  parent: CoreWCF.Channels
  children:
  - CoreWCF.Channels.ServiceChannelProxy.#ctor
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IChannel#ChannelDispatcher
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IChannel#GetProperty``1
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IOutputChannel#RemoteAddress
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IOutputChannel#SendAsync(CoreWCF.Channels.Message)
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IOutputChannel#SendAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IOutputChannel#Via
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IRequestChannel#RemoteAddress
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IRequestChannel#RequestAsync(CoreWCF.Channels.Message)
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IRequestChannel#RequestAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IRequestChannel#Via
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IClientChannel#UnknownMessageReceived
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#Abort
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#CloseAsync
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#CloseAsync(System.Threading.CancellationToken)
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#Closed
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#Closing
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#Faulted
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#OpenAsync
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#OpenAsync(System.Threading.CancellationToken)
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#Opened
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#Opening
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#State
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#InputSession
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#LocalAddress
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#OperationTimeout
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#OutputSession
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#RemoteAddress
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#SessionId
  - CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IExtensibleObject{CoreWCF#IContextChannel}#Extensions
  - CoreWCF.Channels.ServiceChannelProxy.Invoke(System.Reflection.MethodInfo,System.Object[])
  - CoreWCF.Channels.ServiceChannelProxy.ToString
  langs:
  - csharp
  - vb
  name: ServiceChannelProxy
  nameWithType: ServiceChannelProxy
  fullName: CoreWCF.Channels.ServiceChannelProxy
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: 'public class ServiceChannelProxy : DispatchProxy, IClientChannel, IOutputChannel, IRequestChannel, IContextChannel, IChannel, ICommunicationObject, IExtensibleObject<IContextChannel>'
    content.vb: >-
      Public Class ServiceChannelProxy
          Inherits DispatchProxy
          Implements IClientChannel, IOutputChannel, IRequestChannel, IContextChannel, IChannel, ICommunicationObject, IExtensibleObject(Of IContextChannel)
  inheritance:
  - System.Object
  implements:
  - CoreWCF.IClientChannel
  - System.IDisposable
  - CoreWCF.Channels.IOutputChannel
  - CoreWCF.Channels.IRequestChannel
  - CoreWCF.IContextChannel
  - CoreWCF.Channels.IChannel
  - CoreWCF.ICommunicationObject
  - CoreWCF.IExtensibleObject{CoreWCF.IContextChannel}
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.Channels.ServiceChannelProxy.ToString
  commentId: M:CoreWCF.Channels.ServiceChannelProxy.ToString
  id: ToString
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ServiceChannelProxy.ToString()
  fullName: CoreWCF.Channels.ServiceChannelProxy.ToString()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: public sealed override string ToString()
    return:
      type: System.String
    content.vb: Public NotOverridable Overrides Function ToString As String
  overload: CoreWCF.Channels.ServiceChannelProxy.ToString*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: CoreWCF.Channels.ServiceChannelProxy.Invoke(System.Reflection.MethodInfo,System.Object[])
  commentId: M:CoreWCF.Channels.ServiceChannelProxy.Invoke(System.Reflection.MethodInfo,System.Object[])
  id: Invoke(System.Reflection.MethodInfo,System.Object[])
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: Invoke(MethodInfo, Object[])
  nameWithType: ServiceChannelProxy.Invoke(MethodInfo, Object[])
  fullName: CoreWCF.Channels.ServiceChannelProxy.Invoke(System.Reflection.MethodInfo, System.Object[])
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: protected sealed override object Invoke(MethodInfo targetMethod, object[] args)
    parameters:
    - id: targetMethod
      type: System.Reflection.MethodInfo
    - id: args
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Protected NotOverridable Overrides Function Invoke(targetMethod As MethodInfo, args As Object()) As Object
  overload: CoreWCF.Channels.ServiceChannelProxy.Invoke*
  nameWithType.vb: ServiceChannelProxy.Invoke(MethodInfo, Object())
  modifiers.csharp:
  - protected
  - sealed
  - override
  modifiers.vb:
  - Protected
  - Overrides
  - NotOverridable
  fullName.vb: CoreWCF.Channels.ServiceChannelProxy.Invoke(System.Reflection.MethodInfo, System.Object())
  name.vb: Invoke(MethodInfo, Object())
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IChannel#GetProperty``1
  commentId: M:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IChannel#GetProperty``1
  id: CoreWCF#Channels#IChannel#GetProperty``1
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: IChannel.GetProperty<T>()
  nameWithType: ServiceChannelProxy.IChannel.GetProperty<T>()
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.Channels.IChannel.GetProperty<T>()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: >-
      T IChannel.GetProperty<T>()
          where T : class
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Function CoreWCF.Channels.IChannel.GetProperty(Of T As Class) As T Implements IChannel.GetProperty
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IChannel#GetProperty*
  implements:
  - CoreWCF.Channels.IChannel.GetProperty``1
  nameWithType.vb: ServiceChannelProxy.CoreWCF.Channels.IChannel.GetProperty(Of T)()
  fullName.vb: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.Channels.IChannel.GetProperty(Of T)()
  name.vb: CoreWCF.Channels.IChannel.GetProperty(Of T)()
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#Abort
  commentId: M:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#Abort
  id: CoreWCF#ICommunicationObject#Abort
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Abort()
  nameWithType: ServiceChannelProxy.ICommunicationObject.Abort()
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.ICommunicationObject.Abort()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: void ICommunicationObject.Abort()
    content.vb: Sub CoreWCF.ICommunicationObject.Abort Implements ICommunicationObject.Abort
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#Abort*
  implements:
  - CoreWCF.ICommunicationObject.Abort
  nameWithType.vb: ServiceChannelProxy.CoreWCF.ICommunicationObject.Abort()
  name.vb: CoreWCF.ICommunicationObject.Abort()
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#CloseAsync
  commentId: M:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#CloseAsync
  id: CoreWCF#ICommunicationObject#CloseAsync
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: ICommunicationObject.CloseAsync()
  nameWithType: ServiceChannelProxy.ICommunicationObject.CloseAsync()
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.ICommunicationObject.CloseAsync()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: Task ICommunicationObject.CloseAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function CoreWCF.ICommunicationObject.CloseAsync As Task Implements ICommunicationObject.CloseAsync
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#CloseAsync*
  implements:
  - CoreWCF.ICommunicationObject.CloseAsync
  nameWithType.vb: ServiceChannelProxy.CoreWCF.ICommunicationObject.CloseAsync()
  name.vb: CoreWCF.ICommunicationObject.CloseAsync()
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#CloseAsync(System.Threading.CancellationToken)
  commentId: M:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#CloseAsync(System.Threading.CancellationToken)
  id: CoreWCF#ICommunicationObject#CloseAsync(System.Threading.CancellationToken)
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: ICommunicationObject.CloseAsync(CancellationToken)
  nameWithType: ServiceChannelProxy.ICommunicationObject.CloseAsync(CancellationToken)
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: Task ICommunicationObject.CloseAsync(CancellationToken token)
    parameters:
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function CoreWCF.ICommunicationObject.CloseAsync(token As CancellationToken) As Task Implements ICommunicationObject.CloseAsync
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#CloseAsync*
  implements:
  - CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
  nameWithType.vb: ServiceChannelProxy.CoreWCF.ICommunicationObject.CloseAsync(CancellationToken)
  name.vb: CoreWCF.ICommunicationObject.CloseAsync(CancellationToken)
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#OpenAsync
  commentId: M:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#OpenAsync
  id: CoreWCF#ICommunicationObject#OpenAsync
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: ICommunicationObject.OpenAsync()
  nameWithType: ServiceChannelProxy.ICommunicationObject.OpenAsync()
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.ICommunicationObject.OpenAsync()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: Task ICommunicationObject.OpenAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function CoreWCF.ICommunicationObject.OpenAsync As Task Implements ICommunicationObject.OpenAsync
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#OpenAsync*
  implements:
  - CoreWCF.ICommunicationObject.OpenAsync
  nameWithType.vb: ServiceChannelProxy.CoreWCF.ICommunicationObject.OpenAsync()
  name.vb: CoreWCF.ICommunicationObject.OpenAsync()
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#OpenAsync(System.Threading.CancellationToken)
  commentId: M:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#OpenAsync(System.Threading.CancellationToken)
  id: CoreWCF#ICommunicationObject#OpenAsync(System.Threading.CancellationToken)
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: ICommunicationObject.OpenAsync(CancellationToken)
  nameWithType: ServiceChannelProxy.ICommunicationObject.OpenAsync(CancellationToken)
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: Task ICommunicationObject.OpenAsync(CancellationToken token)
    parameters:
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function CoreWCF.ICommunicationObject.OpenAsync(token As CancellationToken) As Task Implements ICommunicationObject.OpenAsync
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#OpenAsync*
  implements:
  - CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
  nameWithType.vb: ServiceChannelProxy.CoreWCF.ICommunicationObject.OpenAsync(CancellationToken)
  name.vb: CoreWCF.ICommunicationObject.OpenAsync(CancellationToken)
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IOutputChannel#SendAsync(CoreWCF.Channels.Message)
  commentId: M:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IOutputChannel#SendAsync(CoreWCF.Channels.Message)
  id: CoreWCF#Channels#IOutputChannel#SendAsync(CoreWCF.Channels.Message)
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: IOutputChannel.SendAsync(Message)
  nameWithType: ServiceChannelProxy.IOutputChannel.SendAsync(Message)
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: Task IOutputChannel.SendAsync(Message message)
    parameters:
    - id: message
      type: CoreWCF.Channels.Message
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function CoreWCF.Channels.IOutputChannel.SendAsync(message As Message) As Task Implements IOutputChannel.SendAsync
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IOutputChannel#SendAsync*
  implements:
  - CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message)
  nameWithType.vb: ServiceChannelProxy.CoreWCF.Channels.IOutputChannel.SendAsync(Message)
  name.vb: CoreWCF.Channels.IOutputChannel.SendAsync(Message)
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IOutputChannel#SendAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
  commentId: M:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IOutputChannel#SendAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
  id: CoreWCF#Channels#IOutputChannel#SendAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: IOutputChannel.SendAsync(Message, CancellationToken)
  nameWithType: ServiceChannelProxy.IOutputChannel.SendAsync(Message, CancellationToken)
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message, System.Threading.CancellationToken)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: Task IOutputChannel.SendAsync(Message message, CancellationToken token)
    parameters:
    - id: message
      type: CoreWCF.Channels.Message
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function CoreWCF.Channels.IOutputChannel.SendAsync(message As Message, token As CancellationToken) As Task Implements IOutputChannel.SendAsync
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IOutputChannel#SendAsync*
  implements:
  - CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
  nameWithType.vb: ServiceChannelProxy.CoreWCF.Channels.IOutputChannel.SendAsync(Message, CancellationToken)
  name.vb: CoreWCF.Channels.IOutputChannel.SendAsync(Message, CancellationToken)
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IRequestChannel#RequestAsync(CoreWCF.Channels.Message)
  commentId: M:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IRequestChannel#RequestAsync(CoreWCF.Channels.Message)
  id: CoreWCF#Channels#IRequestChannel#RequestAsync(CoreWCF.Channels.Message)
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: IRequestChannel.RequestAsync(Message)
  nameWithType: ServiceChannelProxy.IRequestChannel.RequestAsync(Message)
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: Task<Message> IRequestChannel.RequestAsync(Message message)
    parameters:
    - id: message
      type: CoreWCF.Channels.Message
    return:
      type: System.Threading.Tasks.Task{CoreWCF.Channels.Message}
    content.vb: Function CoreWCF.Channels.IRequestChannel.RequestAsync(message As Message) As Task(Of Message) Implements IRequestChannel.RequestAsync
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IRequestChannel#RequestAsync*
  implements:
  - CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message)
  nameWithType.vb: ServiceChannelProxy.CoreWCF.Channels.IRequestChannel.RequestAsync(Message)
  name.vb: CoreWCF.Channels.IRequestChannel.RequestAsync(Message)
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IRequestChannel#RequestAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
  commentId: M:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IRequestChannel#RequestAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
  id: CoreWCF#Channels#IRequestChannel#RequestAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: IRequestChannel.RequestAsync(Message, CancellationToken)
  nameWithType: ServiceChannelProxy.IRequestChannel.RequestAsync(Message, CancellationToken)
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message, System.Threading.CancellationToken)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: Task<Message> IRequestChannel.RequestAsync(Message message, CancellationToken token)
    parameters:
    - id: message
      type: CoreWCF.Channels.Message
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{CoreWCF.Channels.Message}
    content.vb: Function CoreWCF.Channels.IRequestChannel.RequestAsync(message As Message, token As CancellationToken) As Task(Of Message) Implements IRequestChannel.RequestAsync
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IRequestChannel#RequestAsync*
  implements:
  - CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
  nameWithType.vb: ServiceChannelProxy.CoreWCF.Channels.IRequestChannel.RequestAsync(Message, CancellationToken)
  name.vb: CoreWCF.Channels.IRequestChannel.RequestAsync(Message, CancellationToken)
- uid: CoreWCF.Channels.ServiceChannelProxy.#ctor
  commentId: M:CoreWCF.Channels.ServiceChannelProxy.#ctor
  id: '#ctor'
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: ServiceChannelProxy()
  nameWithType: ServiceChannelProxy.ServiceChannelProxy()
  fullName: CoreWCF.Channels.ServiceChannelProxy.ServiceChannelProxy()
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: public ServiceChannelProxy()
    content.vb: Public Sub New
  overload: CoreWCF.Channels.ServiceChannelProxy.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#State
  commentId: P:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#State
  id: CoreWCF#ICommunicationObject#State
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: ICommunicationObject.State
  nameWithType: ServiceChannelProxy.ICommunicationObject.State
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.ICommunicationObject.State
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: CommunicationState ICommunicationObject.State { get; }
    parameters: []
    return:
      type: CoreWCF.CommunicationState
    content.vb: ReadOnly WriteOnly Property CoreWCF.ICommunicationObject.State As CommunicationState Implements ICommunicationObject.State
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#State*
  implements:
  - CoreWCF.ICommunicationObject.State
  nameWithType.vb: ServiceChannelProxy.CoreWCF.ICommunicationObject.State
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: CoreWCF.ICommunicationObject.State
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#InputSession
  commentId: P:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#InputSession
  id: CoreWCF#IContextChannel#InputSession
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: IContextChannel.InputSession
  nameWithType: ServiceChannelProxy.IContextChannel.InputSession
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.IContextChannel.InputSession
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: IInputSession IContextChannel.InputSession { get; }
    parameters: []
    return:
      type: CoreWCF.Channels.IInputSession
    content.vb: ReadOnly WriteOnly Property CoreWCF.IContextChannel.InputSession As IInputSession Implements IContextChannel.InputSession
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#InputSession*
  implements:
  - CoreWCF.IContextChannel.InputSession
  nameWithType.vb: ServiceChannelProxy.CoreWCF.IContextChannel.InputSession
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: CoreWCF.IContextChannel.InputSession
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#LocalAddress
  commentId: P:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#LocalAddress
  id: CoreWCF#IContextChannel#LocalAddress
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: IContextChannel.LocalAddress
  nameWithType: ServiceChannelProxy.IContextChannel.LocalAddress
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.IContextChannel.LocalAddress
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: EndpointAddress IContextChannel.LocalAddress { get; }
    parameters: []
    return:
      type: CoreWCF.EndpointAddress
    content.vb: ReadOnly WriteOnly Property CoreWCF.IContextChannel.LocalAddress As EndpointAddress Implements IContextChannel.LocalAddress
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#LocalAddress*
  implements:
  - CoreWCF.IContextChannel.LocalAddress
  nameWithType.vb: ServiceChannelProxy.CoreWCF.IContextChannel.LocalAddress
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: CoreWCF.IContextChannel.LocalAddress
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#OperationTimeout
  commentId: P:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#OperationTimeout
  id: CoreWCF#IContextChannel#OperationTimeout
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: IContextChannel.OperationTimeout
  nameWithType: ServiceChannelProxy.IContextChannel.OperationTimeout
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.IContextChannel.OperationTimeout
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: TimeSpan IContextChannel.OperationTimeout { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: ReadOnly WriteOnly Property CoreWCF.IContextChannel.OperationTimeout As TimeSpan Implements IContextChannel.OperationTimeout
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#OperationTimeout*
  implements:
  - CoreWCF.IContextChannel.OperationTimeout
  nameWithType.vb: ServiceChannelProxy.CoreWCF.IContextChannel.OperationTimeout
  modifiers.csharp:
  - get
  - set
  name.vb: CoreWCF.IContextChannel.OperationTimeout
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#OutputSession
  commentId: P:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#OutputSession
  id: CoreWCF#IContextChannel#OutputSession
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: IContextChannel.OutputSession
  nameWithType: ServiceChannelProxy.IContextChannel.OutputSession
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.IContextChannel.OutputSession
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: IOutputSession IContextChannel.OutputSession { get; }
    parameters: []
    return:
      type: CoreWCF.Channels.IOutputSession
    content.vb: ReadOnly WriteOnly Property CoreWCF.IContextChannel.OutputSession As IOutputSession Implements IContextChannel.OutputSession
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#OutputSession*
  implements:
  - CoreWCF.IContextChannel.OutputSession
  nameWithType.vb: ServiceChannelProxy.CoreWCF.IContextChannel.OutputSession
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: CoreWCF.IContextChannel.OutputSession
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IOutputChannel#RemoteAddress
  commentId: P:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IOutputChannel#RemoteAddress
  id: CoreWCF#Channels#IOutputChannel#RemoteAddress
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: IOutputChannel.RemoteAddress
  nameWithType: ServiceChannelProxy.IOutputChannel.RemoteAddress
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.Channels.IOutputChannel.RemoteAddress
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: EndpointAddress IOutputChannel.RemoteAddress { get; }
    parameters: []
    return:
      type: CoreWCF.EndpointAddress
    content.vb: ReadOnly WriteOnly Property CoreWCF.Channels.IOutputChannel.RemoteAddress As EndpointAddress Implements IOutputChannel.RemoteAddress
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IOutputChannel#RemoteAddress*
  implements:
  - CoreWCF.Channels.IOutputChannel.RemoteAddress
  nameWithType.vb: ServiceChannelProxy.CoreWCF.Channels.IOutputChannel.RemoteAddress
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: CoreWCF.Channels.IOutputChannel.RemoteAddress
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IOutputChannel#Via
  commentId: P:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IOutputChannel#Via
  id: CoreWCF#Channels#IOutputChannel#Via
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: IOutputChannel.Via
  nameWithType: ServiceChannelProxy.IOutputChannel.Via
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.Channels.IOutputChannel.Via
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: Uri IOutputChannel.Via { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: ReadOnly WriteOnly Property CoreWCF.Channels.IOutputChannel.Via As Uri Implements IOutputChannel.Via
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IOutputChannel#Via*
  implements:
  - CoreWCF.Channels.IOutputChannel.Via
  nameWithType.vb: ServiceChannelProxy.CoreWCF.Channels.IOutputChannel.Via
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: CoreWCF.Channels.IOutputChannel.Via
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#RemoteAddress
  commentId: P:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#RemoteAddress
  id: CoreWCF#IContextChannel#RemoteAddress
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: IContextChannel.RemoteAddress
  nameWithType: ServiceChannelProxy.IContextChannel.RemoteAddress
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.IContextChannel.RemoteAddress
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: EndpointAddress IContextChannel.RemoteAddress { get; }
    parameters: []
    return:
      type: CoreWCF.EndpointAddress
    content.vb: ReadOnly WriteOnly Property CoreWCF.IContextChannel.RemoteAddress As EndpointAddress Implements IContextChannel.RemoteAddress
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#RemoteAddress*
  implements:
  - CoreWCF.IContextChannel.RemoteAddress
  nameWithType.vb: ServiceChannelProxy.CoreWCF.IContextChannel.RemoteAddress
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: CoreWCF.IContextChannel.RemoteAddress
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#SessionId
  commentId: P:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#SessionId
  id: CoreWCF#IContextChannel#SessionId
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: IContextChannel.SessionId
  nameWithType: ServiceChannelProxy.IContextChannel.SessionId
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.IContextChannel.SessionId
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: string IContextChannel.SessionId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly WriteOnly Property CoreWCF.IContextChannel.SessionId As String Implements IContextChannel.SessionId
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#SessionId*
  implements:
  - CoreWCF.IContextChannel.SessionId
  nameWithType.vb: ServiceChannelProxy.CoreWCF.IContextChannel.SessionId
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: CoreWCF.IContextChannel.SessionId
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IExtensibleObject{CoreWCF#IContextChannel}#Extensions
  commentId: P:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IExtensibleObject{CoreWCF#IContextChannel}#Extensions
  id: CoreWCF#IExtensibleObject{CoreWCF#IContextChannel}#Extensions
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: IExtensibleObject<IContextChannel>.Extensions
  nameWithType: ServiceChannelProxy.IExtensibleObject<IContextChannel>.Extensions
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.IExtensibleObject<CoreWCF.IContextChannel>.Extensions
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: IExtensionCollection<IContextChannel> IExtensibleObject<IContextChannel>.Extensions { get; }
    parameters: []
    return:
      type: CoreWCF.IExtensionCollection{CoreWCF.IContextChannel}
    content.vb: ReadOnly WriteOnly Property CoreWCF.IExtensibleObject<CoreWCF.IContextChannel>.Extensions As IExtensionCollection(Of IContextChannel) Implements IExtensibleObject(Of IContextChannel).Extensions
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IExtensibleObject{CoreWCF#IContextChannel}#Extensions*
  implements:
  - CoreWCF.IExtensibleObject{CoreWCF.IContextChannel}.Extensions
  nameWithType.vb: ServiceChannelProxy.CoreWCF.IExtensibleObject<CoreWCF.IContextChannel>.Extensions
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: CoreWCF.IExtensibleObject<CoreWCF.IContextChannel>.Extensions
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IRequestChannel#RemoteAddress
  commentId: P:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IRequestChannel#RemoteAddress
  id: CoreWCF#Channels#IRequestChannel#RemoteAddress
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: IRequestChannel.RemoteAddress
  nameWithType: ServiceChannelProxy.IRequestChannel.RemoteAddress
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.Channels.IRequestChannel.RemoteAddress
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: EndpointAddress IRequestChannel.RemoteAddress { get; }
    parameters: []
    return:
      type: CoreWCF.EndpointAddress
    content.vb: ReadOnly WriteOnly Property CoreWCF.Channels.IRequestChannel.RemoteAddress As EndpointAddress Implements IRequestChannel.RemoteAddress
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IRequestChannel#RemoteAddress*
  implements:
  - CoreWCF.Channels.IRequestChannel.RemoteAddress
  nameWithType.vb: ServiceChannelProxy.CoreWCF.Channels.IRequestChannel.RemoteAddress
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: CoreWCF.Channels.IRequestChannel.RemoteAddress
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IRequestChannel#Via
  commentId: P:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IRequestChannel#Via
  id: CoreWCF#Channels#IRequestChannel#Via
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: IRequestChannel.Via
  nameWithType: ServiceChannelProxy.IRequestChannel.Via
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.Channels.IRequestChannel.Via
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: Uri IRequestChannel.Via { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: ReadOnly WriteOnly Property CoreWCF.Channels.IRequestChannel.Via As Uri Implements IRequestChannel.Via
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IRequestChannel#Via*
  implements:
  - CoreWCF.Channels.IRequestChannel.Via
  nameWithType.vb: ServiceChannelProxy.CoreWCF.Channels.IRequestChannel.Via
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: CoreWCF.Channels.IRequestChannel.Via
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IChannel#ChannelDispatcher
  commentId: P:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IChannel#ChannelDispatcher
  id: CoreWCF#Channels#IChannel#ChannelDispatcher
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: IChannel.ChannelDispatcher
  nameWithType: ServiceChannelProxy.IChannel.ChannelDispatcher
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.Channels.IChannel.ChannelDispatcher
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: IServiceChannelDispatcher IChannel.ChannelDispatcher { get; set; }
    parameters: []
    return:
      type: CoreWCF.Configuration.IServiceChannelDispatcher
    content.vb: ReadOnly WriteOnly Property CoreWCF.Channels.IChannel.ChannelDispatcher As IServiceChannelDispatcher Implements IChannel.ChannelDispatcher
  overload: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IChannel#ChannelDispatcher*
  implements:
  - CoreWCF.Channels.IChannel.ChannelDispatcher
  nameWithType.vb: ServiceChannelProxy.CoreWCF.Channels.IChannel.ChannelDispatcher
  modifiers.csharp:
  - get
  - set
  name.vb: CoreWCF.Channels.IChannel.ChannelDispatcher
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#Closed
  commentId: E:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#Closed
  id: CoreWCF#ICommunicationObject#Closed
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Closed
  nameWithType: ServiceChannelProxy.ICommunicationObject.Closed
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.ICommunicationObject.Closed
  type: Event
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: event EventHandler ICommunicationObject.Closed
    return:
      type: System.EventHandler
    content.vb: Event CoreWCF.ICommunicationObject.Closed As EventHandler Implements ICommunicationObject.Closed
  implements:
  - CoreWCF.ICommunicationObject.Closed
  nameWithType.vb: ServiceChannelProxy.CoreWCF.ICommunicationObject.Closed
  name.vb: CoreWCF.ICommunicationObject.Closed
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#Closing
  commentId: E:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#Closing
  id: CoreWCF#ICommunicationObject#Closing
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Closing
  nameWithType: ServiceChannelProxy.ICommunicationObject.Closing
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.ICommunicationObject.Closing
  type: Event
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: event EventHandler ICommunicationObject.Closing
    return:
      type: System.EventHandler
    content.vb: Event CoreWCF.ICommunicationObject.Closing As EventHandler Implements ICommunicationObject.Closing
  implements:
  - CoreWCF.ICommunicationObject.Closing
  nameWithType.vb: ServiceChannelProxy.CoreWCF.ICommunicationObject.Closing
  name.vb: CoreWCF.ICommunicationObject.Closing
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#Faulted
  commentId: E:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#Faulted
  id: CoreWCF#ICommunicationObject#Faulted
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Faulted
  nameWithType: ServiceChannelProxy.ICommunicationObject.Faulted
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.ICommunicationObject.Faulted
  type: Event
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: event EventHandler ICommunicationObject.Faulted
    return:
      type: System.EventHandler
    content.vb: Event CoreWCF.ICommunicationObject.Faulted As EventHandler Implements ICommunicationObject.Faulted
  implements:
  - CoreWCF.ICommunicationObject.Faulted
  nameWithType.vb: ServiceChannelProxy.CoreWCF.ICommunicationObject.Faulted
  name.vb: CoreWCF.ICommunicationObject.Faulted
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#Opened
  commentId: E:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#Opened
  id: CoreWCF#ICommunicationObject#Opened
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Opened
  nameWithType: ServiceChannelProxy.ICommunicationObject.Opened
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.ICommunicationObject.Opened
  type: Event
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: event EventHandler ICommunicationObject.Opened
    return:
      type: System.EventHandler
    content.vb: Event CoreWCF.ICommunicationObject.Opened As EventHandler Implements ICommunicationObject.Opened
  implements:
  - CoreWCF.ICommunicationObject.Opened
  nameWithType.vb: ServiceChannelProxy.CoreWCF.ICommunicationObject.Opened
  name.vb: CoreWCF.ICommunicationObject.Opened
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#Opening
  commentId: E:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#Opening
  id: CoreWCF#ICommunicationObject#Opening
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Opening
  nameWithType: ServiceChannelProxy.ICommunicationObject.Opening
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.ICommunicationObject.Opening
  type: Event
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: event EventHandler ICommunicationObject.Opening
    return:
      type: System.EventHandler
    content.vb: Event CoreWCF.ICommunicationObject.Opening As EventHandler Implements ICommunicationObject.Opening
  implements:
  - CoreWCF.ICommunicationObject.Opening
  nameWithType.vb: ServiceChannelProxy.CoreWCF.ICommunicationObject.Opening
  name.vb: CoreWCF.ICommunicationObject.Opening
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IClientChannel#UnknownMessageReceived
  commentId: E:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IClientChannel#UnknownMessageReceived
  id: CoreWCF#IClientChannel#UnknownMessageReceived
  isEii: true
  parent: CoreWCF.Channels.ServiceChannelProxy
  langs:
  - csharp
  - vb
  name: IClientChannel.UnknownMessageReceived
  nameWithType: ServiceChannelProxy.IClientChannel.UnknownMessageReceived
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.IClientChannel.UnknownMessageReceived
  type: Event
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: event EventHandler<UnknownMessageReceivedEventArgs> IClientChannel.UnknownMessageReceived
    return:
      type: System.EventHandler{CoreWCF.UnknownMessageReceivedEventArgs}
    content.vb: Event CoreWCF.IClientChannel.UnknownMessageReceived As EventHandler(Of UnknownMessageReceivedEventArgs) Implements IClientChannel.UnknownMessageReceived
  implements:
  - CoreWCF.IClientChannel.UnknownMessageReceived
  nameWithType.vb: ServiceChannelProxy.CoreWCF.IClientChannel.UnknownMessageReceived
  name.vb: CoreWCF.IClientChannel.UnknownMessageReceived
references:
- uid: CoreWCF.Channels
  commentId: N:CoreWCF.Channels
  isExternal: true
  name: CoreWCF.Channels
  nameWithType: CoreWCF.Channels
  fullName: CoreWCF.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CoreWCF.IClientChannel
  commentId: T:CoreWCF.IClientChannel
  parent: CoreWCF
  isExternal: true
  name: IClientChannel
  nameWithType: IClientChannel
  fullName: CoreWCF.IClientChannel
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: CoreWCF.Channels.IOutputChannel
  commentId: T:CoreWCF.Channels.IOutputChannel
  parent: CoreWCF.Channels
  isExternal: true
  name: IOutputChannel
  nameWithType: IOutputChannel
  fullName: CoreWCF.Channels.IOutputChannel
- uid: CoreWCF.Channels.IRequestChannel
  commentId: T:CoreWCF.Channels.IRequestChannel
  parent: CoreWCF.Channels
  isExternal: true
  name: IRequestChannel
  nameWithType: IRequestChannel
  fullName: CoreWCF.Channels.IRequestChannel
- uid: CoreWCF.IContextChannel
  commentId: T:CoreWCF.IContextChannel
  parent: CoreWCF
  isExternal: true
  name: IContextChannel
  nameWithType: IContextChannel
  fullName: CoreWCF.IContextChannel
- uid: CoreWCF.Channels.IChannel
  commentId: T:CoreWCF.Channels.IChannel
  parent: CoreWCF.Channels
  isExternal: true
  name: IChannel
  nameWithType: IChannel
  fullName: CoreWCF.Channels.IChannel
- uid: CoreWCF.ICommunicationObject
  commentId: T:CoreWCF.ICommunicationObject
  parent: CoreWCF
  isExternal: true
  name: ICommunicationObject
  nameWithType: ICommunicationObject
  fullName: CoreWCF.ICommunicationObject
- uid: CoreWCF.IExtensibleObject{CoreWCF.IContextChannel}
  commentId: T:CoreWCF.IExtensibleObject{CoreWCF.IContextChannel}
  parent: CoreWCF
  definition: CoreWCF.IExtensibleObject`1
  name: IExtensibleObject<IContextChannel>
  nameWithType: IExtensibleObject<IContextChannel>
  fullName: CoreWCF.IExtensibleObject<CoreWCF.IContextChannel>
  nameWithType.vb: IExtensibleObject(Of IContextChannel)
  fullName.vb: CoreWCF.IExtensibleObject(Of CoreWCF.IContextChannel)
  name.vb: IExtensibleObject(Of IContextChannel)
  spec.csharp:
  - uid: CoreWCF.IExtensibleObject`1
    name: IExtensibleObject
    nameWithType: IExtensibleObject
    fullName: CoreWCF.IExtensibleObject
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.IContextChannel
    name: IContextChannel
    nameWithType: IContextChannel
    fullName: CoreWCF.IContextChannel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CoreWCF.IExtensibleObject`1
    name: IExtensibleObject
    nameWithType: IExtensibleObject
    fullName: CoreWCF.IExtensibleObject
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.IContextChannel
    name: IContextChannel
    nameWithType: IContextChannel
    fullName: CoreWCF.IContextChannel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF
  commentId: N:CoreWCF
  isExternal: true
  name: CoreWCF
  nameWithType: CoreWCF
  fullName: CoreWCF
- uid: CoreWCF.IExtensibleObject`1
  commentId: T:CoreWCF.IExtensibleObject`1
  isExternal: true
  name: IExtensibleObject<T>
  nameWithType: IExtensibleObject<T>
  fullName: CoreWCF.IExtensibleObject<T>
  nameWithType.vb: IExtensibleObject(Of T)
  fullName.vb: CoreWCF.IExtensibleObject(Of T)
  name.vb: IExtensibleObject(Of T)
  spec.csharp:
  - uid: CoreWCF.IExtensibleObject`1
    name: IExtensibleObject
    nameWithType: IExtensibleObject
    fullName: CoreWCF.IExtensibleObject
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CoreWCF.IExtensibleObject`1
    name: IExtensibleObject
    nameWithType: IExtensibleObject
    fullName: CoreWCF.IExtensibleObject
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.ServiceChannelProxy.ToString*
  commentId: Overload:CoreWCF.Channels.ServiceChannelProxy.ToString
  isExternal: true
  name: ToString
  nameWithType: ServiceChannelProxy.ToString
  fullName: CoreWCF.Channels.ServiceChannelProxy.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CoreWCF.Channels.ServiceChannelProxy.Invoke*
  commentId: Overload:CoreWCF.Channels.ServiceChannelProxy.Invoke
  isExternal: true
  name: Invoke
  nameWithType: ServiceChannelProxy.Invoke
  fullName: CoreWCF.Channels.ServiceChannelProxy.Invoke
- uid: System.Reflection.MethodInfo
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IChannel#GetProperty*
  commentId: Overload:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IChannel#GetProperty
  isExternal: true
  name: IChannel.GetProperty
  nameWithType: ServiceChannelProxy.IChannel.GetProperty
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.Channels.IChannel.GetProperty
  nameWithType.vb: ServiceChannelProxy.CoreWCF.Channels.IChannel.GetProperty
  name.vb: CoreWCF.Channels.IChannel.GetProperty
- uid: CoreWCF.Channels.IChannel.GetProperty``1
  commentId: M:CoreWCF.Channels.IChannel.GetProperty``1
  parent: CoreWCF.Channels.IChannel
  isExternal: true
  name: GetProperty<T>()
  nameWithType: IChannel.GetProperty<T>()
  fullName: CoreWCF.Channels.IChannel.GetProperty<T>()
  nameWithType.vb: IChannel.GetProperty(Of T)()
  fullName.vb: CoreWCF.Channels.IChannel.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
  spec.csharp:
  - uid: CoreWCF.Channels.IChannel.GetProperty``1
    name: GetProperty<T>
    nameWithType: IChannel.GetProperty<T>
    fullName: CoreWCF.Channels.IChannel.GetProperty<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.IChannel.GetProperty``1
    name: GetProperty(Of T)
    nameWithType: IChannel.GetProperty(Of T)
    fullName: CoreWCF.Channels.IChannel.GetProperty(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#Abort*
  commentId: Overload:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#Abort
  isExternal: true
  name: ICommunicationObject.Abort
  nameWithType: ServiceChannelProxy.ICommunicationObject.Abort
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.ICommunicationObject.Abort
  nameWithType.vb: ServiceChannelProxy.CoreWCF.ICommunicationObject.Abort
  name.vb: CoreWCF.ICommunicationObject.Abort
- uid: CoreWCF.ICommunicationObject.Abort
  commentId: M:CoreWCF.ICommunicationObject.Abort
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Abort()
  nameWithType: ICommunicationObject.Abort()
  fullName: CoreWCF.ICommunicationObject.Abort()
  spec.csharp:
  - uid: CoreWCF.ICommunicationObject.Abort
    name: Abort
    nameWithType: ICommunicationObject.Abort
    fullName: CoreWCF.ICommunicationObject.Abort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.ICommunicationObject.Abort
    name: Abort
    nameWithType: ICommunicationObject.Abort
    fullName: CoreWCF.ICommunicationObject.Abort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#CloseAsync*
  commentId: Overload:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#CloseAsync
  isExternal: true
  name: ICommunicationObject.CloseAsync
  nameWithType: ServiceChannelProxy.ICommunicationObject.CloseAsync
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.ICommunicationObject.CloseAsync
  nameWithType.vb: ServiceChannelProxy.CoreWCF.ICommunicationObject.CloseAsync
  name.vb: CoreWCF.ICommunicationObject.CloseAsync
- uid: CoreWCF.ICommunicationObject.CloseAsync
  commentId: M:CoreWCF.ICommunicationObject.CloseAsync
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: CloseAsync()
  nameWithType: ICommunicationObject.CloseAsync()
  fullName: CoreWCF.ICommunicationObject.CloseAsync()
  spec.csharp:
  - uid: CoreWCF.ICommunicationObject.CloseAsync
    name: CloseAsync
    nameWithType: ICommunicationObject.CloseAsync
    fullName: CoreWCF.ICommunicationObject.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.ICommunicationObject.CloseAsync
    name: CloseAsync
    nameWithType: ICommunicationObject.CloseAsync
    fullName: CoreWCF.ICommunicationObject.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
  commentId: M:CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: CloseAsync(CancellationToken)
  nameWithType: ICommunicationObject.CloseAsync(CancellationToken)
  fullName: CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
    name: CloseAsync
    nameWithType: ICommunicationObject.CloseAsync
    fullName: CoreWCF.ICommunicationObject.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
    name: CloseAsync
    nameWithType: ICommunicationObject.CloseAsync
    fullName: CoreWCF.ICommunicationObject.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#OpenAsync*
  commentId: Overload:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#OpenAsync
  isExternal: true
  name: ICommunicationObject.OpenAsync
  nameWithType: ServiceChannelProxy.ICommunicationObject.OpenAsync
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.ICommunicationObject.OpenAsync
  nameWithType.vb: ServiceChannelProxy.CoreWCF.ICommunicationObject.OpenAsync
  name.vb: CoreWCF.ICommunicationObject.OpenAsync
- uid: CoreWCF.ICommunicationObject.OpenAsync
  commentId: M:CoreWCF.ICommunicationObject.OpenAsync
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: OpenAsync()
  nameWithType: ICommunicationObject.OpenAsync()
  fullName: CoreWCF.ICommunicationObject.OpenAsync()
  spec.csharp:
  - uid: CoreWCF.ICommunicationObject.OpenAsync
    name: OpenAsync
    nameWithType: ICommunicationObject.OpenAsync
    fullName: CoreWCF.ICommunicationObject.OpenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.ICommunicationObject.OpenAsync
    name: OpenAsync
    nameWithType: ICommunicationObject.OpenAsync
    fullName: CoreWCF.ICommunicationObject.OpenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
  commentId: M:CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: OpenAsync(CancellationToken)
  nameWithType: ICommunicationObject.OpenAsync(CancellationToken)
  fullName: CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: ICommunicationObject.OpenAsync
    fullName: CoreWCF.ICommunicationObject.OpenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: ICommunicationObject.OpenAsync
    fullName: CoreWCF.ICommunicationObject.OpenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IOutputChannel#SendAsync*
  commentId: Overload:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IOutputChannel#SendAsync
  isExternal: true
  name: IOutputChannel.SendAsync
  nameWithType: ServiceChannelProxy.IOutputChannel.SendAsync
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.Channels.IOutputChannel.SendAsync
  nameWithType.vb: ServiceChannelProxy.CoreWCF.Channels.IOutputChannel.SendAsync
  name.vb: CoreWCF.Channels.IOutputChannel.SendAsync
- uid: CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message)
  commentId: M:CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message)
  parent: CoreWCF.Channels.IOutputChannel
  isExternal: true
  name: SendAsync(Message)
  nameWithType: IOutputChannel.SendAsync(Message)
  fullName: CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message)
  spec.csharp:
  - uid: CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message)
    name: SendAsync
    nameWithType: IOutputChannel.SendAsync
    fullName: CoreWCF.Channels.IOutputChannel.SendAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.Message
    name: Message
    nameWithType: Message
    fullName: CoreWCF.Channels.Message
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message)
    name: SendAsync
    nameWithType: IOutputChannel.SendAsync
    fullName: CoreWCF.Channels.IOutputChannel.SendAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.Message
    name: Message
    nameWithType: Message
    fullName: CoreWCF.Channels.Message
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.Message
  commentId: T:CoreWCF.Channels.Message
  parent: CoreWCF.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: CoreWCF.Channels.Message
- uid: CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
  commentId: M:CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
  parent: CoreWCF.Channels.IOutputChannel
  isExternal: true
  name: SendAsync(Message, CancellationToken)
  nameWithType: IOutputChannel.SendAsync(Message, CancellationToken)
  fullName: CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message, System.Threading.CancellationToken)
  spec.csharp:
  - uid: CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: IOutputChannel.SendAsync
    fullName: CoreWCF.Channels.IOutputChannel.SendAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.Message
    name: Message
    nameWithType: Message
    fullName: CoreWCF.Channels.Message
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: IOutputChannel.SendAsync
    fullName: CoreWCF.Channels.IOutputChannel.SendAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.Message
    name: Message
    nameWithType: Message
    fullName: CoreWCF.Channels.Message
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IRequestChannel#RequestAsync*
  commentId: Overload:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IRequestChannel#RequestAsync
  isExternal: true
  name: IRequestChannel.RequestAsync
  nameWithType: ServiceChannelProxy.IRequestChannel.RequestAsync
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.Channels.IRequestChannel.RequestAsync
  nameWithType.vb: ServiceChannelProxy.CoreWCF.Channels.IRequestChannel.RequestAsync
  name.vb: CoreWCF.Channels.IRequestChannel.RequestAsync
- uid: CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message)
  commentId: M:CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message)
  parent: CoreWCF.Channels.IRequestChannel
  isExternal: true
  name: RequestAsync(Message)
  nameWithType: IRequestChannel.RequestAsync(Message)
  fullName: CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message)
  spec.csharp:
  - uid: CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message)
    name: RequestAsync
    nameWithType: IRequestChannel.RequestAsync
    fullName: CoreWCF.Channels.IRequestChannel.RequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.Message
    name: Message
    nameWithType: Message
    fullName: CoreWCF.Channels.Message
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message)
    name: RequestAsync
    nameWithType: IRequestChannel.RequestAsync
    fullName: CoreWCF.Channels.IRequestChannel.RequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.Message
    name: Message
    nameWithType: Message
    fullName: CoreWCF.Channels.Message
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{CoreWCF.Channels.Message}
  commentId: '!:System.Threading.Tasks.Task{CoreWCF.Channels.Message}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Message>
  nameWithType: Task<Message>
  fullName: System.Threading.Tasks.Task<CoreWCF.Channels.Message>
  nameWithType.vb: Task(Of Message)
  fullName.vb: System.Threading.Tasks.Task(Of CoreWCF.Channels.Message)
  name.vb: Task(Of Message)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.Channels.Message
    name: Message
    nameWithType: Message
    fullName: CoreWCF.Channels.Message
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.Channels.Message
    name: Message
    nameWithType: Message
    fullName: CoreWCF.Channels.Message
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
  commentId: M:CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
  parent: CoreWCF.Channels.IRequestChannel
  isExternal: true
  name: RequestAsync(Message, CancellationToken)
  nameWithType: IRequestChannel.RequestAsync(Message, CancellationToken)
  fullName: CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message, System.Threading.CancellationToken)
  spec.csharp:
  - uid: CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
    name: RequestAsync
    nameWithType: IRequestChannel.RequestAsync
    fullName: CoreWCF.Channels.IRequestChannel.RequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.Message
    name: Message
    nameWithType: Message
    fullName: CoreWCF.Channels.Message
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
    name: RequestAsync
    nameWithType: IRequestChannel.RequestAsync
    fullName: CoreWCF.Channels.IRequestChannel.RequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.Message
    name: Message
    nameWithType: Message
    fullName: CoreWCF.Channels.Message
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.ServiceChannelProxy.#ctor*
  commentId: Overload:CoreWCF.Channels.ServiceChannelProxy.#ctor
  isExternal: true
  name: ServiceChannelProxy
  nameWithType: ServiceChannelProxy.ServiceChannelProxy
  fullName: CoreWCF.Channels.ServiceChannelProxy.ServiceChannelProxy
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#State*
  commentId: Overload:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#ICommunicationObject#State
  isExternal: true
  name: ICommunicationObject.State
  nameWithType: ServiceChannelProxy.ICommunicationObject.State
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.ICommunicationObject.State
  nameWithType.vb: ServiceChannelProxy.CoreWCF.ICommunicationObject.State
  name.vb: CoreWCF.ICommunicationObject.State
- uid: CoreWCF.ICommunicationObject.State
  commentId: P:CoreWCF.ICommunicationObject.State
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: State
  nameWithType: ICommunicationObject.State
  fullName: CoreWCF.ICommunicationObject.State
- uid: CoreWCF.CommunicationState
  commentId: T:CoreWCF.CommunicationState
  parent: CoreWCF
  isExternal: true
  name: CommunicationState
  nameWithType: CommunicationState
  fullName: CoreWCF.CommunicationState
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#InputSession*
  commentId: Overload:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#InputSession
  isExternal: true
  name: IContextChannel.InputSession
  nameWithType: ServiceChannelProxy.IContextChannel.InputSession
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.IContextChannel.InputSession
  nameWithType.vb: ServiceChannelProxy.CoreWCF.IContextChannel.InputSession
  name.vb: CoreWCF.IContextChannel.InputSession
- uid: CoreWCF.IContextChannel.InputSession
  commentId: P:CoreWCF.IContextChannel.InputSession
  parent: CoreWCF.IContextChannel
  isExternal: true
  name: InputSession
  nameWithType: IContextChannel.InputSession
  fullName: CoreWCF.IContextChannel.InputSession
- uid: CoreWCF.Channels.IInputSession
  commentId: T:CoreWCF.Channels.IInputSession
  parent: CoreWCF.Channels
  isExternal: true
  name: IInputSession
  nameWithType: IInputSession
  fullName: CoreWCF.Channels.IInputSession
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#LocalAddress*
  commentId: Overload:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#LocalAddress
  isExternal: true
  name: IContextChannel.LocalAddress
  nameWithType: ServiceChannelProxy.IContextChannel.LocalAddress
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.IContextChannel.LocalAddress
  nameWithType.vb: ServiceChannelProxy.CoreWCF.IContextChannel.LocalAddress
  name.vb: CoreWCF.IContextChannel.LocalAddress
- uid: CoreWCF.IContextChannel.LocalAddress
  commentId: P:CoreWCF.IContextChannel.LocalAddress
  parent: CoreWCF.IContextChannel
  isExternal: true
  name: LocalAddress
  nameWithType: IContextChannel.LocalAddress
  fullName: CoreWCF.IContextChannel.LocalAddress
- uid: CoreWCF.EndpointAddress
  commentId: T:CoreWCF.EndpointAddress
  parent: CoreWCF
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: CoreWCF.EndpointAddress
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#OperationTimeout*
  commentId: Overload:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#OperationTimeout
  isExternal: true
  name: IContextChannel.OperationTimeout
  nameWithType: ServiceChannelProxy.IContextChannel.OperationTimeout
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.IContextChannel.OperationTimeout
  nameWithType.vb: ServiceChannelProxy.CoreWCF.IContextChannel.OperationTimeout
  name.vb: CoreWCF.IContextChannel.OperationTimeout
- uid: CoreWCF.IContextChannel.OperationTimeout
  commentId: P:CoreWCF.IContextChannel.OperationTimeout
  parent: CoreWCF.IContextChannel
  isExternal: true
  name: OperationTimeout
  nameWithType: IContextChannel.OperationTimeout
  fullName: CoreWCF.IContextChannel.OperationTimeout
- uid: System.TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#OutputSession*
  commentId: Overload:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#OutputSession
  isExternal: true
  name: IContextChannel.OutputSession
  nameWithType: ServiceChannelProxy.IContextChannel.OutputSession
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.IContextChannel.OutputSession
  nameWithType.vb: ServiceChannelProxy.CoreWCF.IContextChannel.OutputSession
  name.vb: CoreWCF.IContextChannel.OutputSession
- uid: CoreWCF.IContextChannel.OutputSession
  commentId: P:CoreWCF.IContextChannel.OutputSession
  parent: CoreWCF.IContextChannel
  isExternal: true
  name: OutputSession
  nameWithType: IContextChannel.OutputSession
  fullName: CoreWCF.IContextChannel.OutputSession
- uid: CoreWCF.Channels.IOutputSession
  commentId: T:CoreWCF.Channels.IOutputSession
  parent: CoreWCF.Channels
  isExternal: true
  name: IOutputSession
  nameWithType: IOutputSession
  fullName: CoreWCF.Channels.IOutputSession
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IOutputChannel#RemoteAddress*
  commentId: Overload:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IOutputChannel#RemoteAddress
  isExternal: true
  name: IOutputChannel.RemoteAddress
  nameWithType: ServiceChannelProxy.IOutputChannel.RemoteAddress
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.Channels.IOutputChannel.RemoteAddress
  nameWithType.vb: ServiceChannelProxy.CoreWCF.Channels.IOutputChannel.RemoteAddress
  name.vb: CoreWCF.Channels.IOutputChannel.RemoteAddress
- uid: CoreWCF.Channels.IOutputChannel.RemoteAddress
  commentId: P:CoreWCF.Channels.IOutputChannel.RemoteAddress
  parent: CoreWCF.Channels.IOutputChannel
  isExternal: true
  name: RemoteAddress
  nameWithType: IOutputChannel.RemoteAddress
  fullName: CoreWCF.Channels.IOutputChannel.RemoteAddress
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IOutputChannel#Via*
  commentId: Overload:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IOutputChannel#Via
  isExternal: true
  name: IOutputChannel.Via
  nameWithType: ServiceChannelProxy.IOutputChannel.Via
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.Channels.IOutputChannel.Via
  nameWithType.vb: ServiceChannelProxy.CoreWCF.Channels.IOutputChannel.Via
  name.vb: CoreWCF.Channels.IOutputChannel.Via
- uid: CoreWCF.Channels.IOutputChannel.Via
  commentId: P:CoreWCF.Channels.IOutputChannel.Via
  parent: CoreWCF.Channels.IOutputChannel
  isExternal: true
  name: Via
  nameWithType: IOutputChannel.Via
  fullName: CoreWCF.Channels.IOutputChannel.Via
- uid: System.Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#RemoteAddress*
  commentId: Overload:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#RemoteAddress
  isExternal: true
  name: IContextChannel.RemoteAddress
  nameWithType: ServiceChannelProxy.IContextChannel.RemoteAddress
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.IContextChannel.RemoteAddress
  nameWithType.vb: ServiceChannelProxy.CoreWCF.IContextChannel.RemoteAddress
  name.vb: CoreWCF.IContextChannel.RemoteAddress
- uid: CoreWCF.IContextChannel.RemoteAddress
  commentId: P:CoreWCF.IContextChannel.RemoteAddress
  parent: CoreWCF.IContextChannel
  isExternal: true
  name: RemoteAddress
  nameWithType: IContextChannel.RemoteAddress
  fullName: CoreWCF.IContextChannel.RemoteAddress
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#SessionId*
  commentId: Overload:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IContextChannel#SessionId
  isExternal: true
  name: IContextChannel.SessionId
  nameWithType: ServiceChannelProxy.IContextChannel.SessionId
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.IContextChannel.SessionId
  nameWithType.vb: ServiceChannelProxy.CoreWCF.IContextChannel.SessionId
  name.vb: CoreWCF.IContextChannel.SessionId
- uid: CoreWCF.IContextChannel.SessionId
  commentId: P:CoreWCF.IContextChannel.SessionId
  parent: CoreWCF.IContextChannel
  isExternal: true
  name: SessionId
  nameWithType: IContextChannel.SessionId
  fullName: CoreWCF.IContextChannel.SessionId
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IExtensibleObject{CoreWCF#IContextChannel}#Extensions*
  commentId: Overload:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#IExtensibleObject{CoreWCF#IContextChannel}#Extensions
  isExternal: true
  name: IExtensibleObject<IContextChannel>.Extensions
  nameWithType: ServiceChannelProxy.IExtensibleObject<IContextChannel>.Extensions
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.IExtensibleObject<CoreWCF.IContextChannel>.Extensions
  nameWithType.vb: ServiceChannelProxy.CoreWCF.IExtensibleObject<CoreWCF.IContextChannel>.Extensions
  name.vb: CoreWCF.IExtensibleObject<CoreWCF.IContextChannel>.Extensions
- uid: CoreWCF.IExtensibleObject{CoreWCF.IContextChannel}.Extensions
  commentId: P:CoreWCF.IExtensibleObject{CoreWCF.IContextChannel}.Extensions
  parent: CoreWCF.IExtensibleObject{CoreWCF.IContextChannel}
  definition: CoreWCF.IExtensibleObject`1.Extensions
  name: Extensions
  nameWithType: IExtensibleObject<IContextChannel>.Extensions
  fullName: CoreWCF.IExtensibleObject<CoreWCF.IContextChannel>.Extensions
  nameWithType.vb: IExtensibleObject(Of IContextChannel).Extensions
  fullName.vb: CoreWCF.IExtensibleObject(Of CoreWCF.IContextChannel).Extensions
- uid: CoreWCF.IExtensionCollection{CoreWCF.IContextChannel}
  commentId: T:CoreWCF.IExtensionCollection{CoreWCF.IContextChannel}
  parent: CoreWCF
  definition: CoreWCF.IExtensionCollection`1
  name: IExtensionCollection<IContextChannel>
  nameWithType: IExtensionCollection<IContextChannel>
  fullName: CoreWCF.IExtensionCollection<CoreWCF.IContextChannel>
  nameWithType.vb: IExtensionCollection(Of IContextChannel)
  fullName.vb: CoreWCF.IExtensionCollection(Of CoreWCF.IContextChannel)
  name.vb: IExtensionCollection(Of IContextChannel)
  spec.csharp:
  - uid: CoreWCF.IExtensionCollection`1
    name: IExtensionCollection
    nameWithType: IExtensionCollection
    fullName: CoreWCF.IExtensionCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.IContextChannel
    name: IContextChannel
    nameWithType: IContextChannel
    fullName: CoreWCF.IContextChannel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CoreWCF.IExtensionCollection`1
    name: IExtensionCollection
    nameWithType: IExtensionCollection
    fullName: CoreWCF.IExtensionCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.IContextChannel
    name: IContextChannel
    nameWithType: IContextChannel
    fullName: CoreWCF.IContextChannel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IExtensibleObject`1.Extensions
  commentId: P:CoreWCF.IExtensibleObject`1.Extensions
  isExternal: true
  name: Extensions
  nameWithType: IExtensibleObject<T>.Extensions
  fullName: CoreWCF.IExtensibleObject<T>.Extensions
  nameWithType.vb: IExtensibleObject(Of T).Extensions
  fullName.vb: CoreWCF.IExtensibleObject(Of T).Extensions
- uid: CoreWCF.IExtensionCollection`1
  commentId: T:CoreWCF.IExtensionCollection`1
  isExternal: true
  name: IExtensionCollection<T>
  nameWithType: IExtensionCollection<T>
  fullName: CoreWCF.IExtensionCollection<T>
  nameWithType.vb: IExtensionCollection(Of T)
  fullName.vb: CoreWCF.IExtensionCollection(Of T)
  name.vb: IExtensionCollection(Of T)
  spec.csharp:
  - uid: CoreWCF.IExtensionCollection`1
    name: IExtensionCollection
    nameWithType: IExtensionCollection
    fullName: CoreWCF.IExtensionCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CoreWCF.IExtensionCollection`1
    name: IExtensionCollection
    nameWithType: IExtensionCollection
    fullName: CoreWCF.IExtensionCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IRequestChannel#RemoteAddress*
  commentId: Overload:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IRequestChannel#RemoteAddress
  isExternal: true
  name: IRequestChannel.RemoteAddress
  nameWithType: ServiceChannelProxy.IRequestChannel.RemoteAddress
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.Channels.IRequestChannel.RemoteAddress
  nameWithType.vb: ServiceChannelProxy.CoreWCF.Channels.IRequestChannel.RemoteAddress
  name.vb: CoreWCF.Channels.IRequestChannel.RemoteAddress
- uid: CoreWCF.Channels.IRequestChannel.RemoteAddress
  commentId: P:CoreWCF.Channels.IRequestChannel.RemoteAddress
  parent: CoreWCF.Channels.IRequestChannel
  isExternal: true
  name: RemoteAddress
  nameWithType: IRequestChannel.RemoteAddress
  fullName: CoreWCF.Channels.IRequestChannel.RemoteAddress
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IRequestChannel#Via*
  commentId: Overload:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IRequestChannel#Via
  isExternal: true
  name: IRequestChannel.Via
  nameWithType: ServiceChannelProxy.IRequestChannel.Via
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.Channels.IRequestChannel.Via
  nameWithType.vb: ServiceChannelProxy.CoreWCF.Channels.IRequestChannel.Via
  name.vb: CoreWCF.Channels.IRequestChannel.Via
- uid: CoreWCF.Channels.IRequestChannel.Via
  commentId: P:CoreWCF.Channels.IRequestChannel.Via
  parent: CoreWCF.Channels.IRequestChannel
  isExternal: true
  name: Via
  nameWithType: IRequestChannel.Via
  fullName: CoreWCF.Channels.IRequestChannel.Via
- uid: CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IChannel#ChannelDispatcher*
  commentId: Overload:CoreWCF.Channels.ServiceChannelProxy.CoreWCF#Channels#IChannel#ChannelDispatcher
  isExternal: true
  name: IChannel.ChannelDispatcher
  nameWithType: ServiceChannelProxy.IChannel.ChannelDispatcher
  fullName: CoreWCF.Channels.ServiceChannelProxy.CoreWCF.Channels.IChannel.ChannelDispatcher
  nameWithType.vb: ServiceChannelProxy.CoreWCF.Channels.IChannel.ChannelDispatcher
  name.vb: CoreWCF.Channels.IChannel.ChannelDispatcher
- uid: CoreWCF.Channels.IChannel.ChannelDispatcher
  commentId: P:CoreWCF.Channels.IChannel.ChannelDispatcher
  parent: CoreWCF.Channels.IChannel
  isExternal: true
  name: ChannelDispatcher
  nameWithType: IChannel.ChannelDispatcher
  fullName: CoreWCF.Channels.IChannel.ChannelDispatcher
- uid: CoreWCF.Configuration.IServiceChannelDispatcher
  commentId: T:CoreWCF.Configuration.IServiceChannelDispatcher
  parent: CoreWCF.Configuration
  isExternal: true
  name: IServiceChannelDispatcher
  nameWithType: IServiceChannelDispatcher
  fullName: CoreWCF.Configuration.IServiceChannelDispatcher
- uid: CoreWCF.Configuration
  commentId: N:CoreWCF.Configuration
  isExternal: true
  name: CoreWCF.Configuration
  nameWithType: CoreWCF.Configuration
  fullName: CoreWCF.Configuration
- uid: CoreWCF.ICommunicationObject.Closed
  commentId: E:CoreWCF.ICommunicationObject.Closed
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Closed
  nameWithType: ICommunicationObject.Closed
  fullName: CoreWCF.ICommunicationObject.Closed
- uid: System.EventHandler
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: CoreWCF.ICommunicationObject.Closing
  commentId: E:CoreWCF.ICommunicationObject.Closing
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Closing
  nameWithType: ICommunicationObject.Closing
  fullName: CoreWCF.ICommunicationObject.Closing
- uid: CoreWCF.ICommunicationObject.Faulted
  commentId: E:CoreWCF.ICommunicationObject.Faulted
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Faulted
  nameWithType: ICommunicationObject.Faulted
  fullName: CoreWCF.ICommunicationObject.Faulted
- uid: CoreWCF.ICommunicationObject.Opened
  commentId: E:CoreWCF.ICommunicationObject.Opened
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Opened
  nameWithType: ICommunicationObject.Opened
  fullName: CoreWCF.ICommunicationObject.Opened
- uid: CoreWCF.ICommunicationObject.Opening
  commentId: E:CoreWCF.ICommunicationObject.Opening
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Opening
  nameWithType: ICommunicationObject.Opening
  fullName: CoreWCF.ICommunicationObject.Opening
- uid: CoreWCF.IClientChannel.UnknownMessageReceived
  commentId: E:CoreWCF.IClientChannel.UnknownMessageReceived
  parent: CoreWCF.IClientChannel
  isExternal: true
  name: UnknownMessageReceived
  nameWithType: IClientChannel.UnknownMessageReceived
  fullName: CoreWCF.IClientChannel.UnknownMessageReceived
- uid: System.EventHandler{CoreWCF.UnknownMessageReceivedEventArgs}
  commentId: '!:System.EventHandler{CoreWCF.UnknownMessageReceivedEventArgs}'
  definition: System.EventHandler`1
  name: EventHandler<UnknownMessageReceivedEventArgs>
  nameWithType: EventHandler<UnknownMessageReceivedEventArgs>
  fullName: System.EventHandler<CoreWCF.UnknownMessageReceivedEventArgs>
  nameWithType.vb: EventHandler(Of UnknownMessageReceivedEventArgs)
  fullName.vb: System.EventHandler(Of CoreWCF.UnknownMessageReceivedEventArgs)
  name.vb: EventHandler(Of UnknownMessageReceivedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.UnknownMessageReceivedEventArgs
    name: UnknownMessageReceivedEventArgs
    nameWithType: UnknownMessageReceivedEventArgs
    fullName: CoreWCF.UnknownMessageReceivedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.UnknownMessageReceivedEventArgs
    name: UnknownMessageReceivedEventArgs
    nameWithType: UnknownMessageReceivedEventArgs
    fullName: CoreWCF.UnknownMessageReceivedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  isExternal: true
  name: EventHandler<>
  nameWithType: EventHandler<>
  fullName: System.EventHandler<>
  nameWithType.vb: EventHandler(Of )
  fullName.vb: System.EventHandler(Of )
  name.vb: EventHandler(Of )
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
