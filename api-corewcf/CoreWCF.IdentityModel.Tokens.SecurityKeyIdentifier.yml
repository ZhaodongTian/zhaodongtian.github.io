### YamlMime:ManagedReference
items:
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
  id: SecurityKeyIdentifier
  parent: CoreWCF.IdentityModel.Tokens
  children:
  - CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor
  - CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(CoreWCF.IdentityModel.SecurityKeyIdentifierClause[])
  - CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Add(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  - CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
  - CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Count
  - CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey
  - CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1
  - CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator
  - CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
  - CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)
  - CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly
  - CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.ToString
  - CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)
  langs:
  - csharp
  - vb
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: Represents a key identifier.
  remarks: "Typically, the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifier> is not used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token. These references are represented by classes that derive from the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> class. The &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifier> class contains the collection of these references.  \n\n"
  syntax:
    content: 'public class SecurityKeyIdentifier : Object'
    content.vb: >-
      Public Class SecurityKeyIdentifier
          Inherits Object
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{CoreWCF.IdentityModel.SecurityKeyIdentifierClause}
  - System.Collections.IEnumerable
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor
  id: '#ctor'
  parent: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  - vb
  name: SecurityKeyIdentifier()
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier()
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier()
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public SecurityKeyIdentifier()
    content.vb: Public Sub New
  overload: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(CoreWCF.IdentityModel.SecurityKeyIdentifierClause[])
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(CoreWCF.IdentityModel.SecurityKeyIdentifierClause[])
  id: '#ctor(CoreWCF.IdentityModel.SecurityKeyIdentifierClause[])'
  parent: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  - vb
  name: SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier(CoreWCF.IdentityModel.SecurityKeyIdentifierClause[])
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public SecurityKeyIdentifier(params SecurityKeyIdentifierClause[] clauses)
    parameters:
    - id: clauses
      type: CoreWCF.IdentityModel.SecurityKeyIdentifierClause[]
    content.vb: Public Sub New(ParamArray clauses As SecurityKeyIdentifierClause())
  overload: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor*
  nameWithType.vb: SecurityKeyIdentifier.SecurityKeyIdentifier(SecurityKeyIdentifierClause())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier(CoreWCF.IdentityModel.SecurityKeyIdentifierClause())
  name.vb: SecurityKeyIdentifier(SecurityKeyIdentifierClause())
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Add(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Add(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  id: Add(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  parent: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  - vb
  name: Add(SecurityKeyIdentifierClause)
  nameWithType: SecurityKeyIdentifier.Add(SecurityKeyIdentifierClause)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Add(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public void Add(SecurityKeyIdentifierClause clause)
    parameters:
    - id: clause
      type: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    content.vb: Public Sub Add(clause As SecurityKeyIdentifierClause)
  overload: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey
  id: CreateKey
  parent: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  - vb
  name: CreateKey()
  nameWithType: SecurityKeyIdentifier.CreateKey()
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public SecurityKey CreateKey()
    return:
      type: CoreWCF.IdentityModel.Tokens.SecurityKey
    content.vb: Public Function CreateKey As SecurityKey
  overload: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1
  id: Find``1
  parent: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  - vb
  name: Find<TClause>()
  nameWithType: SecurityKeyIdentifier.Find<TClause>()
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Find<TClause>()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: >-
      public TClause Find<TClause>()
          where TClause : SecurityKeyIdentifierClause
    typeParameters:
    - id: TClause
    return:
      type: '{TClause}'
    content.vb: Public Function Find(Of TClause As SecurityKeyIdentifierClause) As TClause
  overload: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Find*
  nameWithType.vb: SecurityKeyIdentifier.Find(Of TClause)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Find(Of TClause)()
  name.vb: Find(Of TClause)()
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator
  id: GetEnumerator
  parent: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: SecurityKeyIdentifier.GetEnumerator()
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public IEnumerator<SecurityKeyIdentifierClause> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{CoreWCF.IdentityModel.SecurityKeyIdentifierClause}
    content.vb: Public Function GetEnumerator As IEnumerator(Of SecurityKeyIdentifierClause)
  overload: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly
  id: MakeReadOnly
  parent: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  - vb
  name: MakeReadOnly()
  nameWithType: SecurityKeyIdentifier.MakeReadOnly()
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public void MakeReadOnly()
    content.vb: Public Sub MakeReadOnly
  overload: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.ToString
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.ToString
  id: ToString
  parent: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SecurityKeyIdentifier.ToString()
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.ToString()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)
  id: TryFind``1(``0@)
  parent: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  - vb
  name: TryFind<TClause>(out TClause)
  nameWithType: SecurityKeyIdentifier.TryFind<TClause>(out TClause)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind<TClause>(out TClause)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: >-
      public bool TryFind<TClause>(out TClause clause)
          where TClause : SecurityKeyIdentifierClause
    parameters:
    - id: clause
      type: '{TClause}'
    typeParameters:
    - id: TClause
    return:
      type: System.Boolean
    content.vb: Public Function TryFind(Of TClause As SecurityKeyIdentifierClause)(ByRef clause As TClause) As Boolean
  overload: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind*
  nameWithType.vb: SecurityKeyIdentifier.TryFind(Of TClause)(ByRef TClause)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind(Of TClause)(ByRef TClause)
  name.vb: TryFind(Of TClause)(ByRef TClause)
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)
  id: Item(System.Int32)
  parent: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: SecurityKeyIdentifier.Item[Int32]
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Item[System.Int32]
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public SecurityKeyIdentifierClause this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    content.vb: Public ReadOnly Property Item(index As Integer) As SecurityKeyIdentifierClause
  overload: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Item*
  nameWithType.vb: SecurityKeyIdentifier.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)
  name.vb: Item(Int32)
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
  id: CanCreateKey
  parent: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  - vb
  name: CanCreateKey
  nameWithType: SecurityKeyIdentifier.CanCreateKey
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public bool CanCreateKey { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanCreateKey As Boolean
  overload: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Count
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Count
  id: Count
  parent: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: SecurityKeyIdentifier.Count
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Count
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
  id: IsReadOnly
  parent: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: SecurityKeyIdentifier.IsReadOnly
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CoreWCF.IdentityModel.Tokens
  commentId: N:CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: CoreWCF.IdentityModel.Tokens
  nameWithType: CoreWCF.IdentityModel.Tokens
  fullName: CoreWCF.IdentityModel.Tokens
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{CoreWCF.IdentityModel.SecurityKeyIdentifierClause}
  commentId: '!:System.Collections.Generic.IEnumerable{CoreWCF.IdentityModel.SecurityKeyIdentifierClause}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SecurityKeyIdentifierClause>
  nameWithType: IEnumerable<SecurityKeyIdentifierClause>
  fullName: System.Collections.Generic.IEnumerable<CoreWCF.IdentityModel.SecurityKeyIdentifierClause>
  nameWithType.vb: IEnumerable(Of SecurityKeyIdentifierClause)
  fullName.vb: System.Collections.Generic.IEnumerable(Of CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  name.vb: IEnumerable(Of SecurityKeyIdentifierClause)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor
  isExternal: true
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier
- uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause[]
  isExternal: true
  name: SecurityKeyIdentifierClause[]
  nameWithType: SecurityKeyIdentifierClause[]
  fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause[]
  nameWithType.vb: SecurityKeyIdentifierClause()
  fullName.vb: CoreWCF.IdentityModel.SecurityKeyIdentifierClause()
  name.vb: SecurityKeyIdentifierClause()
  spec.csharp:
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Add*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Add
  isExternal: true
  name: Add
  nameWithType: SecurityKeyIdentifier.Add
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Add
- uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
  commentId: T:CoreWCF.IdentityModel.SecurityKeyIdentifierClause
  parent: CoreWCF.IdentityModel
  isExternal: true
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
- uid: CoreWCF.IdentityModel
  commentId: N:CoreWCF.IdentityModel
  isExternal: true
  name: CoreWCF.IdentityModel
  nameWithType: CoreWCF.IdentityModel
  fullName: CoreWCF.IdentityModel
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey
  isExternal: true
  name: CreateKey
  nameWithType: SecurityKeyIdentifier.CreateKey
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey
- uid: CoreWCF.IdentityModel.Tokens.SecurityKey
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityKey
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKey
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Find*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Find
  isExternal: true
  name: Find
  nameWithType: SecurityKeyIdentifier.Find
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Find
- uid: '{TClause}'
  commentId: '!:TClause'
  definition: TClause
  name: TClause
  nameWithType: TClause
  fullName: TClause
- uid: TClause
  name: TClause
  nameWithType: TClause
  fullName: TClause
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator
  isExternal: true
  name: GetEnumerator
  nameWithType: SecurityKeyIdentifier.GetEnumerator
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator
- uid: System.Collections.Generic.IEnumerator{CoreWCF.IdentityModel.SecurityKeyIdentifierClause}
  commentId: '!:System.Collections.Generic.IEnumerator{CoreWCF.IdentityModel.SecurityKeyIdentifierClause}'
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<SecurityKeyIdentifierClause>
  nameWithType: IEnumerator<SecurityKeyIdentifierClause>
  fullName: System.Collections.Generic.IEnumerator<CoreWCF.IdentityModel.SecurityKeyIdentifierClause>
  nameWithType.vb: IEnumerator(Of SecurityKeyIdentifierClause)
  fullName.vb: System.Collections.Generic.IEnumerator(Of CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  name.vb: IEnumerator(Of SecurityKeyIdentifierClause)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<>
  nameWithType: IEnumerator<>
  fullName: System.Collections.Generic.IEnumerator<>
  nameWithType.vb: IEnumerator(Of )
  fullName.vb: System.Collections.Generic.IEnumerator(Of )
  name.vb: IEnumerator(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly
  isExternal: true
  name: MakeReadOnly
  nameWithType: SecurityKeyIdentifier.MakeReadOnly
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.ToString*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.ToString
  isExternal: true
  name: ToString
  nameWithType: SecurityKeyIdentifier.ToString
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind
  isExternal: true
  name: TryFind
  nameWithType: SecurityKeyIdentifier.TryFind
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Item*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Item
  isExternal: true
  name: Item
  nameWithType: SecurityKeyIdentifier.Item
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
  isExternal: true
  name: CanCreateKey
  nameWithType: SecurityKeyIdentifier.CanCreateKey
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Count*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Count
  isExternal: true
  name: Count
  nameWithType: SecurityKeyIdentifier.Count
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.Count
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: SecurityKeyIdentifier.IsReadOnly
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
