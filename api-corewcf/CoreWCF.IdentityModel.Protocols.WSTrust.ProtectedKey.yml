### YamlMime:ManagedReference
items:
- uid: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey
  commentId: T:CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey
  id: ProtectedKey
  parent: CoreWCF.IdentityModel.Protocols.WSTrust
  children:
  - CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[])
  - CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[],CoreWCF.IdentityModel.Tokens.EncryptingCredentials)
  - CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes
  - CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials
  langs:
  - csharp
  - vb
  name: ProtectedKey
  nameWithType: ProtectedKey
  fullName: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Protocols.WSTrust
  summary: "\nThis class are used in defining Entropy and RequestProofToken element inside the \nRequestSecurityToken and RequestSecurityTokenResponse.\n"
  syntax:
    content: 'public class ProtectedKey : Object'
    content.vb: >-
      Public Class ProtectedKey
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[])
  commentId: M:CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey
  langs:
  - csharp
  - vb
  name: ProtectedKey(Byte[])
  nameWithType: ProtectedKey.ProtectedKey(Byte[])
  fullName: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.ProtectedKey(System.Byte[])
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Protocols.WSTrust
  summary: "\nUse this constructor if we want to send the key material in clear text.\n"
  syntax:
    content: public ProtectedKey(byte[] secret)
    parameters:
    - id: secret
      type: System.Byte[]
      description: The key material that needs to be protected.
    content.vb: Public Sub New(secret As Byte())
  overload: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor*
  nameWithType.vb: ProtectedKey.ProtectedKey(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.ProtectedKey(System.Byte())
  name.vb: ProtectedKey(Byte())
- uid: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[],CoreWCF.IdentityModel.Tokens.EncryptingCredentials)
  commentId: M:CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[],CoreWCF.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.Byte[],CoreWCF.IdentityModel.Tokens.EncryptingCredentials)'
  parent: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey
  langs:
  - csharp
  - vb
  name: ProtectedKey(Byte[], EncryptingCredentials)
  nameWithType: ProtectedKey.ProtectedKey(Byte[], EncryptingCredentials)
  fullName: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.ProtectedKey(System.Byte[], CoreWCF.IdentityModel.Tokens.EncryptingCredentials)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Protocols.WSTrust
  summary: "\nUse this constructor if we want to send the key material encrypted.\n"
  syntax:
    content: public ProtectedKey(byte[] secret, EncryptingCredentials wrappingCredentials)
    parameters:
    - id: secret
      type: System.Byte[]
      description: The key material that needs to be protected.
    - id: wrappingCredentials
      type: CoreWCF.IdentityModel.Tokens.EncryptingCredentials
      description: The encrypting credentials used to encrypt the key material.
    content.vb: Public Sub New(secret As Byte(), wrappingCredentials As EncryptingCredentials)
  overload: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor*
  nameWithType.vb: ProtectedKey.ProtectedKey(Byte(), EncryptingCredentials)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.ProtectedKey(System.Byte(), CoreWCF.IdentityModel.Tokens.EncryptingCredentials)
  name.vb: ProtectedKey(Byte(), EncryptingCredentials)
- uid: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes
  commentId: M:CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes
  id: GetKeyBytes
  parent: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey
  langs:
  - csharp
  - vb
  name: GetKeyBytes()
  nameWithType: ProtectedKey.GetKeyBytes()
  fullName: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Protocols.WSTrust
  summary: "\nGets the key material.\n"
  syntax:
    content: public byte[] GetKeyBytes()
    return:
      type: System.Byte[]
    content.vb: Public Function GetKeyBytes As Byte()
  overload: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials
  commentId: P:CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials
  id: WrappingCredentials
  parent: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey
  langs:
  - csharp
  - vb
  name: WrappingCredentials
  nameWithType: ProtectedKey.WrappingCredentials
  fullName: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Protocols.WSTrust
  summary: "\nGets the encrypting credentials. Null means that the keys are not encrypted.\n"
  syntax:
    content: public EncryptingCredentials WrappingCredentials { get; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Tokens.EncryptingCredentials
    content.vb: Public ReadOnly Property WrappingCredentials As EncryptingCredentials
  overload: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CoreWCF.IdentityModel.Protocols.WSTrust
  commentId: N:CoreWCF.IdentityModel.Protocols.WSTrust
  isExternal: true
  name: CoreWCF.IdentityModel.Protocols.WSTrust
  nameWithType: CoreWCF.IdentityModel.Protocols.WSTrust
  fullName: CoreWCF.IdentityModel.Protocols.WSTrust
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor*
  commentId: Overload:CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor
  isExternal: true
  name: ProtectedKey
  nameWithType: ProtectedKey.ProtectedKey
  fullName: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.ProtectedKey
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: CoreWCF.IdentityModel.Tokens.EncryptingCredentials
  commentId: T:CoreWCF.IdentityModel.Tokens.EncryptingCredentials
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials
  fullName: CoreWCF.IdentityModel.Tokens.EncryptingCredentials
- uid: CoreWCF.IdentityModel.Tokens
  commentId: N:CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: CoreWCF.IdentityModel.Tokens
  nameWithType: CoreWCF.IdentityModel.Tokens
  fullName: CoreWCF.IdentityModel.Tokens
- uid: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes*
  commentId: Overload:CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes
  isExternal: true
  name: GetKeyBytes
  nameWithType: ProtectedKey.GetKeyBytes
  fullName: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes
- uid: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials*
  commentId: Overload:CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials
  isExternal: true
  name: WrappingCredentials
  nameWithType: ProtectedKey.WrappingCredentials
  fullName: CoreWCF.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials
