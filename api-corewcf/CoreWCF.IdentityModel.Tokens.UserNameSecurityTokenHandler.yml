### YamlMime:ManagedReference
items:
- uid: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler
  commentId: T:CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler
  id: UserNameSecurityTokenHandler
  parent: CoreWCF.IdentityModel.Tokens
  children:
  - CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.#ctor
  - CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  - CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken
  - CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers
  - CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  - CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword
  - CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType
  - CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,CoreWCF.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  - vb
  name: UserNameSecurityTokenHandler
  nameWithType: UserNameSecurityTokenHandler
  fullName: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nDefines a SecurityTokenHandler for Username Password Tokens. \n"
  syntax:
    content: 'public abstract class UserNameSecurityTokenHandler : SecurityTokenHandler'
    content.vb: >-
      Public MustInherit Class UserNameSecurityTokenHandler
          Inherits SecurityTokenHandler
  inheritance:
  - System.Object
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  inheritedMembers:
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,CoreWCF.IdentityModel.Selectors.SecurityTokenResolver)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(CoreWCF.IdentityModel.Tokens.SecurityToken,System.Boolean)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.Configuration
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.#ctor
  commentId: M:CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.#ctor
  id: '#ctor'
  parent: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler
  langs:
  - csharp
  - vb
  name: UserNameSecurityTokenHandler()
  nameWithType: UserNameSecurityTokenHandler.UserNameSecurityTokenHandler()
  fullName: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.UserNameSecurityTokenHandler()
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nInitializes an instance of <xref href=\"CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler\" data-throw-if-not-resolved=\"false\"></xref>"
  syntax:
    content: protected UserNameSecurityTokenHandler()
    content.vb: Protected Sub New
  overload: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  commentId: M:CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  id: CanReadToken(System.Xml.XmlReader)
  parent: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler
  langs:
  - csharp
  - vb
  name: CanReadToken(XmlReader)
  nameWithType: UserNameSecurityTokenHandler.CanReadToken(XmlReader)
  fullName: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public override bool CanReadToken(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
    return:
      type: System.Boolean
    content.vb: Public Overrides Function CanReadToken(reader As XmlReader) As Boolean
  overridden: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  overload: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers
  commentId: M:CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers
  id: GetTokenTypeIdentifiers
  parent: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler
  langs:
  - csharp
  - vb
  name: GetTokenTypeIdentifiers()
  nameWithType: UserNameSecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGet the TokenTypeIdentifier of the token that this handler can work with.\n"
  syntax:
    content: public override string[] GetTokenTypeIdentifiers()
    return:
      type: System.String[]
    content.vb: Public Overrides Function GetTokenTypeIdentifiers As String()
  overridden: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers
  overload: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  commentId: M:CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  id: ReadToken(System.Xml.XmlReader)
  parent: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler
  langs:
  - csharp
  - vb
  name: ReadToken(XmlReader)
  nameWithType: UserNameSecurityTokenHandler.ReadToken(XmlReader)
  fullName: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nReads the UsernameSecurityToken from the given XmlReader.\n"
  syntax:
    content: public override SecurityToken ReadToken(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: XmlReader pointing to the SecurityToken.
    return:
      type: CoreWCF.IdentityModel.Tokens.SecurityToken
      description: An instance of <xref href="CoreWCF.IdentityModel.Tokens.UserNameSecurityToken" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function ReadToken(reader As XmlReader) As SecurityToken
  overridden: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  overload: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The parameter &apos;reader&apos; is null.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The token cannot be read.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The Password was not in plain text format.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "An unknown element was found in the SecurityToken or \n      the username was not specified."
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,CoreWCF.IdentityModel.Tokens.SecurityToken)
  commentId: M:CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,CoreWCF.IdentityModel.Tokens.SecurityToken)
  id: WriteToken(System.Xml.XmlWriter,CoreWCF.IdentityModel.Tokens.SecurityToken)
  parent: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler
  langs:
  - csharp
  - vb
  name: WriteToken(XmlWriter, SecurityToken)
  nameWithType: UserNameSecurityTokenHandler.WriteToken(XmlWriter, SecurityToken)
  fullName: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken(System.Xml.XmlWriter, CoreWCF.IdentityModel.Tokens.SecurityToken)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public override void WriteToken(XmlWriter writer, SecurityToken token)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
    - id: token
      type: CoreWCF.IdentityModel.Tokens.SecurityToken
    content.vb: Public Overrides Sub WriteToken(writer As XmlWriter, token As SecurityToken)
  overridden: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,CoreWCF.IdentityModel.Tokens.SecurityToken)
  overload: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword
  commentId: P:CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword
  id: RetainPassword
  parent: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler
  langs:
  - csharp
  - vb
  name: RetainPassword
  nameWithType: UserNameSecurityTokenHandler.RetainPassword
  fullName: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nControls if the password will be retained in the bootstrap token that is\nattached to the ClaimsIdentity in ValidateToken.  The default is false.\n"
  syntax:
    content: public virtual bool RetainPassword { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property RetainPassword As Boolean
  overload: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken
  commentId: P:CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken
  id: CanWriteToken
  parent: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler
  langs:
  - csharp
  - vb
  name: CanWriteToken
  nameWithType: UserNameSecurityTokenHandler.CanWriteToken
  fullName: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nReturns true to indicate that the handler can write UsernameSecurityToken.\n"
  syntax:
    content: public override bool CanWriteToken { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property CanWriteToken As Boolean
  overridden: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken
  overload: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType
  commentId: P:CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType
  id: TokenType
  parent: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler
  langs:
  - csharp
  - vb
  name: TokenType
  nameWithType: UserNameSecurityTokenHandler.TokenType
  fullName: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGet the System.Type of the SecurityToken that this handler can handle.\n"
  syntax:
    content: public override Type TokenType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Overrides ReadOnly Property TokenType As Type
  overridden: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.TokenType
  overload: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: CoreWCF.IdentityModel.Tokens
  commentId: N:CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: CoreWCF.IdentityModel.Tokens
  nameWithType: CoreWCF.IdentityModel.Tokens
  fullName: CoreWCF.IdentityModel.Tokens
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SecurityTokenHandler
  nameWithType: SecurityTokenHandler
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: CanReadToken(String)
  nameWithType: SecurityTokenHandler.CanReadToken(String)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
    name: CanReadToken
    nameWithType: SecurityTokenHandler.CanReadToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
    name: CanReadToken
    nameWithType: SecurityTokenHandler.CanReadToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,CoreWCF.IdentityModel.Selectors.SecurityTokenResolver)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,CoreWCF.IdentityModel.Selectors.SecurityTokenResolver)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: ReadToken(XmlReader, SecurityTokenResolver)
  nameWithType: SecurityTokenHandler.ReadToken(XmlReader, SecurityTokenResolver)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader, CoreWCF.IdentityModel.Selectors.SecurityTokenResolver)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,CoreWCF.IdentityModel.Selectors.SecurityTokenResolver)
    name: ReadToken
    nameWithType: SecurityTokenHandler.ReadToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.IdentityModel.Selectors.SecurityTokenResolver
    name: SecurityTokenResolver
    nameWithType: SecurityTokenResolver
    fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenResolver
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,CoreWCF.IdentityModel.Selectors.SecurityTokenResolver)
    name: ReadToken
    nameWithType: SecurityTokenHandler.ReadToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.IdentityModel.Selectors.SecurityTokenResolver
    name: SecurityTokenResolver
    nameWithType: SecurityTokenResolver
    fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenResolver
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: ReadToken(String)
  nameWithType: SecurityTokenHandler.ReadToken(String)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
    name: ReadToken
    nameWithType: SecurityTokenHandler.ReadToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
    name: ReadToken
    nameWithType: SecurityTokenHandler.ReadToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: WriteToken(SecurityToken)
  nameWithType: SecurityTokenHandler.WriteToken(SecurityToken)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: WriteToken
    nameWithType: SecurityTokenHandler.WriteToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: WriteToken
    nameWithType: SecurityTokenHandler.WriteToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
    name: CanReadKeyIdentifierClause
    nameWithType: SecurityTokenHandler.CanReadKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
    name: CanReadKeyIdentifierClause
    nameWithType: SecurityTokenHandler.CanReadKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
    name: ReadKeyIdentifierClause
    nameWithType: SecurityTokenHandler.ReadKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
    name: ReadKeyIdentifierClause
    nameWithType: SecurityTokenHandler.ReadKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
    name: CanWriteKeyIdentifierClause
    nameWithType: SecurityTokenHandler.CanWriteKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
    name: CanWriteKeyIdentifierClause
    nameWithType: SecurityTokenHandler.CanWriteKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: WriteKeyIdentifierClause(XmlWriter, SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter, SecurityKeyIdentifierClause)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter, CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
    name: WriteKeyIdentifierClause
    nameWithType: SecurityTokenHandler.WriteKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
    name: WriteKeyIdentifierClause
    nameWithType: SecurityTokenHandler.WriteKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: CreateToken(SecurityTokenDescriptor)
  nameWithType: SecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor)
    name: CreateToken
    nameWithType: SecurityTokenHandler.CreateToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
    name: SecurityTokenDescriptor
    nameWithType: SecurityTokenDescriptor
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor)
    name: CreateToken
    nameWithType: SecurityTokenHandler.CreateToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
    name: SecurityTokenDescriptor
    nameWithType: SecurityTokenDescriptor
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(CoreWCF.IdentityModel.Tokens.SecurityToken,System.Boolean)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(CoreWCF.IdentityModel.Tokens.SecurityToken,System.Boolean)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: CreateSecurityTokenReference(SecurityToken, Boolean)
  nameWithType: SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken, Boolean)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(CoreWCF.IdentityModel.Tokens.SecurityToken, System.Boolean)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(CoreWCF.IdentityModel.Tokens.SecurityToken,System.Boolean)
    name: CreateSecurityTokenReference
    nameWithType: SecurityTokenHandler.CreateSecurityTokenReference
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(CoreWCF.IdentityModel.Tokens.SecurityToken,System.Boolean)
    name: CreateSecurityTokenReference
    nameWithType: SecurityTokenHandler.CreateSecurityTokenReference
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: ValidateToken(SecurityToken)
  nameWithType: SecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: ValidateToken
    nameWithType: SecurityTokenHandler.ValidateToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: ValidateToken
    nameWithType: SecurityTokenHandler.ValidateToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: DetectReplayedToken(SecurityToken)
  nameWithType: SecurityTokenHandler.DetectReplayedToken(SecurityToken)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: DetectReplayedToken
    nameWithType: SecurityTokenHandler.DetectReplayedToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: DetectReplayedToken
    nameWithType: SecurityTokenHandler.DetectReplayedToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: CanValidateToken
  nameWithType: SecurityTokenHandler.CanValidateToken
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.Configuration
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.Configuration
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: Configuration
  nameWithType: SecurityTokenHandler.Configuration
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.Configuration
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: ContainingCollection
  nameWithType: SecurityTokenHandler.ContainingCollection
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.#ctor*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.#ctor
  isExternal: true
  name: UserNameSecurityTokenHandler
  nameWithType: UserNameSecurityTokenHandler.UserNameSecurityTokenHandler
  fullName: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.UserNameSecurityTokenHandler
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: CanReadToken(XmlReader)
  nameWithType: SecurityTokenHandler.CanReadToken(XmlReader)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
    name: CanReadToken
    nameWithType: SecurityTokenHandler.CanReadToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
    name: CanReadToken
    nameWithType: SecurityTokenHandler.CanReadToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken
  isExternal: true
  name: CanReadToken
  nameWithType: UserNameSecurityTokenHandler.CanReadToken
  fullName: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken
- uid: System.Xml.XmlReader
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: GetTokenTypeIdentifiers()
  nameWithType: SecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers()
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers
    name: GetTokenTypeIdentifiers
    nameWithType: SecurityTokenHandler.GetTokenTypeIdentifiers
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers
    name: GetTokenTypeIdentifiers
    nameWithType: SecurityTokenHandler.GetTokenTypeIdentifiers
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers
  isExternal: true
  name: GetTokenTypeIdentifiers
  nameWithType: UserNameSecurityTokenHandler.GetTokenTypeIdentifiers
  fullName: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: ReadToken(XmlReader)
  nameWithType: SecurityTokenHandler.ReadToken(XmlReader)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
    name: ReadToken
    nameWithType: SecurityTokenHandler.ReadToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
    name: ReadToken
    nameWithType: SecurityTokenHandler.ReadToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken
  isExternal: true
  name: ReadToken
  nameWithType: UserNameSecurityTokenHandler.ReadToken
  fullName: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.Xml.XmlException
  commentId: T:System.Xml.XmlException
  isExternal: true
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityToken
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,CoreWCF.IdentityModel.Tokens.SecurityToken)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,CoreWCF.IdentityModel.Tokens.SecurityToken)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: WriteToken(XmlWriter, SecurityToken)
  nameWithType: SecurityTokenHandler.WriteToken(XmlWriter, SecurityToken)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter, CoreWCF.IdentityModel.Tokens.SecurityToken)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: WriteToken
    nameWithType: SecurityTokenHandler.WriteToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: WriteToken
    nameWithType: SecurityTokenHandler.WriteToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken
  isExternal: true
  name: WriteToken
  nameWithType: UserNameSecurityTokenHandler.WriteToken
  fullName: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken
- uid: System.Xml.XmlWriter
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword
  isExternal: true
  name: RetainPassword
  nameWithType: UserNameSecurityTokenHandler.RetainPassword
  fullName: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: CanWriteToken
  nameWithType: SecurityTokenHandler.CanWriteToken
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken
- uid: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken
  isExternal: true
  name: CanWriteToken
  nameWithType: UserNameSecurityTokenHandler.CanWriteToken
  fullName: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.TokenType
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.TokenType
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: TokenType
  nameWithType: SecurityTokenHandler.TokenType
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.TokenType
- uid: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType
  isExternal: true
  name: TokenType
  nameWithType: UserNameSecurityTokenHandler.TokenType
  fullName: CoreWCF.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType
- uid: System.Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
