### YamlMime:ManagedReference
items:
- uid: CoreWCF.Channels.WebSocketMessageProperty
  commentId: T:CoreWCF.Channels.WebSocketMessageProperty
  id: WebSocketMessageProperty
  parent: CoreWCF.Channels
  children:
  - CoreWCF.Channels.WebSocketMessageProperty.#ctor
  - CoreWCF.Channels.WebSocketMessageProperty.MessageType
  - CoreWCF.Channels.WebSocketMessageProperty.Name
  - CoreWCF.Channels.WebSocketMessageProperty.OpeningHandshakeProperties
  - CoreWCF.Channels.WebSocketMessageProperty.SubProtocol
  - CoreWCF.Channels.WebSocketMessageProperty.WebSocketContext
  langs:
  - csharp
  - vb
  name: WebSocketMessageProperty
  nameWithType: WebSocketMessageProperty
  fullName: CoreWCF.Channels.WebSocketMessageProperty
  type: Class
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: Represents a web socket message property.
  remarks: To be added.
  syntax:
    content: 'public sealed class WebSocketMessageProperty : Object'
    content.vb: >-
      Public NotInheritable Class WebSocketMessageProperty
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: CoreWCF.Channels.WebSocketMessageProperty.Name
  commentId: F:CoreWCF.Channels.WebSocketMessageProperty.Name
  id: Name
  parent: CoreWCF.Channels.WebSocketMessageProperty
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: WebSocketMessageProperty.Name
  fullName: CoreWCF.Channels.WebSocketMessageProperty.Name
  type: Field
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: "Specifies the message property name."
  syntax:
    content: public const string Name = "WebSocketMessageProperty"
    return:
      type: System.String
    content.vb: Public Const Name As String = "WebSocketMessageProperty"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: CoreWCF.Channels.WebSocketMessageProperty.#ctor
  commentId: M:CoreWCF.Channels.WebSocketMessageProperty.#ctor
  id: '#ctor'
  parent: CoreWCF.Channels.WebSocketMessageProperty
  langs:
  - csharp
  - vb
  name: WebSocketMessageProperty()
  nameWithType: WebSocketMessageProperty.WebSocketMessageProperty()
  fullName: CoreWCF.Channels.WebSocketMessageProperty.WebSocketMessageProperty()
  type: Constructor
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: "\nInitializes a new instance of the <xref:CoreWCF.Channels.WebSocketMessageProperty> class.\n"
  syntax:
    content: public WebSocketMessageProperty()
    content.vb: Public Sub New
  overload: CoreWCF.Channels.WebSocketMessageProperty.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Channels.WebSocketMessageProperty.WebSocketContext
  commentId: P:CoreWCF.Channels.WebSocketMessageProperty.WebSocketContext
  id: WebSocketContext
  parent: CoreWCF.Channels.WebSocketMessageProperty
  langs:
  - csharp
  - vb
  name: WebSocketContext
  nameWithType: WebSocketMessageProperty.WebSocketContext
  fullName: CoreWCF.Channels.WebSocketMessageProperty.WebSocketContext
  type: Property
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: "\nGets or sets the web socket context..\n"
  syntax:
    content: public WebSocketContext WebSocketContext { get; }
    parameters: []
    return:
      type: System.Net.WebSockets.WebSocketContext
      description: "The web socket context."
    content.vb: Public ReadOnly Property WebSocketContext As WebSocketContext
  overload: CoreWCF.Channels.WebSocketMessageProperty.WebSocketContext*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Channels.WebSocketMessageProperty.SubProtocol
  commentId: P:CoreWCF.Channels.WebSocketMessageProperty.SubProtocol
  id: SubProtocol
  parent: CoreWCF.Channels.WebSocketMessageProperty
  langs:
  - csharp
  - vb
  name: SubProtocol
  nameWithType: WebSocketMessageProperty.SubProtocol
  fullName: CoreWCF.Channels.WebSocketMessageProperty.SubProtocol
  type: Property
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: "\nGets or sets the sub protocol message.\n"
  syntax:
    content: public string SubProtocol { get; }
    parameters: []
    return:
      type: System.String
      description: "The sub protocol message."
    content.vb: Public ReadOnly Property SubProtocol As String
  overload: CoreWCF.Channels.WebSocketMessageProperty.SubProtocol*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Channels.WebSocketMessageProperty.MessageType
  commentId: P:CoreWCF.Channels.WebSocketMessageProperty.MessageType
  id: MessageType
  parent: CoreWCF.Channels.WebSocketMessageProperty
  langs:
  - csharp
  - vb
  name: MessageType
  nameWithType: WebSocketMessageProperty.MessageType
  fullName: CoreWCF.Channels.WebSocketMessageProperty.MessageType
  type: Property
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: "\nGets the web socket message type.\n"
  syntax:
    content: public WebSocketMessageType MessageType { get; set; }
    parameters: []
    return:
      type: System.Net.WebSockets.WebSocketMessageType
      description: "The web socket message type."
    content.vb: Public Property MessageType As WebSocketMessageType
  overload: CoreWCF.Channels.WebSocketMessageProperty.MessageType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Channels.WebSocketMessageProperty.OpeningHandshakeProperties
  commentId: P:CoreWCF.Channels.WebSocketMessageProperty.OpeningHandshakeProperties
  id: OpeningHandshakeProperties
  parent: CoreWCF.Channels.WebSocketMessageProperty
  langs:
  - csharp
  - vb
  name: OpeningHandshakeProperties
  nameWithType: WebSocketMessageProperty.OpeningHandshakeProperties
  fullName: CoreWCF.Channels.WebSocketMessageProperty.OpeningHandshakeProperties
  type: Property
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: Gets a collection of opening handshake properties.
  syntax:
    content: public ReadOnlyDictionary<string, object> OpeningHandshakeProperties { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,System.Object}
      description: "A collection of opening handshake properties that contains in the [ReadOnlyDictionary\\<TKey,TValue\\>](https://learn.microsoft.com/en-us/dotnet/api/system.collections.objectmodel.readonlydictionary-2?view=netframework-4.8.1)."
    content.vb: Public ReadOnly Property OpeningHandshakeProperties As ReadOnlyDictionary(Of String, Object)
  overload: CoreWCF.Channels.WebSocketMessageProperty.OpeningHandshakeProperties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CoreWCF.Channels
  commentId: N:CoreWCF.Channels
  isExternal: true
  name: CoreWCF.Channels
  nameWithType: CoreWCF.Channels
  fullName: CoreWCF.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CoreWCF.Channels.WebSocketMessageProperty.#ctor*
  commentId: Overload:CoreWCF.Channels.WebSocketMessageProperty.#ctor
  isExternal: true
  name: WebSocketMessageProperty
  nameWithType: WebSocketMessageProperty.WebSocketMessageProperty
  fullName: CoreWCF.Channels.WebSocketMessageProperty.WebSocketMessageProperty
- uid: CoreWCF.Channels.WebSocketMessageProperty.WebSocketContext*
  commentId: Overload:CoreWCF.Channels.WebSocketMessageProperty.WebSocketContext
  isExternal: true
  name: WebSocketContext
  nameWithType: WebSocketMessageProperty.WebSocketContext
  fullName: CoreWCF.Channels.WebSocketMessageProperty.WebSocketContext
- uid: System.Net.WebSockets.WebSocketContext
  commentId: '!:System.Net.WebSockets.WebSocketContext'
  isExternal: true
  name: WebSocketContext
  nameWithType: WebSocketContext
  fullName: System.Net.WebSockets.WebSocketContext
- uid: CoreWCF.Channels.WebSocketMessageProperty.SubProtocol*
  commentId: Overload:CoreWCF.Channels.WebSocketMessageProperty.SubProtocol
  isExternal: true
  name: SubProtocol
  nameWithType: WebSocketMessageProperty.SubProtocol
  fullName: CoreWCF.Channels.WebSocketMessageProperty.SubProtocol
- uid: CoreWCF.Channels.WebSocketMessageProperty.MessageType*
  commentId: Overload:CoreWCF.Channels.WebSocketMessageProperty.MessageType
  isExternal: true
  name: MessageType
  nameWithType: WebSocketMessageProperty.MessageType
  fullName: CoreWCF.Channels.WebSocketMessageProperty.MessageType
- uid: System.Net.WebSockets.WebSocketMessageType
  commentId: '!:System.Net.WebSockets.WebSocketMessageType'
  isExternal: true
  name: WebSocketMessageType
  nameWithType: WebSocketMessageType
  fullName: System.Net.WebSockets.WebSocketMessageType
- uid: CoreWCF.Channels.WebSocketMessageProperty.OpeningHandshakeProperties*
  commentId: Overload:CoreWCF.Channels.WebSocketMessageProperty.OpeningHandshakeProperties
  isExternal: true
  name: OpeningHandshakeProperties
  nameWithType: WebSocketMessageProperty.OpeningHandshakeProperties
  fullName: CoreWCF.Channels.WebSocketMessageProperty.OpeningHandshakeProperties
- uid: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,System.Object}
  commentId: '!:System.Collections.ObjectModel.ReadOnlyDictionary{System.String,System.Object}'
  definition: System.Collections.ObjectModel.ReadOnlyDictionary`2
  name: ReadOnlyDictionary<String, Object>
  nameWithType: ReadOnlyDictionary<String, Object>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<System.String, System.Object>
  nameWithType.vb: ReadOnlyDictionary(Of String, Object)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of System.String, System.Object)
  name.vb: ReadOnlyDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    nameWithType: ReadOnlyDictionary
    fullName: System.Collections.ObjectModel.ReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    nameWithType: ReadOnlyDictionary
    fullName: System.Collections.ObjectModel.ReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: '!:System.Collections.ObjectModel.ReadOnlyDictionary`2'
  isExternal: true
  name: ReadOnlyDictionary<, >
  nameWithType: ReadOnlyDictionary<, >
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<, >
  nameWithType.vb: ReadOnlyDictionary(Of , )
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of , )
  name.vb: ReadOnlyDictionary(Of , )
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    nameWithType: ReadOnlyDictionary
    fullName: System.Collections.ObjectModel.ReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    nameWithType: ReadOnlyDictionary
    fullName: System.Collections.ObjectModel.ReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
