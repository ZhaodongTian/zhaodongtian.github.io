### YamlMime:ManagedReference
items:
- uid: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  commentId: T:CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  id: EncryptedKeyIdentifierClause
  parent: CoreWCF.IdentityModel.Tokens
  children:
  - CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)
  - CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier)
  - CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)
  - CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)
  - CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
  - CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  - CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
  - CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey
  - CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  - CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)
  - CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString
  langs:
  - csharp
  - vb
  name: EncryptedKeyIdentifierClause
  nameWithType: EncryptedKeyIdentifierClause
  fullName: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: Represents a key identifier clause that identifies an encrypted key.
  remarks: "Typically, the &lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token. Use the &lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> class to reference an encrypted key. The &lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> method returns the encrypted key.  \n\nWCF accepts wrapped keys that are well formed with respect to the wire format. The key wrap algorithm specified on the wire is accepted and used. It is not verified to be compatible with the &lt;xref:CoreWCF.Security.SecurityAlgorithmSuite> specified by the endpoint.  \n\n"
  syntax:
    content: 'public sealed class EncryptedKeyIdentifierClause : BinaryKeyIdentifierClause'
    content.vb: >-
      Public NotInheritable Class EncryptedKeyIdentifierClause
          Inherits BinaryKeyIdentifierClause
  inheritance:
  - System.Object
  - CoreWCF.IdentityModel.SecurityKeyIdentifierClause
  - CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause
  inheritedMembers:
  - CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  - CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  - CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  - CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  - CoreWCF.IdentityModel.SecurityKeyIdentifierClause.CreateKey
  - CoreWCF.IdentityModel.SecurityKeyIdentifierClause.GetDerivationNonce
  - CoreWCF.IdentityModel.SecurityKeyIdentifierClause.CanCreateKey
  - CoreWCF.IdentityModel.SecurityKeyIdentifierClause.ClauseType
  - CoreWCF.IdentityModel.SecurityKeyIdentifierClause.Id
  - CoreWCF.IdentityModel.SecurityKeyIdentifierClause.DerivationLength
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)
  commentId: M:CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)
  id: '#ctor(System.Byte[],System.String)'
  parent: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  - vb
  name: EncryptedKeyIdentifierClause(Byte[], String)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[], String)
  fullName: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(System.Byte[], System.String)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public EncryptedKeyIdentifierClause(byte[] encryptedKey, string encryptionMethod)
    parameters:
    - id: encryptedKey
      type: System.Byte[]
    - id: encryptionMethod
      type: System.String
    content.vb: Public Sub New(encryptedKey As Byte(), encryptionMethod As String)
  overload: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  nameWithType.vb: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte(), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(System.Byte(), System.String)
  name.vb: EncryptedKeyIdentifierClause(Byte(), String)
- uid: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier)
  commentId: M:CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: '#ctor(System.Byte[],System.String,CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier)'
  parent: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  - vb
  name: EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier)
  fullName: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(System.Byte[], System.String, CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public EncryptedKeyIdentifierClause(byte[] encryptedKey, string encryptionMethod, SecurityKeyIdentifier encryptingKeyIdentifier)
    parameters:
    - id: encryptedKey
      type: System.Byte[]
    - id: encryptionMethod
      type: System.String
    - id: encryptingKeyIdentifier
      type: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
    content.vb: Public Sub New(encryptedKey As Byte(), encryptionMethod As String, encryptingKeyIdentifier As SecurityKeyIdentifier)
  overload: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  nameWithType.vb: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte(), String, SecurityKeyIdentifier)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(System.Byte(), System.String, CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier)
  name.vb: EncryptedKeyIdentifierClause(Byte(), String, SecurityKeyIdentifier)
- uid: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)
  commentId: M:CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)
  id: '#ctor(System.Byte[],System.String,CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)'
  parent: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  - vb
  name: EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier, String)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier, String)
  fullName: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(System.Byte[], System.String, CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier, System.String)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public EncryptedKeyIdentifierClause(byte[] encryptedKey, string encryptionMethod, SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName)
    parameters:
    - id: encryptedKey
      type: System.Byte[]
    - id: encryptionMethod
      type: System.String
    - id: encryptingKeyIdentifier
      type: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
    - id: carriedKeyName
      type: System.String
    content.vb: Public Sub New(encryptedKey As Byte(), encryptionMethod As String, encryptingKeyIdentifier As SecurityKeyIdentifier, carriedKeyName As String)
  overload: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  nameWithType.vb: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte(), String, SecurityKeyIdentifier, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(System.Byte(), System.String, CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier, System.String)
  name.vb: EncryptedKeyIdentifierClause(Byte(), String, SecurityKeyIdentifier, String)
- uid: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)
  commentId: M:CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)
  id: '#ctor(System.Byte[],System.String,CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)'
  parent: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  - vb
  name: EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier, String, Byte[], Int32)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier, String, Byte[], Int32)
  fullName: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(System.Byte[], System.String, CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier, System.String, System.Byte[], System.Int32)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public EncryptedKeyIdentifierClause(byte[] encryptedKey, string encryptionMethod, SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName, byte[] derivationNonce, int derivationLength)
    parameters:
    - id: encryptedKey
      type: System.Byte[]
    - id: encryptionMethod
      type: System.String
    - id: encryptingKeyIdentifier
      type: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
    - id: carriedKeyName
      type: System.String
    - id: derivationNonce
      type: System.Byte[]
    - id: derivationLength
      type: System.Int32
    content.vb: Public Sub New(encryptedKey As Byte(), encryptionMethod As String, encryptingKeyIdentifier As SecurityKeyIdentifier, carriedKeyName As String, derivationNonce As Byte(), derivationLength As Integer)
  overload: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  nameWithType.vb: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte(), String, SecurityKeyIdentifier, String, Byte(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(System.Byte(), System.String, CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier, System.String, System.Byte(), System.Int32)
  name.vb: EncryptedKeyIdentifierClause(Byte(), String, SecurityKeyIdentifier, String, Byte(), Int32)
- uid: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  commentId: M:CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  id: Matches(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  parent: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  - vb
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: EncryptedKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public override bool Matches(SecurityKeyIdentifierClause keyIdentifierClause)
    parameters:
    - id: keyIdentifierClause
      type: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Matches(keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean
  overridden: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  overload: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)
  commentId: M:CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)
  id: Matches(System.Byte[],System.String,System.String)
  parent: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  - vb
  name: Matches(Byte[], String, String)
  nameWithType: EncryptedKeyIdentifierClause.Matches(Byte[], String, String)
  fullName: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[], System.String, System.String)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public bool Matches(byte[] encryptedKey, string encryptionMethod, string carriedKeyName)
    parameters:
    - id: encryptedKey
      type: System.Byte[]
    - id: encryptionMethod
      type: System.String
    - id: carriedKeyName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function Matches(encryptedKey As Byte(), encryptionMethod As String, carriedKeyName As String) As Boolean
  overload: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches*
  nameWithType.vb: EncryptedKeyIdentifierClause.Matches(Byte(), String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte(), System.String, System.String)
  name.vb: Matches(Byte(), String, String)
- uid: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey
  commentId: M:CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey
  id: GetEncryptedKey
  parent: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  - vb
  name: GetEncryptedKey()
  nameWithType: EncryptedKeyIdentifierClause.GetEncryptedKey()
  fullName: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public byte[] GetEncryptedKey()
    return:
      type: System.Byte[]
    content.vb: Public Function GetEncryptedKey As Byte()
  overload: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString
  commentId: M:CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString
  id: ToString
  parent: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: EncryptedKeyIdentifierClause.ToString()
  fullName: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
  commentId: P:CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
  id: CarriedKeyName
  parent: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  - vb
  name: CarriedKeyName
  nameWithType: EncryptedKeyIdentifierClause.CarriedKeyName
  fullName: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public string CarriedKeyName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property CarriedKeyName As String
  overload: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  commentId: P:CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  id: EncryptingKeyIdentifier
  parent: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  - vb
  name: EncryptingKeyIdentifier
  nameWithType: EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  fullName: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public SecurityKeyIdentifier EncryptingKeyIdentifier { get; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
    content.vb: Public ReadOnly Property EncryptingKeyIdentifier As SecurityKeyIdentifier
  overload: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
  commentId: P:CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
  id: EncryptionMethod
  parent: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  - vb
  name: EncryptionMethod
  nameWithType: EncryptedKeyIdentifierClause.EncryptionMethod
  fullName: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public string EncryptionMethod { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property EncryptionMethod As String
  overload: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CoreWCF.IdentityModel.Tokens
  commentId: N:CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: CoreWCF.IdentityModel.Tokens
  nameWithType: CoreWCF.IdentityModel.Tokens
  fullName: CoreWCF.IdentityModel.Tokens
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
  commentId: T:CoreWCF.IdentityModel.SecurityKeyIdentifierClause
  parent: CoreWCF.IdentityModel
  isExternal: true
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
- uid: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause
  commentId: T:CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: BinaryKeyIdentifierClause
  nameWithType: BinaryKeyIdentifierClause
  fullName: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause
- uid: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  commentId: M:CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  parent: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: true
  name: GetBuffer()
  nameWithType: BinaryKeyIdentifierClause.GetBuffer()
  fullName: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer()
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
    name: GetBuffer
    nameWithType: BinaryKeyIdentifierClause.GetBuffer
    fullName: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
    name: GetBuffer
    nameWithType: BinaryKeyIdentifierClause.GetBuffer
    fullName: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  commentId: M:CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  parent: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: true
  name: GetRawBuffer()
  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer()
  fullName: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer()
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
    name: GetRawBuffer
    nameWithType: BinaryKeyIdentifierClause.GetRawBuffer
    fullName: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
    name: GetRawBuffer
    nameWithType: BinaryKeyIdentifierClause.GetRawBuffer
    fullName: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  commentId: M:CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  parent: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: true
  name: Matches(Byte[])
  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[])
  fullName: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  nameWithType.vb: BinaryKeyIdentifierClause.Matches(Byte())
  fullName.vb: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte())
  name.vb: Matches(Byte())
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
    name: Matches
    nameWithType: BinaryKeyIdentifierClause.Matches
    fullName: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
    name: Matches
    nameWithType: BinaryKeyIdentifierClause.Matches
    fullName: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  commentId: M:CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  parent: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: true
  name: Matches(Byte[], Int32)
  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[], Int32)
  fullName: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[], System.Int32)
  nameWithType.vb: BinaryKeyIdentifierClause.Matches(Byte(), Int32)
  fullName.vb: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte(), System.Int32)
  name.vb: Matches(Byte(), Int32)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
    name: Matches
    nameWithType: BinaryKeyIdentifierClause.Matches
    fullName: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
    name: Matches
    nameWithType: BinaryKeyIdentifierClause.Matches
    fullName: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause.CreateKey
  commentId: M:CoreWCF.IdentityModel.SecurityKeyIdentifierClause.CreateKey
  parent: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
  isExternal: true
  name: CreateKey()
  nameWithType: SecurityKeyIdentifierClause.CreateKey()
  fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause.CreateKey()
  spec.csharp:
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause.CreateKey
    name: CreateKey
    nameWithType: SecurityKeyIdentifierClause.CreateKey
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause.CreateKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause.CreateKey
    name: CreateKey
    nameWithType: SecurityKeyIdentifierClause.CreateKey
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause.CreateKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause.GetDerivationNonce
  commentId: M:CoreWCF.IdentityModel.SecurityKeyIdentifierClause.GetDerivationNonce
  parent: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
  isExternal: true
  name: GetDerivationNonce()
  nameWithType: SecurityKeyIdentifierClause.GetDerivationNonce()
  fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause.GetDerivationNonce()
  spec.csharp:
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause.GetDerivationNonce
    name: GetDerivationNonce
    nameWithType: SecurityKeyIdentifierClause.GetDerivationNonce
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause.GetDerivationNonce
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause.GetDerivationNonce
    name: GetDerivationNonce
    nameWithType: SecurityKeyIdentifierClause.GetDerivationNonce
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause.GetDerivationNonce
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause.CanCreateKey
  commentId: P:CoreWCF.IdentityModel.SecurityKeyIdentifierClause.CanCreateKey
  parent: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
  isExternal: true
  name: CanCreateKey
  nameWithType: SecurityKeyIdentifierClause.CanCreateKey
  fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause.CanCreateKey
- uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause.ClauseType
  commentId: P:CoreWCF.IdentityModel.SecurityKeyIdentifierClause.ClauseType
  parent: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
  isExternal: true
  name: ClauseType
  nameWithType: SecurityKeyIdentifierClause.ClauseType
  fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause.ClauseType
- uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause.Id
  commentId: P:CoreWCF.IdentityModel.SecurityKeyIdentifierClause.Id
  parent: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
  isExternal: true
  name: Id
  nameWithType: SecurityKeyIdentifierClause.Id
  fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause.Id
- uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause.DerivationLength
  commentId: P:CoreWCF.IdentityModel.SecurityKeyIdentifierClause.DerivationLength
  parent: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
  isExternal: true
  name: DerivationLength
  nameWithType: SecurityKeyIdentifierClause.DerivationLength
  fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause.DerivationLength
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.IdentityModel
  commentId: N:CoreWCF.IdentityModel
  isExternal: true
  name: CoreWCF.IdentityModel
  nameWithType: CoreWCF.IdentityModel
  fullName: CoreWCF.IdentityModel
- uid: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor
  isExternal: true
  name: EncryptedKeyIdentifierClause
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause
  fullName: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: CoreWCF.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  commentId: M:CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  parent: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: true
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
    name: Matches
    nameWithType: BinaryKeyIdentifierClause.Matches
    fullName: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
    name: Matches
    nameWithType: BinaryKeyIdentifierClause.Matches
    fullName: CoreWCF.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches
  isExternal: true
  name: Matches
  nameWithType: EncryptedKeyIdentifierClause.Matches
  fullName: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey
  isExternal: true
  name: GetEncryptedKey
  nameWithType: EncryptedKeyIdentifierClause.GetEncryptedKey
  fullName: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey
- uid: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString
  isExternal: true
  name: ToString
  nameWithType: EncryptedKeyIdentifierClause.ToString
  fullName: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString
- uid: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
  isExternal: true
  name: CarriedKeyName
  nameWithType: EncryptedKeyIdentifierClause.CarriedKeyName
  fullName: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
- uid: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  isExternal: true
  name: EncryptingKeyIdentifier
  nameWithType: EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  fullName: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
- uid: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
  isExternal: true
  name: EncryptionMethod
  nameWithType: EncryptedKeyIdentifierClause.EncryptionMethod
  fullName: CoreWCF.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
