### YamlMime:ManagedReference
items:
- uid: CoreWCF.IdentityModel.Claims.AuthenticationInformation
  commentId: T:CoreWCF.IdentityModel.Claims.AuthenticationInformation
  id: AuthenticationInformation
  parent: CoreWCF.IdentityModel.Claims
  children:
  - CoreWCF.IdentityModel.Claims.AuthenticationInformation.#ctor
  - CoreWCF.IdentityModel.Claims.AuthenticationInformation.Address
  - CoreWCF.IdentityModel.Claims.AuthenticationInformation.AuthorizationContexts
  - CoreWCF.IdentityModel.Claims.AuthenticationInformation.DnsName
  - CoreWCF.IdentityModel.Claims.AuthenticationInformation.NotOnOrAfter
  - CoreWCF.IdentityModel.Claims.AuthenticationInformation.Session
  langs:
  - csharp
  - vb
  name: AuthenticationInformation
  nameWithType: AuthenticationInformation
  fullName: CoreWCF.IdentityModel.Claims.AuthenticationInformation
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Claims
  summary: "\nThe authentication information that an authority asserted when creating a token for a subject.\n"
  syntax:
    content: 'public class AuthenticationInformation : Object'
    content.vb: >-
      Public Class AuthenticationInformation
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.IdentityModel.Claims.AuthenticationInformation.#ctor
  commentId: M:CoreWCF.IdentityModel.Claims.AuthenticationInformation.#ctor
  id: '#ctor'
  parent: CoreWCF.IdentityModel.Claims.AuthenticationInformation
  langs:
  - csharp
  - vb
  name: AuthenticationInformation()
  nameWithType: AuthenticationInformation.AuthenticationInformation()
  fullName: CoreWCF.IdentityModel.Claims.AuthenticationInformation.AuthenticationInformation()
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Claims
  summary: "\nInitializes a new instance of the <xref href=\"CoreWCF.IdentityModel.Claims.AuthenticationInformation\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public AuthenticationInformation()
    content.vb: Public Sub New
  overload: CoreWCF.IdentityModel.Claims.AuthenticationInformation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Claims.AuthenticationInformation.Address
  commentId: P:CoreWCF.IdentityModel.Claims.AuthenticationInformation.Address
  id: Address
  parent: CoreWCF.IdentityModel.Claims.AuthenticationInformation
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: AuthenticationInformation.Address
  fullName: CoreWCF.IdentityModel.Claims.AuthenticationInformation.Address
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Claims
  summary: "\nGets or sets the address of the authority that created the token.\n"
  syntax:
    content: public string Address { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Address As String
  overload: CoreWCF.IdentityModel.Claims.AuthenticationInformation.Address*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Claims.AuthenticationInformation.AuthorizationContexts
  commentId: P:CoreWCF.IdentityModel.Claims.AuthenticationInformation.AuthorizationContexts
  id: AuthorizationContexts
  parent: CoreWCF.IdentityModel.Claims.AuthenticationInformation
  langs:
  - csharp
  - vb
  name: AuthorizationContexts
  nameWithType: AuthenticationInformation.AuthorizationContexts
  fullName: CoreWCF.IdentityModel.Claims.AuthenticationInformation.AuthorizationContexts
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Claims
  summary: "\nGets the <see cref=\"!:AuthorizationContext\"></see> used by the authenticating authority when issuing tokens.\n"
  syntax:
    content: public Collection<AuthenticationContext> AuthorizationContexts { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{CoreWCF.IdentityModel.Tokens.AuthenticationContext}
    content.vb: Public ReadOnly Property AuthorizationContexts As Collection(Of AuthenticationContext)
  overload: CoreWCF.IdentityModel.Claims.AuthenticationInformation.AuthorizationContexts*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.IdentityModel.Claims.AuthenticationInformation.DnsName
  commentId: P:CoreWCF.IdentityModel.Claims.AuthenticationInformation.DnsName
  id: DnsName
  parent: CoreWCF.IdentityModel.Claims.AuthenticationInformation
  langs:
  - csharp
  - vb
  name: DnsName
  nameWithType: AuthenticationInformation.DnsName
  fullName: CoreWCF.IdentityModel.Claims.AuthenticationInformation.DnsName
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Claims
  summary: "\nGets or sets the DNS name of the authority that created the token.\n"
  syntax:
    content: public string DnsName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DnsName As String
  overload: CoreWCF.IdentityModel.Claims.AuthenticationInformation.DnsName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Claims.AuthenticationInformation.NotOnOrAfter
  commentId: P:CoreWCF.IdentityModel.Claims.AuthenticationInformation.NotOnOrAfter
  id: NotOnOrAfter
  parent: CoreWCF.IdentityModel.Claims.AuthenticationInformation
  langs:
  - csharp
  - vb
  name: NotOnOrAfter
  nameWithType: AuthenticationInformation.NotOnOrAfter
  fullName: CoreWCF.IdentityModel.Claims.AuthenticationInformation.NotOnOrAfter
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Claims
  summary: "\nGets or sets the time that the session referred to in the session index MUST be considered ended.\n"
  syntax:
    content: public Nullable<DateTime> NotOnOrAfter { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property NotOnOrAfter As Nullable(Of DateTime)
  overload: CoreWCF.IdentityModel.Claims.AuthenticationInformation.NotOnOrAfter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Claims.AuthenticationInformation.Session
  commentId: P:CoreWCF.IdentityModel.Claims.AuthenticationInformation.Session
  id: Session
  parent: CoreWCF.IdentityModel.Claims.AuthenticationInformation
  langs:
  - csharp
  - vb
  name: Session
  nameWithType: AuthenticationInformation.Session
  fullName: CoreWCF.IdentityModel.Claims.AuthenticationInformation.Session
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Claims
  summary: "\nGets or sets the session index that describes the session between the authority and the client.\n"
  syntax:
    content: public string Session { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Session As String
  overload: CoreWCF.IdentityModel.Claims.AuthenticationInformation.Session*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: CoreWCF.IdentityModel.Claims
  commentId: N:CoreWCF.IdentityModel.Claims
  isExternal: true
  name: CoreWCF.IdentityModel.Claims
  nameWithType: CoreWCF.IdentityModel.Claims
  fullName: CoreWCF.IdentityModel.Claims
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.IdentityModel.Claims.AuthenticationInformation.#ctor*
  commentId: Overload:CoreWCF.IdentityModel.Claims.AuthenticationInformation.#ctor
  isExternal: true
  name: AuthenticationInformation
  nameWithType: AuthenticationInformation.AuthenticationInformation
  fullName: CoreWCF.IdentityModel.Claims.AuthenticationInformation.AuthenticationInformation
- uid: CoreWCF.IdentityModel.Claims.AuthenticationInformation.Address*
  commentId: Overload:CoreWCF.IdentityModel.Claims.AuthenticationInformation.Address
  isExternal: true
  name: Address
  nameWithType: AuthenticationInformation.Address
  fullName: CoreWCF.IdentityModel.Claims.AuthenticationInformation.Address
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CoreWCF.IdentityModel.Claims.AuthenticationInformation.AuthorizationContexts*
  commentId: Overload:CoreWCF.IdentityModel.Claims.AuthenticationInformation.AuthorizationContexts
  isExternal: true
  name: AuthorizationContexts
  nameWithType: AuthenticationInformation.AuthorizationContexts
  fullName: CoreWCF.IdentityModel.Claims.AuthenticationInformation.AuthorizationContexts
- uid: System.Collections.ObjectModel.Collection{CoreWCF.IdentityModel.Tokens.AuthenticationContext}
  commentId: '!:System.Collections.ObjectModel.Collection{CoreWCF.IdentityModel.Tokens.AuthenticationContext}'
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<AuthenticationContext>
  nameWithType: Collection<AuthenticationContext>
  fullName: System.Collections.ObjectModel.Collection<CoreWCF.IdentityModel.Tokens.AuthenticationContext>
  nameWithType.vb: Collection(Of AuthenticationContext)
  fullName.vb: System.Collections.ObjectModel.Collection(Of CoreWCF.IdentityModel.Tokens.AuthenticationContext)
  name.vb: Collection(Of AuthenticationContext)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.IdentityModel.Tokens.AuthenticationContext
    name: AuthenticationContext
    nameWithType: AuthenticationContext
    fullName: CoreWCF.IdentityModel.Tokens.AuthenticationContext
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.IdentityModel.Tokens.AuthenticationContext
    name: AuthenticationContext
    nameWithType: AuthenticationContext
    fullName: CoreWCF.IdentityModel.Tokens.AuthenticationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<>
  nameWithType: Collection<>
  fullName: System.Collections.ObjectModel.Collection<>
  nameWithType.vb: Collection(Of )
  fullName.vb: System.Collections.ObjectModel.Collection(Of )
  name.vb: Collection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Claims.AuthenticationInformation.DnsName*
  commentId: Overload:CoreWCF.IdentityModel.Claims.AuthenticationInformation.DnsName
  isExternal: true
  name: DnsName
  nameWithType: AuthenticationInformation.DnsName
  fullName: CoreWCF.IdentityModel.Claims.AuthenticationInformation.DnsName
- uid: CoreWCF.IdentityModel.Claims.AuthenticationInformation.NotOnOrAfter*
  commentId: Overload:CoreWCF.IdentityModel.Claims.AuthenticationInformation.NotOnOrAfter
  isExternal: true
  name: NotOnOrAfter
  nameWithType: AuthenticationInformation.NotOnOrAfter
  fullName: CoreWCF.IdentityModel.Claims.AuthenticationInformation.NotOnOrAfter
- uid: System.Nullable{System.DateTime}
  commentId: '!:System.Nullable{System.DateTime}'
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Claims.AuthenticationInformation.Session*
  commentId: Overload:CoreWCF.IdentityModel.Claims.AuthenticationInformation.Session
  isExternal: true
  name: Session
  nameWithType: AuthenticationInformation.Session
  fullName: CoreWCF.IdentityModel.Claims.AuthenticationInformation.Session
