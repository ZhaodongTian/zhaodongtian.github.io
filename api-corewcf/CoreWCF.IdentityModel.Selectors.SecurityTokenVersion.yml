### YamlMime:ManagedReference
items:
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenVersion
  commentId: T:CoreWCF.IdentityModel.Selectors.SecurityTokenVersion
  id: SecurityTokenVersion
  parent: CoreWCF.IdentityModel.Selectors
  children:
  - CoreWCF.IdentityModel.Selectors.SecurityTokenVersion.#ctor
  - CoreWCF.IdentityModel.Selectors.SecurityTokenVersion.GetSecuritySpecifications
  langs:
  - csharp
  - vb
  name: SecurityTokenVersion
  nameWithType: SecurityTokenVersion
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenVersion
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  summary: Represents the specifications, such as the WS-*specifications, that security tokens are defined in.
  remarks: "Use the &lt;xref:System.IdentityModel.Selectors.SecurityTokenVersion> class to determine which version of the WS-* specifications that security tokens confirm to in a SOAP message.  \n\nUse the &lt;xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer%28System.IdentityModel.Selectors.SecurityTokenVersion%29> method to create a &lt;xref:System.IdentityModel.Selectors.SecurityTokenSerializer> that is capable of serializing and deserializing security tokens according to the set of specifications that are associated with a class deriving from the &lt;xref:System.IdentityModel.Selectors.SecurityTokenVersion> class.  \n\n"
  syntax:
    content: 'public abstract class SecurityTokenVersion : Object'
    content.vb: >-
      Public MustInherit Class SecurityTokenVersion
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenVersion.GetSecuritySpecifications
  commentId: M:CoreWCF.IdentityModel.Selectors.SecurityTokenVersion.GetSecuritySpecifications
  id: GetSecuritySpecifications
  parent: CoreWCF.IdentityModel.Selectors.SecurityTokenVersion
  langs:
  - csharp
  - vb
  name: GetSecuritySpecifications()
  nameWithType: SecurityTokenVersion.GetSecuritySpecifications()
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenVersion.GetSecuritySpecifications()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: public abstract ReadOnlyCollection<string> GetSecuritySpecifications()
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
    content.vb: Public MustOverride Function GetSecuritySpecifications As ReadOnlyCollection(Of String)
  overload: CoreWCF.IdentityModel.Selectors.SecurityTokenVersion.GetSecuritySpecifications*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenVersion.#ctor
  commentId: M:CoreWCF.IdentityModel.Selectors.SecurityTokenVersion.#ctor
  id: '#ctor'
  parent: CoreWCF.IdentityModel.Selectors.SecurityTokenVersion
  langs:
  - csharp
  - vb
  name: SecurityTokenVersion()
  nameWithType: SecurityTokenVersion.SecurityTokenVersion()
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenVersion.SecurityTokenVersion()
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Selectors
  syntax:
    content: protected SecurityTokenVersion()
    content.vb: Protected Sub New
  overload: CoreWCF.IdentityModel.Selectors.SecurityTokenVersion.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: CoreWCF.IdentityModel.Selectors
  commentId: N:CoreWCF.IdentityModel.Selectors
  isExternal: true
  name: CoreWCF.IdentityModel.Selectors
  nameWithType: CoreWCF.IdentityModel.Selectors
  fullName: CoreWCF.IdentityModel.Selectors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenVersion.GetSecuritySpecifications*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SecurityTokenVersion.GetSecuritySpecifications
  isExternal: true
  name: GetSecuritySpecifications
  nameWithType: SecurityTokenVersion.GetSecuritySpecifications
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenVersion.GetSecuritySpecifications
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  commentId: '!:System.Collections.ObjectModel.ReadOnlyCollection{System.String}'
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  nameWithType.vb: ReadOnlyCollection(Of String)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.String)
  name.vb: ReadOnlyCollection(Of String)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<>
  nameWithType: ReadOnlyCollection<>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<>
  nameWithType.vb: ReadOnlyCollection(Of )
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of )
  name.vb: ReadOnlyCollection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenVersion.#ctor*
  commentId: Overload:CoreWCF.IdentityModel.Selectors.SecurityTokenVersion.#ctor
  isExternal: true
  name: SecurityTokenVersion
  nameWithType: SecurityTokenVersion.SecurityTokenVersion
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenVersion.SecurityTokenVersion
