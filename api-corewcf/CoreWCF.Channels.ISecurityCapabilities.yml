### YamlMime:ManagedReference
items:
- uid: CoreWCF.Channels.ISecurityCapabilities
  commentId: T:CoreWCF.Channels.ISecurityCapabilities
  id: ISecurityCapabilities
  parent: CoreWCF.Channels
  children:
  - CoreWCF.Channels.ISecurityCapabilities.SupportedRequestProtectionLevel
  - CoreWCF.Channels.ISecurityCapabilities.SupportedResponseProtectionLevel
  - CoreWCF.Channels.ISecurityCapabilities.SupportsClientAuthentication
  - CoreWCF.Channels.ISecurityCapabilities.SupportsClientWindowsIdentity
  - CoreWCF.Channels.ISecurityCapabilities.SupportsServerAuthentication
  langs:
  - csharp
  - vb
  name: ISecurityCapabilities
  nameWithType: ISecurityCapabilities
  fullName: CoreWCF.Channels.ISecurityCapabilities
  type: Interface
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  summary: Defines the contract for specifying the security capabilities for bindings.
  remarks: "\n"
  syntax:
    content: public interface ISecurityCapabilities
    content.vb: Public Interface ISecurityCapabilities
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: CoreWCF.Channels.ISecurityCapabilities.SupportedRequestProtectionLevel
  commentId: P:CoreWCF.Channels.ISecurityCapabilities.SupportedRequestProtectionLevel
  id: SupportedRequestProtectionLevel
  parent: CoreWCF.Channels.ISecurityCapabilities
  langs:
  - csharp
  - vb
  name: SupportedRequestProtectionLevel
  nameWithType: ISecurityCapabilities.SupportedRequestProtectionLevel
  fullName: CoreWCF.Channels.ISecurityCapabilities.SupportedRequestProtectionLevel
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  summary: "Gets the protection level requests supported by the binding."
  syntax:
    content: ProtectionLevel SupportedRequestProtectionLevel { get; }
    parameters: []
    return:
      type: System.Net.Security.ProtectionLevel
      description: "The [ProtectionLevel](https://learn.microsoft.com/en-us/dotnet/api/system.net.security.protectionlevel?view=net-7.0&viewFallbackFrom=dotnet-plat-ext-7.0) that specifies the protection level requests supported by the binding."
    content.vb: ReadOnly Property SupportedRequestProtectionLevel As ProtectionLevel
  overload: CoreWCF.Channels.ISecurityCapabilities.SupportedRequestProtectionLevel*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: CoreWCF.Channels.ISecurityCapabilities.SupportedResponseProtectionLevel
  commentId: P:CoreWCF.Channels.ISecurityCapabilities.SupportedResponseProtectionLevel
  id: SupportedResponseProtectionLevel
  parent: CoreWCF.Channels.ISecurityCapabilities
  langs:
  - csharp
  - vb
  name: SupportedResponseProtectionLevel
  nameWithType: ISecurityCapabilities.SupportedResponseProtectionLevel
  fullName: CoreWCF.Channels.ISecurityCapabilities.SupportedResponseProtectionLevel
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  summary: Gets the protection level responses supported by the binding.
  syntax:
    content: ProtectionLevel SupportedResponseProtectionLevel { get; }
    parameters: []
    return:
      type: System.Net.Security.ProtectionLevel
      description: "The [ProtectionLevel](https://learn.microsoft.com/en-us/dotnet/api/system.net.security.protectionlevel?view=net-7.0&viewFallbackFrom=dotnet-plat-ext-7.0) that specifies the protection level responses supported by the binding."
    content.vb: ReadOnly Property SupportedResponseProtectionLevel As ProtectionLevel
  overload: CoreWCF.Channels.ISecurityCapabilities.SupportedResponseProtectionLevel*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: CoreWCF.Channels.ISecurityCapabilities.SupportsClientAuthentication
  commentId: P:CoreWCF.Channels.ISecurityCapabilities.SupportsClientAuthentication
  id: SupportsClientAuthentication
  parent: CoreWCF.Channels.ISecurityCapabilities
  langs:
  - csharp
  - vb
  name: SupportsClientAuthentication
  nameWithType: ISecurityCapabilities.SupportsClientAuthentication
  fullName: CoreWCF.Channels.ISecurityCapabilities.SupportsClientAuthentication
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  summary: Gets a value that indicates whether the binding supports client authentication.
  syntax:
    content: bool SupportsClientAuthentication { get; }
    parameters: []
    return:
      type: System.Boolean
      description: true if the binding can support client authentication; otherwise, false.
    content.vb: ReadOnly Property SupportsClientAuthentication As Boolean
  overload: CoreWCF.Channels.ISecurityCapabilities.SupportsClientAuthentication*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: CoreWCF.Channels.ISecurityCapabilities.SupportsClientWindowsIdentity
  commentId: P:CoreWCF.Channels.ISecurityCapabilities.SupportsClientWindowsIdentity
  id: SupportsClientWindowsIdentity
  parent: CoreWCF.Channels.ISecurityCapabilities
  langs:
  - csharp
  - vb
  name: SupportsClientWindowsIdentity
  nameWithType: ISecurityCapabilities.SupportsClientWindowsIdentity
  fullName: CoreWCF.Channels.ISecurityCapabilities.SupportsClientWindowsIdentity
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  summary: Gets a value that indicates whether the binding supports client Windows identity.
  syntax:
    content: bool SupportsClientWindowsIdentity { get; }
    parameters: []
    return:
      type: System.Boolean
      description: true if the binding can support client Windows identity; otherwise, false.
    content.vb: ReadOnly Property SupportsClientWindowsIdentity As Boolean
  overload: CoreWCF.Channels.ISecurityCapabilities.SupportsClientWindowsIdentity*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: CoreWCF.Channels.ISecurityCapabilities.SupportsServerAuthentication
  commentId: P:CoreWCF.Channels.ISecurityCapabilities.SupportsServerAuthentication
  id: SupportsServerAuthentication
  parent: CoreWCF.Channels.ISecurityCapabilities
  langs:
  - csharp
  - vb
  name: SupportsServerAuthentication
  nameWithType: ISecurityCapabilities.SupportsServerAuthentication
  fullName: CoreWCF.Channels.ISecurityCapabilities.SupportsServerAuthentication
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  summary: Gets a value that indicates whether the binding supports server authentication.
  syntax:
    content: bool SupportsServerAuthentication { get; }
    parameters: []
    return:
      type: System.Boolean
      description: true if the binding can support server authentication; otherwise, false.
    content.vb: ReadOnly Property SupportsServerAuthentication As Boolean
  overload: CoreWCF.Channels.ISecurityCapabilities.SupportsServerAuthentication*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: CoreWCF.Channels
  commentId: N:CoreWCF.Channels
  isExternal: true
  name: CoreWCF.Channels
  nameWithType: CoreWCF.Channels
  fullName: CoreWCF.Channels
- uid: CoreWCF.Channels.ISecurityCapabilities.SupportedRequestProtectionLevel*
  commentId: Overload:CoreWCF.Channels.ISecurityCapabilities.SupportedRequestProtectionLevel
  isExternal: true
  name: SupportedRequestProtectionLevel
  nameWithType: ISecurityCapabilities.SupportedRequestProtectionLevel
  fullName: CoreWCF.Channels.ISecurityCapabilities.SupportedRequestProtectionLevel
- uid: System.Net.Security.ProtectionLevel
  isExternal: true
  name: ProtectionLevel
  nameWithType: ProtectionLevel
  fullName: System.Net.Security.ProtectionLevel
- uid: CoreWCF.Channels.ISecurityCapabilities.SupportedResponseProtectionLevel*
  commentId: Overload:CoreWCF.Channels.ISecurityCapabilities.SupportedResponseProtectionLevel
  isExternal: true
  name: SupportedResponseProtectionLevel
  nameWithType: ISecurityCapabilities.SupportedResponseProtectionLevel
  fullName: CoreWCF.Channels.ISecurityCapabilities.SupportedResponseProtectionLevel
- uid: CoreWCF.Channels.ISecurityCapabilities.SupportsClientAuthentication*
  commentId: Overload:CoreWCF.Channels.ISecurityCapabilities.SupportsClientAuthentication
  isExternal: true
  name: SupportsClientAuthentication
  nameWithType: ISecurityCapabilities.SupportsClientAuthentication
  fullName: CoreWCF.Channels.ISecurityCapabilities.SupportsClientAuthentication
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Channels.ISecurityCapabilities.SupportsClientWindowsIdentity*
  commentId: Overload:CoreWCF.Channels.ISecurityCapabilities.SupportsClientWindowsIdentity
  isExternal: true
  name: SupportsClientWindowsIdentity
  nameWithType: ISecurityCapabilities.SupportsClientWindowsIdentity
  fullName: CoreWCF.Channels.ISecurityCapabilities.SupportsClientWindowsIdentity
- uid: CoreWCF.Channels.ISecurityCapabilities.SupportsServerAuthentication*
  commentId: Overload:CoreWCF.Channels.ISecurityCapabilities.SupportsServerAuthentication
  isExternal: true
  name: SupportsServerAuthentication
  nameWithType: ISecurityCapabilities.SupportsServerAuthentication
  fullName: CoreWCF.Channels.ISecurityCapabilities.SupportsServerAuthentication
