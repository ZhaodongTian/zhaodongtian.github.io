### YamlMime:ManagedReference
items:
- uid: CoreWCF.CommunicationException
  commentId: T:CoreWCF.CommunicationException
  id: CommunicationException
  parent: CoreWCF
  children:
  - CoreWCF.CommunicationException.#ctor
  - CoreWCF.CommunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - CoreWCF.CommunicationException.#ctor(System.String)
  - CoreWCF.CommunicationException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  - vb
  name: CommunicationException
  nameWithType: CommunicationException
  fullName: CoreWCF.CommunicationException
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF
  summary: Represents a communication error in either the service or client application.
  remarks: "Robust client and service Windows Communication Foundation (WCF) applications handle <xref:CoreWCF.CommunicationException> objects that may be thrown during communication. There are also two <xref:CoreWCF.CommunicationException>-derived exception types ([FaultException<TDetail>](xref:CoreWCF.FaultException`1) and <xref:CoreWCF.FaultException>) that clients also often expect. Therefore, in order to prevent the generic <xref:CoreWCF.CommunicationException> handler from catching these more specific exception types, catch these exceptions prior to handling <xref:CoreWCF.CommunicationException>.  \n\n-   [FaultException<TDetail>](xref:CoreWCF.FaultException`1)> objects are thrown on the client when a SOAP fault that is specified in the operation contract is received in response to a two-way operation (that is, a method with an <xref:CoreWCF.OperationContractAttribute> attribute with <xref:CoreWCF.OperationContractAttribute.IsOneWay> set to `false`).  \n\n<xref:CoreWCF.FaultException> objects are thrown when a listener receives a SOAP fault that is not expected or specified in the operation contract. This usually occurs when the application is being debugged and the service has the <xref:CoreWCF.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults> property set to `true`.  \n\n> [!NOTE]\n>  When implementing custom channels and binding elements, it is strongly recommended that your components throw only <xref:System.TimeoutException> or <xref:CoreWCF.CommunicationException>-derived objects. In the case where your components throw a recoverable exception that is specific to the component, wrap that exception inside a <xref:CoreWCF.CommunicationException> object.  \n\nFor more details about designing and using the WCF fault system, see [Specifying and Handling Faults in Contracts and Services](https://learn.microsoft.com/en-us/dotnet/framework/wcf/specifying-and-handling-faults-in-contracts-and-services).  \n\n> [!IMPORTANT]\n>  The WCF Runtime will not throw a <xref:CoreWCF.CommunicationException> that is unsafe to handle at the point where it leaves the WCF Runtime and enters user code.  \n\n\n\n"
  syntax:
    content: 'public class CommunicationException : Exception'
    content.vb: >-
      Public Class CommunicationException
          Inherits Exception
  inheritance:
  - System.Object
  derivedClasses:
  - CoreWCF.ActionNotSupportedException
  - CoreWCF.AddressAlreadyInUseException
  - CoreWCF.CommunicationObjectAbortedException
  - CoreWCF.CommunicationObjectFaultedException
  - CoreWCF.EndpointNotFoundException
  - CoreWCF.FaultException
  - CoreWCF.ProtocolException
  - CoreWCF.Security.MessageSecurityException
  - CoreWCF.Security.SecurityNegotiationException
  - CoreWCF.ServerTooBusyException
  - CoreWCF.ServiceActivationException
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.CommunicationException.#ctor
  commentId: M:CoreWCF.CommunicationException.#ctor
  id: '#ctor'
  parent: CoreWCF.CommunicationException
  langs:
  - csharp
  - vb
  name: CommunicationException()
  summary: Initializes a new instance of the [CommunicationException](xref:CoreWCF.CommunicationException) class.
  nameWithType: CommunicationException.CommunicationException()
  fullName: CoreWCF.CommunicationException.CommunicationException()
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF
  syntax:
    content: public CommunicationException()
    content.vb: Public Sub New
  overload: CoreWCF.CommunicationException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.CommunicationException.#ctor(System.String)
  commentId: M:CoreWCF.CommunicationException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: CoreWCF.CommunicationException
  langs:
  - csharp
  - vb
  name: CommunicationException(String)
  summary: Initializes a new instance of the [CommunicationException](xref:CoreWCF.CommunicationException) class, using the specified message.
  nameWithType: CommunicationException.CommunicationException(String)
  fullName: CoreWCF.CommunicationException.CommunicationException(System.String)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF
  syntax:
    content: public CommunicationException(string message)
    parameters:
    - id: message
      type: System.String
      description: The description of the error condition.
    content.vb: Public Sub New(message As String)
  overload: CoreWCF.CommunicationException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.CommunicationException.#ctor(System.String,System.Exception)
  commentId: M:CoreWCF.CommunicationException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: CoreWCF.CommunicationException
  langs:
  - csharp
  - vb
  name: CommunicationException(String, Exception)
  summary: Initializes a new instance of the [CommunicationException](xref:CoreWCF.CommunicationException) class, using the specified message and the inner exception.
  nameWithType: CommunicationException.CommunicationException(String, Exception)
  fullName: CoreWCF.CommunicationException.CommunicationException(System.String, System.Exception)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF
  syntax:
    content: public CommunicationException(string message, Exception innerException)
    parameters:
    - id: message
      type: System.String
      description: The description of the error condition.
    - id: innerException
      type: System.Exception
      description: The inner exception to be used. 
    content.vb: Public Sub New(message As String, innerException As Exception)
  overload: CoreWCF.CommunicationException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.CommunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:CoreWCF.CommunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: CoreWCF.CommunicationException
  langs:
  - csharp
  - vb
  name: CommunicationException(SerializationInfo, StreamingContext)
  summary: Initializes a new instance of the [CommunicationException](xref:CoreWCF.CommunicationException) class, using the specified serialization information and context objects.
  nameWithType: CommunicationException.CommunicationException(SerializationInfo, StreamingContext)
  fullName: CoreWCF.CommunicationException.CommunicationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF
  syntax:
    content: protected CommunicationException(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: Information relevant to the deserialization process.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The context of the deserialization process.
    content.vb: Protected Sub New(info As SerializationInfo, context As StreamingContext)
  overload: CoreWCF.CommunicationException.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: CoreWCF
  commentId: N:CoreWCF
  isExternal: true
  name: CoreWCF
  nameWithType: CoreWCF
  fullName: CoreWCF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.CommunicationException.#ctor*
  commentId: Overload:CoreWCF.CommunicationException.#ctor
  isExternal: true
  name: CommunicationException
  nameWithType: CommunicationException.CommunicationException
  fullName: CoreWCF.CommunicationException.CommunicationException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Runtime.Serialization.SerializationInfo
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
