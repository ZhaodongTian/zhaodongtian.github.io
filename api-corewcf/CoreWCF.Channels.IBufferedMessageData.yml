### YamlMime:ManagedReference
items:
- uid: CoreWCF.Channels.IBufferedMessageData
  commentId: T:CoreWCF.Channels.IBufferedMessageData
  id: IBufferedMessageData
  parent: CoreWCF.Channels
  children:
  - CoreWCF.Channels.IBufferedMessageData.Buffer
  - CoreWCF.Channels.IBufferedMessageData.Close
  - CoreWCF.Channels.IBufferedMessageData.EnableMultipleUsers
  - CoreWCF.Channels.IBufferedMessageData.GetMessageReader
  - CoreWCF.Channels.IBufferedMessageData.MessageEncoder
  - CoreWCF.Channels.IBufferedMessageData.Open
  - CoreWCF.Channels.IBufferedMessageData.Quotas
  - CoreWCF.Channels.IBufferedMessageData.ReturnMessageState(CoreWCF.Channels.RecycledMessageState)
  - CoreWCF.Channels.IBufferedMessageData.TakeMessageState
  langs:
  - csharp
  - vb
  name: IBufferedMessageData
  nameWithType: IBufferedMessageData
  fullName: CoreWCF.Channels.IBufferedMessageData
  type: Interface
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: public interface IBufferedMessageData
    content.vb: Public Interface IBufferedMessageData
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: CoreWCF.Channels.IBufferedMessageData.Close
  commentId: M:CoreWCF.Channels.IBufferedMessageData.Close
  id: Close
  parent: CoreWCF.Channels.IBufferedMessageData
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: IBufferedMessageData.Close()
  fullName: CoreWCF.Channels.IBufferedMessageData.Close()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: void Close()
    content.vb: Sub Close
  overload: CoreWCF.Channels.IBufferedMessageData.Close*
- uid: CoreWCF.Channels.IBufferedMessageData.EnableMultipleUsers
  commentId: M:CoreWCF.Channels.IBufferedMessageData.EnableMultipleUsers
  id: EnableMultipleUsers
  parent: CoreWCF.Channels.IBufferedMessageData
  langs:
  - csharp
  - vb
  name: EnableMultipleUsers()
  nameWithType: IBufferedMessageData.EnableMultipleUsers()
  fullName: CoreWCF.Channels.IBufferedMessageData.EnableMultipleUsers()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: void EnableMultipleUsers()
    content.vb: Sub EnableMultipleUsers
  overload: CoreWCF.Channels.IBufferedMessageData.EnableMultipleUsers*
- uid: CoreWCF.Channels.IBufferedMessageData.GetMessageReader
  commentId: M:CoreWCF.Channels.IBufferedMessageData.GetMessageReader
  id: GetMessageReader
  parent: CoreWCF.Channels.IBufferedMessageData
  langs:
  - csharp
  - vb
  name: GetMessageReader()
  nameWithType: IBufferedMessageData.GetMessageReader()
  fullName: CoreWCF.Channels.IBufferedMessageData.GetMessageReader()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: XmlDictionaryReader GetMessageReader()
    return:
      type: System.Xml.XmlDictionaryReader
    content.vb: Function GetMessageReader As XmlDictionaryReader
  overload: CoreWCF.Channels.IBufferedMessageData.GetMessageReader*
- uid: CoreWCF.Channels.IBufferedMessageData.Open
  commentId: M:CoreWCF.Channels.IBufferedMessageData.Open
  id: Open
  parent: CoreWCF.Channels.IBufferedMessageData
  langs:
  - csharp
  - vb
  name: Open()
  nameWithType: IBufferedMessageData.Open()
  fullName: CoreWCF.Channels.IBufferedMessageData.Open()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: void Open()
    content.vb: Sub Open
  overload: CoreWCF.Channels.IBufferedMessageData.Open*
- uid: CoreWCF.Channels.IBufferedMessageData.ReturnMessageState(CoreWCF.Channels.RecycledMessageState)
  commentId: M:CoreWCF.Channels.IBufferedMessageData.ReturnMessageState(CoreWCF.Channels.RecycledMessageState)
  id: ReturnMessageState(CoreWCF.Channels.RecycledMessageState)
  parent: CoreWCF.Channels.IBufferedMessageData
  langs:
  - csharp
  - vb
  name: ReturnMessageState(RecycledMessageState)
  nameWithType: IBufferedMessageData.ReturnMessageState(RecycledMessageState)
  fullName: CoreWCF.Channels.IBufferedMessageData.ReturnMessageState(CoreWCF.Channels.RecycledMessageState)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: void ReturnMessageState(RecycledMessageState messageState)
    parameters:
    - id: messageState
      type: CoreWCF.Channels.RecycledMessageState
    content.vb: Sub ReturnMessageState(messageState As RecycledMessageState)
  overload: CoreWCF.Channels.IBufferedMessageData.ReturnMessageState*
- uid: CoreWCF.Channels.IBufferedMessageData.TakeMessageState
  commentId: M:CoreWCF.Channels.IBufferedMessageData.TakeMessageState
  id: TakeMessageState
  parent: CoreWCF.Channels.IBufferedMessageData
  langs:
  - csharp
  - vb
  name: TakeMessageState()
  nameWithType: IBufferedMessageData.TakeMessageState()
  fullName: CoreWCF.Channels.IBufferedMessageData.TakeMessageState()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: RecycledMessageState TakeMessageState()
    return:
      type: CoreWCF.Channels.RecycledMessageState
    content.vb: Function TakeMessageState As RecycledMessageState
  overload: CoreWCF.Channels.IBufferedMessageData.TakeMessageState*
- uid: CoreWCF.Channels.IBufferedMessageData.MessageEncoder
  commentId: P:CoreWCF.Channels.IBufferedMessageData.MessageEncoder
  id: MessageEncoder
  parent: CoreWCF.Channels.IBufferedMessageData
  langs:
  - csharp
  - vb
  name: MessageEncoder
  nameWithType: IBufferedMessageData.MessageEncoder
  fullName: CoreWCF.Channels.IBufferedMessageData.MessageEncoder
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: MessageEncoder MessageEncoder { get; }
    parameters: []
    return:
      type: CoreWCF.Channels.MessageEncoder
    content.vb: ReadOnly Property MessageEncoder As MessageEncoder
  overload: CoreWCF.Channels.IBufferedMessageData.MessageEncoder*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: CoreWCF.Channels.IBufferedMessageData.Buffer
  commentId: P:CoreWCF.Channels.IBufferedMessageData.Buffer
  id: Buffer
  parent: CoreWCF.Channels.IBufferedMessageData
  langs:
  - csharp
  - vb
  name: Buffer
  nameWithType: IBufferedMessageData.Buffer
  fullName: CoreWCF.Channels.IBufferedMessageData.Buffer
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: ArraySegment<byte> Buffer { get; }
    parameters: []
    return:
      type: System.ArraySegment{System.Byte}
    content.vb: ReadOnly Property Buffer As ArraySegment(Of Byte)
  overload: CoreWCF.Channels.IBufferedMessageData.Buffer*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: CoreWCF.Channels.IBufferedMessageData.Quotas
  commentId: P:CoreWCF.Channels.IBufferedMessageData.Quotas
  id: Quotas
  parent: CoreWCF.Channels.IBufferedMessageData
  langs:
  - csharp
  - vb
  name: Quotas
  nameWithType: IBufferedMessageData.Quotas
  fullName: CoreWCF.Channels.IBufferedMessageData.Quotas
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: XmlDictionaryReaderQuotas Quotas { get; }
    parameters: []
    return:
      type: System.Xml.XmlDictionaryReaderQuotas
    content.vb: ReadOnly Property Quotas As XmlDictionaryReaderQuotas
  overload: CoreWCF.Channels.IBufferedMessageData.Quotas*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: CoreWCF.Channels
  commentId: N:CoreWCF.Channels
  isExternal: true
  name: CoreWCF.Channels
  nameWithType: CoreWCF.Channels
  fullName: CoreWCF.Channels
- uid: CoreWCF.Channels.IBufferedMessageData.Close*
  commentId: Overload:CoreWCF.Channels.IBufferedMessageData.Close
  isExternal: true
  name: Close
  nameWithType: IBufferedMessageData.Close
  fullName: CoreWCF.Channels.IBufferedMessageData.Close
- uid: CoreWCF.Channels.IBufferedMessageData.EnableMultipleUsers*
  commentId: Overload:CoreWCF.Channels.IBufferedMessageData.EnableMultipleUsers
  isExternal: true
  name: EnableMultipleUsers
  nameWithType: IBufferedMessageData.EnableMultipleUsers
  fullName: CoreWCF.Channels.IBufferedMessageData.EnableMultipleUsers
- uid: CoreWCF.Channels.IBufferedMessageData.GetMessageReader*
  commentId: Overload:CoreWCF.Channels.IBufferedMessageData.GetMessageReader
  isExternal: true
  name: GetMessageReader
  nameWithType: IBufferedMessageData.GetMessageReader
  fullName: CoreWCF.Channels.IBufferedMessageData.GetMessageReader
- uid: System.Xml.XmlDictionaryReader
  isExternal: true
  name: XmlDictionaryReader
  nameWithType: XmlDictionaryReader
  fullName: System.Xml.XmlDictionaryReader
- uid: CoreWCF.Channels.IBufferedMessageData.Open*
  commentId: Overload:CoreWCF.Channels.IBufferedMessageData.Open
  isExternal: true
  name: Open
  nameWithType: IBufferedMessageData.Open
  fullName: CoreWCF.Channels.IBufferedMessageData.Open
- uid: CoreWCF.Channels.IBufferedMessageData.ReturnMessageState*
  commentId: Overload:CoreWCF.Channels.IBufferedMessageData.ReturnMessageState
  isExternal: true
  name: ReturnMessageState
  nameWithType: IBufferedMessageData.ReturnMessageState
  fullName: CoreWCF.Channels.IBufferedMessageData.ReturnMessageState
- uid: CoreWCF.Channels.RecycledMessageState
  commentId: T:CoreWCF.Channels.RecycledMessageState
  parent: CoreWCF.Channels
  isExternal: true
  name: RecycledMessageState
  nameWithType: RecycledMessageState
  fullName: CoreWCF.Channels.RecycledMessageState
- uid: CoreWCF.Channels.IBufferedMessageData.TakeMessageState*
  commentId: Overload:CoreWCF.Channels.IBufferedMessageData.TakeMessageState
  isExternal: true
  name: TakeMessageState
  nameWithType: IBufferedMessageData.TakeMessageState
  fullName: CoreWCF.Channels.IBufferedMessageData.TakeMessageState
- uid: CoreWCF.Channels.IBufferedMessageData.MessageEncoder*
  commentId: Overload:CoreWCF.Channels.IBufferedMessageData.MessageEncoder
  isExternal: true
  name: MessageEncoder
  nameWithType: IBufferedMessageData.MessageEncoder
  fullName: CoreWCF.Channels.IBufferedMessageData.MessageEncoder
- uid: CoreWCF.Channels.MessageEncoder
  commentId: T:CoreWCF.Channels.MessageEncoder
  parent: CoreWCF.Channels
  isExternal: true
  name: MessageEncoder
  nameWithType: MessageEncoder
  fullName: CoreWCF.Channels.MessageEncoder
- uid: CoreWCF.Channels.IBufferedMessageData.Buffer*
  commentId: Overload:CoreWCF.Channels.IBufferedMessageData.Buffer
  isExternal: true
  name: Buffer
  nameWithType: IBufferedMessageData.Buffer
  fullName: CoreWCF.Channels.IBufferedMessageData.Buffer
- uid: System.ArraySegment{System.Byte}
  commentId: '!:System.ArraySegment{System.Byte}'
  definition: System.ArraySegment`1
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  nameWithType.vb: ArraySegment(Of Byte)
  fullName.vb: System.ArraySegment(Of System.Byte)
  name.vb: ArraySegment(Of Byte)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArraySegment`1
  isExternal: true
  name: ArraySegment<>
  nameWithType: ArraySegment<>
  fullName: System.ArraySegment<>
  nameWithType.vb: ArraySegment(Of )
  fullName.vb: System.ArraySegment(Of )
  name.vb: ArraySegment(Of )
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.IBufferedMessageData.Quotas*
  commentId: Overload:CoreWCF.Channels.IBufferedMessageData.Quotas
  isExternal: true
  name: Quotas
  nameWithType: IBufferedMessageData.Quotas
  fullName: CoreWCF.Channels.IBufferedMessageData.Quotas
- uid: System.Xml.XmlDictionaryReaderQuotas
  isExternal: true
  name: XmlDictionaryReaderQuotas
  nameWithType: XmlDictionaryReaderQuotas
  fullName: System.Xml.XmlDictionaryReaderQuotas
