### YamlMime:ManagedReference
items:
- uid: CoreWCF.Configuration.WebSocketTransportSettingsElement
  commentId: T:CoreWCF.Configuration.WebSocketTransportSettingsElement
  id: WebSocketTransportSettingsElement
  parent: CoreWCF.Configuration
  children:
  - CoreWCF.Configuration.WebSocketTransportSettingsElement.#ctor
  - CoreWCF.Configuration.WebSocketTransportSettingsElement.ApplyConfiguration(CoreWCF.Channels.WebSocketTransportSettings)
  - CoreWCF.Configuration.WebSocketTransportSettingsElement.CreateNotificationOnConnection
  - CoreWCF.Configuration.WebSocketTransportSettingsElement.DisablePayloadMasking
  - CoreWCF.Configuration.WebSocketTransportSettingsElement.InitializeFrom(CoreWCF.Channels.WebSocketTransportSettings)
  - CoreWCF.Configuration.WebSocketTransportSettingsElement.KeepAliveInterval
  - CoreWCF.Configuration.WebSocketTransportSettingsElement.MaxPendingConnections
  - CoreWCF.Configuration.WebSocketTransportSettingsElement.SubProtocol
  - CoreWCF.Configuration.WebSocketTransportSettingsElement.TransportUsage
  langs:
  - csharp
  - vb
  name: WebSocketTransportSettingsElement
  nameWithType: WebSocketTransportSettingsElement
  fullName: CoreWCF.Configuration.WebSocketTransportSettingsElement
  type: Class
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  summary: Represents WebSocketTransportSettingsElement for WebSocketTransportSettings.
  remarks: To be added.
  syntax:
    content: 'public class WebSocketTransportSettingsElement : ServiceModelConfigurationElement'
    content.vb: >-
      Public Class WebSocketTransportSettingsElement
          Inherits ServiceModelConfigurationElement
  inheritance:
  - System.Object
  - CoreWCF.Configuration.ServiceModelConfigurationElement
  inheritedMembers:
  - CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,{T})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.Configuration.WebSocketTransportSettingsElement.InitializeFrom(CoreWCF.Channels.WebSocketTransportSettings)
  commentId: M:CoreWCF.Configuration.WebSocketTransportSettingsElement.InitializeFrom(CoreWCF.Channels.WebSocketTransportSettings)
  id: InitializeFrom(CoreWCF.Channels.WebSocketTransportSettings)
  parent: CoreWCF.Configuration.WebSocketTransportSettingsElement
  langs:
  - csharp
  - vb
  name: InitializeFrom(WebSocketTransportSettings)
  nameWithType: WebSocketTransportSettingsElement.InitializeFrom(WebSocketTransportSettings)
  fullName: CoreWCF.Configuration.WebSocketTransportSettingsElement.InitializeFrom(CoreWCF.Channels.WebSocketTransportSettings)
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public void InitializeFrom(WebSocketTransportSettings settings)
    parameters:
    - id: settings
      type: CoreWCF.Channels.WebSocketTransportSettings
    content.vb: Public Sub InitializeFrom(settings As WebSocketTransportSettings)
  overload: CoreWCF.Configuration.WebSocketTransportSettingsElement.InitializeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.WebSocketTransportSettingsElement.ApplyConfiguration(CoreWCF.Channels.WebSocketTransportSettings)
  commentId: M:CoreWCF.Configuration.WebSocketTransportSettingsElement.ApplyConfiguration(CoreWCF.Channels.WebSocketTransportSettings)
  id: ApplyConfiguration(CoreWCF.Channels.WebSocketTransportSettings)
  parent: CoreWCF.Configuration.WebSocketTransportSettingsElement
  langs:
  - csharp
  - vb
  name: ApplyConfiguration(WebSocketTransportSettings)
  nameWithType: WebSocketTransportSettingsElement.ApplyConfiguration(WebSocketTransportSettings)
  fullName: CoreWCF.Configuration.WebSocketTransportSettingsElement.ApplyConfiguration(CoreWCF.Channels.WebSocketTransportSettings)
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public void ApplyConfiguration(WebSocketTransportSettings settings)
    parameters:
    - id: settings
      type: CoreWCF.Channels.WebSocketTransportSettings
    content.vb: Public Sub ApplyConfiguration(settings As WebSocketTransportSettings)
  overload: CoreWCF.Configuration.WebSocketTransportSettingsElement.ApplyConfiguration*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.WebSocketTransportSettingsElement.#ctor
  commentId: M:CoreWCF.Configuration.WebSocketTransportSettingsElement.#ctor
  id: '#ctor'
  parent: CoreWCF.Configuration.WebSocketTransportSettingsElement
  langs:
  - csharp
  - vb
  name: WebSocketTransportSettingsElement()
  nameWithType: WebSocketTransportSettingsElement.WebSocketTransportSettingsElement()
  fullName: CoreWCF.Configuration.WebSocketTransportSettingsElement.WebSocketTransportSettingsElement()
  type: Constructor
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public WebSocketTransportSettingsElement()
    content.vb: Public Sub New
  overload: CoreWCF.Configuration.WebSocketTransportSettingsElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.WebSocketTransportSettingsElement.TransportUsage
  commentId: P:CoreWCF.Configuration.WebSocketTransportSettingsElement.TransportUsage
  id: TransportUsage
  parent: CoreWCF.Configuration.WebSocketTransportSettingsElement
  langs:
  - csharp
  - vb
  name: TransportUsage
  nameWithType: WebSocketTransportSettingsElement.TransportUsage
  fullName: CoreWCF.Configuration.WebSocketTransportSettingsElement.TransportUsage
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public virtual WebSocketTransportUsage TransportUsage { get; set; }
    parameters: []
    return:
      type: CoreWCF.Channels.WebSocketTransportUsage
    content.vb: Public Overridable Property TransportUsage As WebSocketTransportUsage
  overload: CoreWCF.Configuration.WebSocketTransportSettingsElement.TransportUsage*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.Configuration.WebSocketTransportSettingsElement.CreateNotificationOnConnection
  commentId: P:CoreWCF.Configuration.WebSocketTransportSettingsElement.CreateNotificationOnConnection
  id: CreateNotificationOnConnection
  parent: CoreWCF.Configuration.WebSocketTransportSettingsElement
  langs:
  - csharp
  - vb
  name: CreateNotificationOnConnection
  nameWithType: WebSocketTransportSettingsElement.CreateNotificationOnConnection
  fullName: CoreWCF.Configuration.WebSocketTransportSettingsElement.CreateNotificationOnConnection
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public bool CreateNotificationOnConnection { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CreateNotificationOnConnection As Boolean
  overload: CoreWCF.Configuration.WebSocketTransportSettingsElement.CreateNotificationOnConnection*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.WebSocketTransportSettingsElement.KeepAliveInterval
  commentId: P:CoreWCF.Configuration.WebSocketTransportSettingsElement.KeepAliveInterval
  id: KeepAliveInterval
  parent: CoreWCF.Configuration.WebSocketTransportSettingsElement
  langs:
  - csharp
  - vb
  name: KeepAliveInterval
  nameWithType: WebSocketTransportSettingsElement.KeepAliveInterval
  fullName: CoreWCF.Configuration.WebSocketTransportSettingsElement.KeepAliveInterval
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public TimeSpan KeepAliveInterval { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property KeepAliveInterval As TimeSpan
  overload: CoreWCF.Configuration.WebSocketTransportSettingsElement.KeepAliveInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.WebSocketTransportSettingsElement.SubProtocol
  commentId: P:CoreWCF.Configuration.WebSocketTransportSettingsElement.SubProtocol
  id: SubProtocol
  parent: CoreWCF.Configuration.WebSocketTransportSettingsElement
  langs:
  - csharp
  - vb
  name: SubProtocol
  nameWithType: WebSocketTransportSettingsElement.SubProtocol
  fullName: CoreWCF.Configuration.WebSocketTransportSettingsElement.SubProtocol
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public virtual string SubProtocol { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property SubProtocol As String
  overload: CoreWCF.Configuration.WebSocketTransportSettingsElement.SubProtocol*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.Configuration.WebSocketTransportSettingsElement.DisablePayloadMasking
  commentId: P:CoreWCF.Configuration.WebSocketTransportSettingsElement.DisablePayloadMasking
  id: DisablePayloadMasking
  parent: CoreWCF.Configuration.WebSocketTransportSettingsElement
  langs:
  - csharp
  - vb
  name: DisablePayloadMasking
  nameWithType: WebSocketTransportSettingsElement.DisablePayloadMasking
  fullName: CoreWCF.Configuration.WebSocketTransportSettingsElement.DisablePayloadMasking
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public bool DisablePayloadMasking { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DisablePayloadMasking As Boolean
  overload: CoreWCF.Configuration.WebSocketTransportSettingsElement.DisablePayloadMasking*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.WebSocketTransportSettingsElement.MaxPendingConnections
  commentId: P:CoreWCF.Configuration.WebSocketTransportSettingsElement.MaxPendingConnections
  id: MaxPendingConnections
  parent: CoreWCF.Configuration.WebSocketTransportSettingsElement
  langs:
  - csharp
  - vb
  name: MaxPendingConnections
  nameWithType: WebSocketTransportSettingsElement.MaxPendingConnections
  fullName: CoreWCF.Configuration.WebSocketTransportSettingsElement.MaxPendingConnections
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public int MaxPendingConnections { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxPendingConnections As Integer
  overload: CoreWCF.Configuration.WebSocketTransportSettingsElement.MaxPendingConnections*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: CoreWCF.Configuration
  commentId: N:CoreWCF.Configuration
  isExternal: true
  name: CoreWCF.Configuration
  nameWithType: CoreWCF.Configuration
  fullName: CoreWCF.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CoreWCF.Configuration.ServiceModelConfigurationElement
  commentId: T:CoreWCF.Configuration.ServiceModelConfigurationElement
  parent: CoreWCF.Configuration
  isExternal: true
  name: ServiceModelConfigurationElement
  nameWithType: ServiceModelConfigurationElement
  fullName: CoreWCF.Configuration.ServiceModelConfigurationElement
- uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,{T})
  commentId: M:CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  parent: CoreWCF.Configuration.ServiceModelConfigurationElement
  definition: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  name: SetPropertyValueIfNotDefaultValue<T>(String, T)
  nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)
  fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(System.String, T)
  nameWithType.vb: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  fullName.vb: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(System.String, T)
  name.vb: SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  spec.csharp:
  - uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue<T>
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue(Of T)
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  commentId: M:CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  isExternal: true
  name: SetPropertyValueIfNotDefaultValue<T>(String, T)
  nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)
  fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(System.String, T)
  nameWithType.vb: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  fullName.vb: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(System.String, T)
  name.vb: SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  spec.csharp:
  - uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue<T>
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue(Of T)
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Configuration.WebSocketTransportSettingsElement.InitializeFrom*
  commentId: Overload:CoreWCF.Configuration.WebSocketTransportSettingsElement.InitializeFrom
  isExternal: true
  name: InitializeFrom
  nameWithType: WebSocketTransportSettingsElement.InitializeFrom
  fullName: CoreWCF.Configuration.WebSocketTransportSettingsElement.InitializeFrom
- uid: CoreWCF.Channels.WebSocketTransportSettings
  commentId: T:CoreWCF.Channels.WebSocketTransportSettings
  parent: CoreWCF.Channels
  isExternal: true
  name: WebSocketTransportSettings
  nameWithType: WebSocketTransportSettings
  fullName: CoreWCF.Channels.WebSocketTransportSettings
- uid: CoreWCF.Channels
  commentId: N:CoreWCF.Channels
  isExternal: true
  name: CoreWCF.Channels
  nameWithType: CoreWCF.Channels
  fullName: CoreWCF.Channels
- uid: CoreWCF.Configuration.WebSocketTransportSettingsElement.ApplyConfiguration*
  commentId: Overload:CoreWCF.Configuration.WebSocketTransportSettingsElement.ApplyConfiguration
  isExternal: true
  name: ApplyConfiguration
  nameWithType: WebSocketTransportSettingsElement.ApplyConfiguration
  fullName: CoreWCF.Configuration.WebSocketTransportSettingsElement.ApplyConfiguration
- uid: CoreWCF.Configuration.WebSocketTransportSettingsElement.#ctor*
  commentId: Overload:CoreWCF.Configuration.WebSocketTransportSettingsElement.#ctor
  isExternal: true
  name: WebSocketTransportSettingsElement
  nameWithType: WebSocketTransportSettingsElement.WebSocketTransportSettingsElement
  fullName: CoreWCF.Configuration.WebSocketTransportSettingsElement.WebSocketTransportSettingsElement
- uid: CoreWCF.Configuration.WebSocketTransportSettingsElement.TransportUsage*
  commentId: Overload:CoreWCF.Configuration.WebSocketTransportSettingsElement.TransportUsage
  isExternal: true
  name: TransportUsage
  nameWithType: WebSocketTransportSettingsElement.TransportUsage
  fullName: CoreWCF.Configuration.WebSocketTransportSettingsElement.TransportUsage
- uid: CoreWCF.Channels.WebSocketTransportUsage
  commentId: T:CoreWCF.Channels.WebSocketTransportUsage
  parent: CoreWCF.Channels
  isExternal: true
  name: WebSocketTransportUsage
  nameWithType: WebSocketTransportUsage
  fullName: CoreWCF.Channels.WebSocketTransportUsage
- uid: CoreWCF.Configuration.WebSocketTransportSettingsElement.CreateNotificationOnConnection*
  commentId: Overload:CoreWCF.Configuration.WebSocketTransportSettingsElement.CreateNotificationOnConnection
  isExternal: true
  name: CreateNotificationOnConnection
  nameWithType: WebSocketTransportSettingsElement.CreateNotificationOnConnection
  fullName: CoreWCF.Configuration.WebSocketTransportSettingsElement.CreateNotificationOnConnection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.Configuration.WebSocketTransportSettingsElement.KeepAliveInterval*
  commentId: Overload:CoreWCF.Configuration.WebSocketTransportSettingsElement.KeepAliveInterval
  isExternal: true
  name: KeepAliveInterval
  nameWithType: WebSocketTransportSettingsElement.KeepAliveInterval
  fullName: CoreWCF.Configuration.WebSocketTransportSettingsElement.KeepAliveInterval
- uid: System.TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: CoreWCF.Configuration.WebSocketTransportSettingsElement.SubProtocol*
  commentId: Overload:CoreWCF.Configuration.WebSocketTransportSettingsElement.SubProtocol
  isExternal: true
  name: SubProtocol
  nameWithType: WebSocketTransportSettingsElement.SubProtocol
  fullName: CoreWCF.Configuration.WebSocketTransportSettingsElement.SubProtocol
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CoreWCF.Configuration.WebSocketTransportSettingsElement.DisablePayloadMasking*
  commentId: Overload:CoreWCF.Configuration.WebSocketTransportSettingsElement.DisablePayloadMasking
  isExternal: true
  name: DisablePayloadMasking
  nameWithType: WebSocketTransportSettingsElement.DisablePayloadMasking
  fullName: CoreWCF.Configuration.WebSocketTransportSettingsElement.DisablePayloadMasking
- uid: CoreWCF.Configuration.WebSocketTransportSettingsElement.MaxPendingConnections*
  commentId: Overload:CoreWCF.Configuration.WebSocketTransportSettingsElement.MaxPendingConnections
  isExternal: true
  name: MaxPendingConnections
  nameWithType: WebSocketTransportSettingsElement.MaxPendingConnections
  fullName: CoreWCF.Configuration.WebSocketTransportSettingsElement.MaxPendingConnections
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
