### YamlMime:ManagedReference
items:
- uid: CoreWCF.Security.MessagePartSpecification
  commentId: T:CoreWCF.Security.MessagePartSpecification
  id: MessagePartSpecification
  parent: CoreWCF.Security
  children:
  - CoreWCF.Security.MessagePartSpecification.#ctor
  - CoreWCF.Security.MessagePartSpecification.#ctor(System.Boolean)
  - CoreWCF.Security.MessagePartSpecification.#ctor(System.Boolean,System.Xml.XmlQualifiedName[])
  - CoreWCF.Security.MessagePartSpecification.#ctor(System.Xml.XmlQualifiedName[])
  - CoreWCF.Security.MessagePartSpecification.Clear
  - CoreWCF.Security.MessagePartSpecification.HeaderTypes
  - CoreWCF.Security.MessagePartSpecification.IsBodyIncluded
  - CoreWCF.Security.MessagePartSpecification.IsReadOnly
  - CoreWCF.Security.MessagePartSpecification.MakeReadOnly
  - CoreWCF.Security.MessagePartSpecification.NoParts
  - CoreWCF.Security.MessagePartSpecification.Union(CoreWCF.Security.MessagePartSpecification)
  langs:
  - csharp
  - vb
  name: MessagePartSpecification
  nameWithType: MessagePartSpecification
  fullName: CoreWCF.Security.MessagePartSpecification
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  summary: Specifies which parts are included in a message.
  remarks: "This specification is used to indicate which message parts need to be signed and which parts need to be encrypted.  \n\n"
  syntax:
    content: 'public class MessagePartSpecification : Object'
    content.vb: >-
      Public Class MessagePartSpecification
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.Security.MessagePartSpecification.Clear
  commentId: M:CoreWCF.Security.MessagePartSpecification.Clear
  id: Clear
  parent: CoreWCF.Security.MessagePartSpecification
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: MessagePartSpecification.Clear()
  fullName: CoreWCF.Security.MessagePartSpecification.Clear()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: CoreWCF.Security.MessagePartSpecification.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.MessagePartSpecification.Union(CoreWCF.Security.MessagePartSpecification)
  commentId: M:CoreWCF.Security.MessagePartSpecification.Union(CoreWCF.Security.MessagePartSpecification)
  id: Union(CoreWCF.Security.MessagePartSpecification)
  parent: CoreWCF.Security.MessagePartSpecification
  langs:
  - csharp
  - vb
  name: Union(MessagePartSpecification)
  nameWithType: MessagePartSpecification.Union(MessagePartSpecification)
  fullName: CoreWCF.Security.MessagePartSpecification.Union(CoreWCF.Security.MessagePartSpecification)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public void Union(MessagePartSpecification specification)
    parameters:
    - id: specification
      type: CoreWCF.Security.MessagePartSpecification
    content.vb: Public Sub Union(specification As MessagePartSpecification)
  overload: CoreWCF.Security.MessagePartSpecification.Union*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.MessagePartSpecification.MakeReadOnly
  commentId: M:CoreWCF.Security.MessagePartSpecification.MakeReadOnly
  id: MakeReadOnly
  parent: CoreWCF.Security.MessagePartSpecification
  langs:
  - csharp
  - vb
  name: MakeReadOnly()
  nameWithType: MessagePartSpecification.MakeReadOnly()
  fullName: CoreWCF.Security.MessagePartSpecification.MakeReadOnly()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public void MakeReadOnly()
    content.vb: Public Sub MakeReadOnly
  overload: CoreWCF.Security.MessagePartSpecification.MakeReadOnly*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.MessagePartSpecification.#ctor
  commentId: M:CoreWCF.Security.MessagePartSpecification.#ctor
  id: '#ctor'
  parent: CoreWCF.Security.MessagePartSpecification
  langs:
  - csharp
  - vb
  name: MessagePartSpecification()
  nameWithType: MessagePartSpecification.MessagePartSpecification()
  fullName: CoreWCF.Security.MessagePartSpecification.MessagePartSpecification()
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public MessagePartSpecification()
    content.vb: Public Sub New
  overload: CoreWCF.Security.MessagePartSpecification.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.MessagePartSpecification.#ctor(System.Boolean)
  commentId: M:CoreWCF.Security.MessagePartSpecification.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: CoreWCF.Security.MessagePartSpecification
  langs:
  - csharp
  - vb
  name: MessagePartSpecification(Boolean)
  nameWithType: MessagePartSpecification.MessagePartSpecification(Boolean)
  fullName: CoreWCF.Security.MessagePartSpecification.MessagePartSpecification(System.Boolean)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public MessagePartSpecification(bool isBodyIncluded)
    parameters:
    - id: isBodyIncluded
      type: System.Boolean
    content.vb: Public Sub New(isBodyIncluded As Boolean)
  overload: CoreWCF.Security.MessagePartSpecification.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.MessagePartSpecification.#ctor(System.Xml.XmlQualifiedName[])
  commentId: M:CoreWCF.Security.MessagePartSpecification.#ctor(System.Xml.XmlQualifiedName[])
  id: '#ctor(System.Xml.XmlQualifiedName[])'
  parent: CoreWCF.Security.MessagePartSpecification
  langs:
  - csharp
  - vb
  name: MessagePartSpecification(XmlQualifiedName[])
  nameWithType: MessagePartSpecification.MessagePartSpecification(XmlQualifiedName[])
  fullName: CoreWCF.Security.MessagePartSpecification.MessagePartSpecification(System.Xml.XmlQualifiedName[])
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public MessagePartSpecification(params XmlQualifiedName[] headerTypes)
    parameters:
    - id: headerTypes
      type: System.Xml.XmlQualifiedName[]
    content.vb: Public Sub New(ParamArray headerTypes As XmlQualifiedName())
  overload: CoreWCF.Security.MessagePartSpecification.#ctor*
  nameWithType.vb: MessagePartSpecification.MessagePartSpecification(XmlQualifiedName())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.Security.MessagePartSpecification.MessagePartSpecification(System.Xml.XmlQualifiedName())
  name.vb: MessagePartSpecification(XmlQualifiedName())
- uid: CoreWCF.Security.MessagePartSpecification.#ctor(System.Boolean,System.Xml.XmlQualifiedName[])
  commentId: M:CoreWCF.Security.MessagePartSpecification.#ctor(System.Boolean,System.Xml.XmlQualifiedName[])
  id: '#ctor(System.Boolean,System.Xml.XmlQualifiedName[])'
  parent: CoreWCF.Security.MessagePartSpecification
  langs:
  - csharp
  - vb
  name: MessagePartSpecification(Boolean, XmlQualifiedName[])
  nameWithType: MessagePartSpecification.MessagePartSpecification(Boolean, XmlQualifiedName[])
  fullName: CoreWCF.Security.MessagePartSpecification.MessagePartSpecification(System.Boolean, System.Xml.XmlQualifiedName[])
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public MessagePartSpecification(bool isBodyIncluded, params XmlQualifiedName[] headerTypes)
    parameters:
    - id: isBodyIncluded
      type: System.Boolean
    - id: headerTypes
      type: System.Xml.XmlQualifiedName[]
    content.vb: Public Sub New(isBodyIncluded As Boolean, ParamArray headerTypes As XmlQualifiedName())
  overload: CoreWCF.Security.MessagePartSpecification.#ctor*
  nameWithType.vb: MessagePartSpecification.MessagePartSpecification(Boolean, XmlQualifiedName())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.Security.MessagePartSpecification.MessagePartSpecification(System.Boolean, System.Xml.XmlQualifiedName())
  name.vb: MessagePartSpecification(Boolean, XmlQualifiedName())
- uid: CoreWCF.Security.MessagePartSpecification.HeaderTypes
  commentId: P:CoreWCF.Security.MessagePartSpecification.HeaderTypes
  id: HeaderTypes
  parent: CoreWCF.Security.MessagePartSpecification
  langs:
  - csharp
  - vb
  name: HeaderTypes
  nameWithType: MessagePartSpecification.HeaderTypes
  fullName: CoreWCF.Security.MessagePartSpecification.HeaderTypes
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public ICollection<XmlQualifiedName> HeaderTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName}
    content.vb: Public ReadOnly Property HeaderTypes As ICollection(Of XmlQualifiedName)
  overload: CoreWCF.Security.MessagePartSpecification.HeaderTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.MessagePartSpecification.IsBodyIncluded
  commentId: P:CoreWCF.Security.MessagePartSpecification.IsBodyIncluded
  id: IsBodyIncluded
  parent: CoreWCF.Security.MessagePartSpecification
  langs:
  - csharp
  - vb
  name: IsBodyIncluded
  nameWithType: MessagePartSpecification.IsBodyIncluded
  fullName: CoreWCF.Security.MessagePartSpecification.IsBodyIncluded
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public bool IsBodyIncluded { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsBodyIncluded As Boolean
  overload: CoreWCF.Security.MessagePartSpecification.IsBodyIncluded*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.MessagePartSpecification.IsReadOnly
  commentId: P:CoreWCF.Security.MessagePartSpecification.IsReadOnly
  id: IsReadOnly
  parent: CoreWCF.Security.MessagePartSpecification
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: MessagePartSpecification.IsReadOnly
  fullName: CoreWCF.Security.MessagePartSpecification.IsReadOnly
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: CoreWCF.Security.MessagePartSpecification.IsReadOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.MessagePartSpecification.NoParts
  commentId: P:CoreWCF.Security.MessagePartSpecification.NoParts
  id: NoParts
  parent: CoreWCF.Security.MessagePartSpecification
  langs:
  - csharp
  - vb
  name: NoParts
  nameWithType: MessagePartSpecification.NoParts
  fullName: CoreWCF.Security.MessagePartSpecification.NoParts
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public static MessagePartSpecification NoParts { get; }
    parameters: []
    return:
      type: CoreWCF.Security.MessagePartSpecification
    content.vb: Public Shared ReadOnly Property NoParts As MessagePartSpecification
  overload: CoreWCF.Security.MessagePartSpecification.NoParts*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: CoreWCF.Security
  commentId: N:CoreWCF.Security
  isExternal: true
  name: CoreWCF.Security
  nameWithType: CoreWCF.Security
  fullName: CoreWCF.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Security.MessagePartSpecification.Clear*
  commentId: Overload:CoreWCF.Security.MessagePartSpecification.Clear
  isExternal: true
  name: Clear
  nameWithType: MessagePartSpecification.Clear
  fullName: CoreWCF.Security.MessagePartSpecification.Clear
- uid: CoreWCF.Security.MessagePartSpecification.Union*
  commentId: Overload:CoreWCF.Security.MessagePartSpecification.Union
  isExternal: true
  name: Union
  nameWithType: MessagePartSpecification.Union
  fullName: CoreWCF.Security.MessagePartSpecification.Union
- uid: CoreWCF.Security.MessagePartSpecification
  commentId: T:CoreWCF.Security.MessagePartSpecification
  parent: CoreWCF.Security
  isExternal: true
  name: MessagePartSpecification
  nameWithType: MessagePartSpecification
  fullName: CoreWCF.Security.MessagePartSpecification
- uid: CoreWCF.Security.MessagePartSpecification.MakeReadOnly*
  commentId: Overload:CoreWCF.Security.MessagePartSpecification.MakeReadOnly
  isExternal: true
  name: MakeReadOnly
  nameWithType: MessagePartSpecification.MakeReadOnly
  fullName: CoreWCF.Security.MessagePartSpecification.MakeReadOnly
- uid: CoreWCF.Security.MessagePartSpecification.#ctor*
  commentId: Overload:CoreWCF.Security.MessagePartSpecification.#ctor
  isExternal: true
  name: MessagePartSpecification
  nameWithType: MessagePartSpecification.MessagePartSpecification
  fullName: CoreWCF.Security.MessagePartSpecification.MessagePartSpecification
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlQualifiedName[]
  isExternal: true
  name: XmlQualifiedName[]
  nameWithType: XmlQualifiedName[]
  fullName: System.Xml.XmlQualifiedName[]
  nameWithType.vb: XmlQualifiedName()
  fullName.vb: System.Xml.XmlQualifiedName()
  name.vb: XmlQualifiedName()
  spec.csharp:
  - uid: System.Xml.XmlQualifiedName
    name: XmlQualifiedName
    nameWithType: XmlQualifiedName
    fullName: System.Xml.XmlQualifiedName
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Xml.XmlQualifiedName
    name: XmlQualifiedName
    nameWithType: XmlQualifiedName
    fullName: System.Xml.XmlQualifiedName
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: CoreWCF.Security.MessagePartSpecification.HeaderTypes*
  commentId: Overload:CoreWCF.Security.MessagePartSpecification.HeaderTypes
  isExternal: true
  name: HeaderTypes
  nameWithType: MessagePartSpecification.HeaderTypes
  fullName: CoreWCF.Security.MessagePartSpecification.HeaderTypes
- uid: System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName}
  commentId: '!:System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName}'
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<XmlQualifiedName>
  nameWithType: ICollection<XmlQualifiedName>
  fullName: System.Collections.Generic.ICollection<System.Xml.XmlQualifiedName>
  nameWithType.vb: ICollection(Of XmlQualifiedName)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Xml.XmlQualifiedName)
  name.vb: ICollection(Of XmlQualifiedName)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlQualifiedName
    name: XmlQualifiedName
    nameWithType: XmlQualifiedName
    fullName: System.Xml.XmlQualifiedName
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xml.XmlQualifiedName
    name: XmlQualifiedName
    nameWithType: XmlQualifiedName
    fullName: System.Xml.XmlQualifiedName
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<>
  nameWithType: ICollection<>
  fullName: System.Collections.Generic.ICollection<>
  nameWithType.vb: ICollection(Of )
  fullName.vb: System.Collections.Generic.ICollection(Of )
  name.vb: ICollection(Of )
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Security.MessagePartSpecification.IsBodyIncluded*
  commentId: Overload:CoreWCF.Security.MessagePartSpecification.IsBodyIncluded
  isExternal: true
  name: IsBodyIncluded
  nameWithType: MessagePartSpecification.IsBodyIncluded
  fullName: CoreWCF.Security.MessagePartSpecification.IsBodyIncluded
- uid: CoreWCF.Security.MessagePartSpecification.IsReadOnly*
  commentId: Overload:CoreWCF.Security.MessagePartSpecification.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: MessagePartSpecification.IsReadOnly
  fullName: CoreWCF.Security.MessagePartSpecification.IsReadOnly
- uid: CoreWCF.Security.MessagePartSpecification.NoParts*
  commentId: Overload:CoreWCF.Security.MessagePartSpecification.NoParts
  isExternal: true
  name: NoParts
  nameWithType: MessagePartSpecification.NoParts
  fullName: CoreWCF.Security.MessagePartSpecification.NoParts
