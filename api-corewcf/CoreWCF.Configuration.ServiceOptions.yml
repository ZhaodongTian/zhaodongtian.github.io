### YamlMime:ManagedReference
items:
- uid: CoreWCF.Configuration.ServiceOptions
  commentId: T:CoreWCF.Configuration.ServiceOptions
  id: ServiceOptions
  parent: CoreWCF.Configuration
  children:
  - CoreWCF.Configuration.ServiceOptions.BaseAddresses
  - CoreWCF.Configuration.ServiceOptions.DebugBehavior
  langs:
  - csharp
  - vb
  name: ServiceOptions
  nameWithType: ServiceOptions
  fullName: CoreWCF.Configuration.ServiceOptions
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Configuration
  syntax:
    content: 'public class ServiceOptions : Object'
    content.vb: >-
      Public Class ServiceOptions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.Configuration.ServiceOptions.DebugBehavior
  commentId: P:CoreWCF.Configuration.ServiceOptions.DebugBehavior
  id: DebugBehavior
  parent: CoreWCF.Configuration.ServiceOptions
  langs:
  - csharp
  - vb
  name: DebugBehavior
  nameWithType: ServiceOptions.DebugBehavior
  fullName: CoreWCF.Configuration.ServiceOptions.DebugBehavior
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Configuration
  syntax:
    content: public ServiceDebugBehavior DebugBehavior { get; }
    parameters: []
    return:
      type: CoreWCF.Description.ServiceDebugBehavior
    content.vb: Public ReadOnly Property DebugBehavior As ServiceDebugBehavior
  overload: CoreWCF.Configuration.ServiceOptions.DebugBehavior*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Configuration.ServiceOptions.BaseAddresses
  commentId: P:CoreWCF.Configuration.ServiceOptions.BaseAddresses
  id: BaseAddresses
  parent: CoreWCF.Configuration.ServiceOptions
  langs:
  - csharp
  - vb
  name: BaseAddresses
  nameWithType: ServiceOptions.BaseAddresses
  fullName: CoreWCF.Configuration.ServiceOptions.BaseAddresses
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Configuration
  syntax:
    content: public ICollection<Uri> BaseAddresses { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Uri}
    content.vb: Public ReadOnly Property BaseAddresses As ICollection(Of Uri)
  overload: CoreWCF.Configuration.ServiceOptions.BaseAddresses*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CoreWCF.Configuration
  commentId: N:CoreWCF.Configuration
  isExternal: true
  name: CoreWCF.Configuration
  nameWithType: CoreWCF.Configuration
  fullName: CoreWCF.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Configuration.ServiceOptions.DebugBehavior*
  commentId: Overload:CoreWCF.Configuration.ServiceOptions.DebugBehavior
  isExternal: true
  name: DebugBehavior
  nameWithType: ServiceOptions.DebugBehavior
  fullName: CoreWCF.Configuration.ServiceOptions.DebugBehavior
- uid: CoreWCF.Description.ServiceDebugBehavior
  commentId: T:CoreWCF.Description.ServiceDebugBehavior
  parent: CoreWCF.Description
  isExternal: true
  name: ServiceDebugBehavior
  nameWithType: ServiceDebugBehavior
  fullName: CoreWCF.Description.ServiceDebugBehavior
- uid: CoreWCF.Description
  commentId: N:CoreWCF.Description
  isExternal: true
  name: CoreWCF.Description
  nameWithType: CoreWCF.Description
  fullName: CoreWCF.Description
- uid: CoreWCF.Configuration.ServiceOptions.BaseAddresses*
  commentId: Overload:CoreWCF.Configuration.ServiceOptions.BaseAddresses
  isExternal: true
  name: BaseAddresses
  nameWithType: ServiceOptions.BaseAddresses
  fullName: CoreWCF.Configuration.ServiceOptions.BaseAddresses
- uid: System.Collections.Generic.ICollection{System.Uri}
  commentId: '!:System.Collections.Generic.ICollection{System.Uri}'
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Uri>
  nameWithType: ICollection<Uri>
  fullName: System.Collections.Generic.ICollection<System.Uri>
  nameWithType.vb: ICollection(Of Uri)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Uri)
  name.vb: ICollection(Of Uri)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<>
  nameWithType: ICollection<>
  fullName: System.Collections.Generic.ICollection<>
  nameWithType.vb: ICollection(Of )
  fullName.vb: System.Collections.Generic.ICollection(Of )
  name.vb: ICollection(Of )
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
