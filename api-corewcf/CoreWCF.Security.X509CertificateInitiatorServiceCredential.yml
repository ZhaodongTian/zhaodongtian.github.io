### YamlMime:ManagedReference
items:
- uid: CoreWCF.Security.X509CertificateInitiatorServiceCredential
  commentId: T:CoreWCF.Security.X509CertificateInitiatorServiceCredential
  id: X509CertificateInitiatorServiceCredential
  parent: CoreWCF.Security
  children:
  - CoreWCF.Security.X509CertificateInitiatorServiceCredential.Authentication
  - CoreWCF.Security.X509CertificateInitiatorServiceCredential.Certificate
  - CoreWCF.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  - CoreWCF.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  langs:
  - csharp
  - vb
  name: X509CertificateInitiatorServiceCredential
  nameWithType: X509CertificateInitiatorServiceCredential
  fullName: CoreWCF.Security.X509CertificateInitiatorServiceCredential
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  summary: Represents the settings used by the service to validate the certificate presented by the clients. It also contains a certificate for the service to use for encrypting responses or callbacks for clients when  message security authentication mode is used.
  remarks: "The certificate set in this class is used to encrypt messages to the client only for bindings that are configured with `MutualCertificateDuplex` message security authentication mode.  \n\n"
  syntax:
    content: 'public sealed class X509CertificateInitiatorServiceCredential : Object'
    content.vb: >-
      Public NotInheritable Class X509CertificateInitiatorServiceCredential
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: CoreWCF.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  commentId: M:CoreWCF.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  id: SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: CoreWCF.Security.X509CertificateInitiatorServiceCredential
  langs:
  - csharp
  - vb
  name: SetCertificate(String, StoreLocation, StoreName)
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate(String, StoreLocation, StoreName)
  fullName: CoreWCF.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String, System.Security.Cryptography.X509Certificates.StoreLocation, System.Security.Cryptography.X509Certificates.StoreName)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public void SetCertificate(string subjectName, StoreLocation storeLocation, StoreName storeName)
    parameters:
    - id: subjectName
      type: System.String
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
    content.vb: Public Sub SetCertificate(subjectName As String, storeLocation As StoreLocation, storeName As StoreName)
  overload: CoreWCF.Security.X509CertificateInitiatorServiceCredential.SetCertificate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  commentId: M:CoreWCF.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  id: SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: CoreWCF.Security.X509CertificateInitiatorServiceCredential
  langs:
  - csharp
  - vb
  name: SetCertificate(StoreLocation, StoreName, X509FindType, Object)
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate(StoreLocation, StoreName, X509FindType, Object)
  fullName: CoreWCF.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation, System.Security.Cryptography.X509Certificates.StoreName, System.Security.Cryptography.X509Certificates.X509FindType, System.Object)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public void SetCertificate(StoreLocation storeLocation, StoreName storeName, X509FindType findType, object findValue)
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
    - id: findValue
      type: System.Object
    content.vb: Public Sub SetCertificate(storeLocation As StoreLocation, storeName As StoreName, findType As X509FindType, findValue As Object)
  overload: CoreWCF.Security.X509CertificateInitiatorServiceCredential.SetCertificate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.X509CertificateInitiatorServiceCredential.Certificate
  commentId: P:CoreWCF.Security.X509CertificateInitiatorServiceCredential.Certificate
  id: Certificate
  parent: CoreWCF.Security.X509CertificateInitiatorServiceCredential
  langs:
  - csharp
  - vb
  name: Certificate
  nameWithType: X509CertificateInitiatorServiceCredential.Certificate
  fullName: CoreWCF.Security.X509CertificateInitiatorServiceCredential.Certificate
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public X509Certificate2 Certificate { get; set; }
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
    content.vb: Public Property Certificate As X509Certificate2
  overload: CoreWCF.Security.X509CertificateInitiatorServiceCredential.Certificate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.X509CertificateInitiatorServiceCredential.Authentication
  commentId: P:CoreWCF.Security.X509CertificateInitiatorServiceCredential.Authentication
  id: Authentication
  parent: CoreWCF.Security.X509CertificateInitiatorServiceCredential
  langs:
  - csharp
  - vb
  name: Authentication
  nameWithType: X509CertificateInitiatorServiceCredential.Authentication
  fullName: CoreWCF.Security.X509CertificateInitiatorServiceCredential.Authentication
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public X509ClientCertificateAuthentication Authentication { get; }
    parameters: []
    return:
      type: CoreWCF.Security.X509ClientCertificateAuthentication
    content.vb: Public ReadOnly Property Authentication As X509ClientCertificateAuthentication
  overload: CoreWCF.Security.X509CertificateInitiatorServiceCredential.Authentication*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CoreWCF.Security
  commentId: N:CoreWCF.Security
  isExternal: true
  name: CoreWCF.Security
  nameWithType: CoreWCF.Security
  fullName: CoreWCF.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Security.X509CertificateInitiatorServiceCredential.SetCertificate*
  commentId: Overload:CoreWCF.Security.X509CertificateInitiatorServiceCredential.SetCertificate
  isExternal: true
  name: SetCertificate
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate
  fullName: CoreWCF.Security.X509CertificateInitiatorServiceCredential.SetCertificate
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  isExternal: true
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: System.Security.Cryptography.X509Certificates.StoreName
  isExternal: true
  name: StoreName
  nameWithType: StoreName
  fullName: System.Security.Cryptography.X509Certificates.StoreName
- uid: System.Security.Cryptography.X509Certificates.X509FindType
  isExternal: true
  name: X509FindType
  nameWithType: X509FindType
  fullName: System.Security.Cryptography.X509Certificates.X509FindType
- uid: CoreWCF.Security.X509CertificateInitiatorServiceCredential.Certificate*
  commentId: Overload:CoreWCF.Security.X509CertificateInitiatorServiceCredential.Certificate
  isExternal: true
  name: Certificate
  nameWithType: X509CertificateInitiatorServiceCredential.Certificate
  fullName: CoreWCF.Security.X509CertificateInitiatorServiceCredential.Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: CoreWCF.Security.X509CertificateInitiatorServiceCredential.Authentication*
  commentId: Overload:CoreWCF.Security.X509CertificateInitiatorServiceCredential.Authentication
  isExternal: true
  name: Authentication
  nameWithType: X509CertificateInitiatorServiceCredential.Authentication
  fullName: CoreWCF.Security.X509CertificateInitiatorServiceCredential.Authentication
- uid: CoreWCF.Security.X509ClientCertificateAuthentication
  commentId: T:CoreWCF.Security.X509ClientCertificateAuthentication
  parent: CoreWCF.Security
  isExternal: true
  name: X509ClientCertificateAuthentication
  nameWithType: X509ClientCertificateAuthentication
  fullName: CoreWCF.Security.X509ClientCertificateAuthentication
