### YamlMime:ManagedReference
items:
- uid: CoreWCF.NetTcpSecurity
  commentId: T:CoreWCF.NetTcpSecurity
  id: NetTcpSecurity
  parent: CoreWCF
  children:
  - CoreWCF.NetTcpSecurity.#ctor
  - CoreWCF.NetTcpSecurity.Message
  - CoreWCF.NetTcpSecurity.Mode
  - CoreWCF.NetTcpSecurity.Transport
  langs:
  - csharp
  - vb
  name: NetTcpSecurity
  nameWithType: NetTcpSecurity
  fullName: CoreWCF.NetTcpSecurity
  type: Class
  source:
    path: CoreWCF.NetTcp
    isExternal: true
  assemblies:
  - CoreWCF.NetTcp
  namespace: CoreWCF
  summary: Specifies the types of transport-level and message-level security used by an endpoint configured with a .
  remarks: "Each of the standard bindings provides parameters for controlling the transfer security requirements. These parameters typically include the security mode that specified whether message-level or transport-level security is used and the choice of client credential type. Based on the choice of options these parameters present, a channel stack is constructed with appropriate security.  \n\nThe system-provided bindings supplied by Windows Communication Foundation (WCF) are a set designed to meet some of the most common scenario requirements. Each of these bindings allows the specification of security requirements for some specific targeted scenarios.  \n\n&lt;xref:CoreWCF.NetTcpSecurity> provides the security specifications for &lt;xref:CoreWCF.NetTcpBinding>. This is a secure, reliable, optimized binding suitable for cross-machine communication. By default it generates a run-time communication stack that supports TCP for message delivery and Windows Security for message security and authentication, WS-ReliableMessaging for reliability, and binary message encoding.  \n\nThis class is instantiated by the &lt;xref:CoreWCF.NetTcpBinding>, and can be accessed by a read-only property called &lt;xref:CoreWCF.NetTcpBinding.Security%2A>. Because this property is read-only you cannot make changes to the returned object. If you want to control the creation of the &lt;xref:CoreWCF.NetTcpSecurity> object, you can derive a class from &lt;xref:CoreWCF.NetTcpBinding>.  \n\n\n\n"
  syntax:
    content: 'public sealed class NetTcpSecurity : Object'
    content.vb: >-
      Public NotInheritable Class NetTcpSecurity
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: CoreWCF.NetTcpSecurity.#ctor
  commentId: M:CoreWCF.NetTcpSecurity.#ctor
  id: '#ctor'
  parent: CoreWCF.NetTcpSecurity
  langs:
  - csharp
  - vb
  name: NetTcpSecurity()
  nameWithType: NetTcpSecurity.NetTcpSecurity()
  fullName: CoreWCF.NetTcpSecurity.NetTcpSecurity()
  type: Constructor
  source:
    path: CoreWCF.NetTcp
    isExternal: true
  assemblies:
  - CoreWCF.NetTcp
  namespace: CoreWCF
  syntax:
    content: public NetTcpSecurity()
    content.vb: Public Sub New
  overload: CoreWCF.NetTcpSecurity.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.NetTcpSecurity.Mode
  commentId: P:CoreWCF.NetTcpSecurity.Mode
  id: Mode
  parent: CoreWCF.NetTcpSecurity
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: NetTcpSecurity.Mode
  fullName: CoreWCF.NetTcpSecurity.Mode
  type: Property
  source:
    path: CoreWCF.NetTcp
    isExternal: true
  assemblies:
  - CoreWCF.NetTcp
  namespace: CoreWCF
  syntax:
    content: public SecurityMode Mode { get; set; }
    parameters: []
    return:
      type: CoreWCF.SecurityMode
    content.vb: Public Property Mode As SecurityMode
  overload: CoreWCF.NetTcpSecurity.Mode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.NetTcpSecurity.Transport
  commentId: P:CoreWCF.NetTcpSecurity.Transport
  id: Transport
  parent: CoreWCF.NetTcpSecurity
  langs:
  - csharp
  - vb
  name: Transport
  nameWithType: NetTcpSecurity.Transport
  fullName: CoreWCF.NetTcpSecurity.Transport
  type: Property
  source:
    path: CoreWCF.NetTcp
    isExternal: true
  assemblies:
  - CoreWCF.NetTcp
  namespace: CoreWCF
  syntax:
    content: public TcpTransportSecurity Transport { get; set; }
    parameters: []
    return:
      type: CoreWCF.TcpTransportSecurity
    content.vb: Public Property Transport As TcpTransportSecurity
  overload: CoreWCF.NetTcpSecurity.Transport*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.NetTcpSecurity.Message
  commentId: P:CoreWCF.NetTcpSecurity.Message
  id: Message
  parent: CoreWCF.NetTcpSecurity
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: NetTcpSecurity.Message
  fullName: CoreWCF.NetTcpSecurity.Message
  type: Property
  source:
    path: CoreWCF.NetTcp
    isExternal: true
  assemblies:
  - CoreWCF.NetTcp
  namespace: CoreWCF
  syntax:
    content: public MessageSecurityOverTcp Message { get; set; }
    parameters: []
    return:
      type: CoreWCF.Security.MessageSecurityOverTcp
    content.vb: Public Property Message As MessageSecurityOverTcp
  overload: CoreWCF.NetTcpSecurity.Message*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: CoreWCF
  commentId: N:CoreWCF
  isExternal: true
  name: CoreWCF
  nameWithType: CoreWCF
  fullName: CoreWCF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.NetTcpSecurity.#ctor*
  commentId: Overload:CoreWCF.NetTcpSecurity.#ctor
  isExternal: true
  name: NetTcpSecurity
  nameWithType: NetTcpSecurity.NetTcpSecurity
  fullName: CoreWCF.NetTcpSecurity.NetTcpSecurity
- uid: CoreWCF.NetTcpSecurity.Mode*
  commentId: Overload:CoreWCF.NetTcpSecurity.Mode
  isExternal: true
  name: Mode
  nameWithType: NetTcpSecurity.Mode
  fullName: CoreWCF.NetTcpSecurity.Mode
- uid: CoreWCF.SecurityMode
  commentId: T:CoreWCF.SecurityMode
  parent: CoreWCF
  isExternal: true
  name: SecurityMode
  nameWithType: SecurityMode
  fullName: CoreWCF.SecurityMode
- uid: CoreWCF.NetTcpSecurity.Transport*
  commentId: Overload:CoreWCF.NetTcpSecurity.Transport
  isExternal: true
  name: Transport
  nameWithType: NetTcpSecurity.Transport
  fullName: CoreWCF.NetTcpSecurity.Transport
- uid: CoreWCF.TcpTransportSecurity
  commentId: T:CoreWCF.TcpTransportSecurity
  parent: CoreWCF
  isExternal: true
  name: TcpTransportSecurity
  nameWithType: TcpTransportSecurity
  fullName: CoreWCF.TcpTransportSecurity
- uid: CoreWCF.NetTcpSecurity.Message*
  commentId: Overload:CoreWCF.NetTcpSecurity.Message
  isExternal: true
  name: Message
  nameWithType: NetTcpSecurity.Message
  fullName: CoreWCF.NetTcpSecurity.Message
- uid: CoreWCF.Security.MessageSecurityOverTcp
  commentId: T:CoreWCF.Security.MessageSecurityOverTcp
  parent: CoreWCF.Security
  isExternal: true
  name: MessageSecurityOverTcp
  nameWithType: MessageSecurityOverTcp
  fullName: CoreWCF.Security.MessageSecurityOverTcp
- uid: CoreWCF.Security
  commentId: N:CoreWCF.Security
  isExternal: true
  name: CoreWCF.Security
  nameWithType: CoreWCF.Security
  fullName: CoreWCF.Security
