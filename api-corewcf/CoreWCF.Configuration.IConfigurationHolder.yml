### YamlMime:ManagedReference
items:
- uid: CoreWCF.Configuration.IConfigurationHolder
  commentId: T:CoreWCF.Configuration.IConfigurationHolder
  id: IConfigurationHolder
  parent: CoreWCF.Configuration
  children:
  - CoreWCF.Configuration.IConfigurationHolder.AddBinding(CoreWCF.Channels.Binding)
  - CoreWCF.Configuration.IConfigurationHolder.AddServiceEndpoint(System.String,System.String,System.Uri,System.String,System.String,System.String)
  - CoreWCF.Configuration.IConfigurationHolder.Endpoints
  - CoreWCF.Configuration.IConfigurationHolder.GetXmlConfigEndpoint(CoreWCF.Configuration.ServiceEndpoint)
  - CoreWCF.Configuration.IConfigurationHolder.ResolveBinding(System.String,System.String)
  langs:
  - csharp
  - vb
  name: IConfigurationHolder
  nameWithType: IConfigurationHolder
  fullName: CoreWCF.Configuration.IConfigurationHolder
  type: Interface
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public interface IConfigurationHolder
    content.vb: Public Interface IConfigurationHolder
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: CoreWCF.Configuration.IConfigurationHolder.AddBinding(CoreWCF.Channels.Binding)
  commentId: M:CoreWCF.Configuration.IConfigurationHolder.AddBinding(CoreWCF.Channels.Binding)
  id: AddBinding(CoreWCF.Channels.Binding)
  parent: CoreWCF.Configuration.IConfigurationHolder
  langs:
  - csharp
  - vb
  name: AddBinding(Binding)
  nameWithType: IConfigurationHolder.AddBinding(Binding)
  fullName: CoreWCF.Configuration.IConfigurationHolder.AddBinding(CoreWCF.Channels.Binding)
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: void AddBinding(Binding binding)
    parameters:
    - id: binding
      type: CoreWCF.Channels.Binding
    content.vb: Sub AddBinding(binding As Binding)
  overload: CoreWCF.Configuration.IConfigurationHolder.AddBinding*
- uid: CoreWCF.Configuration.IConfigurationHolder.AddServiceEndpoint(System.String,System.String,System.Uri,System.String,System.String,System.String)
  commentId: M:CoreWCF.Configuration.IConfigurationHolder.AddServiceEndpoint(System.String,System.String,System.Uri,System.String,System.String,System.String)
  id: AddServiceEndpoint(System.String,System.String,System.Uri,System.String,System.String,System.String)
  parent: CoreWCF.Configuration.IConfigurationHolder
  langs:
  - csharp
  - vb
  name: AddServiceEndpoint(String, String, Uri, String, String, String)
  nameWithType: IConfigurationHolder.AddServiceEndpoint(String, String, Uri, String, String, String)
  fullName: CoreWCF.Configuration.IConfigurationHolder.AddServiceEndpoint(System.String, System.String, System.Uri, System.String, System.String, System.String)
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: void AddServiceEndpoint(string name, string serviceName, Uri address, string contract, string bindingType, string bindingName)
    parameters:
    - id: name
      type: System.String
    - id: serviceName
      type: System.String
    - id: address
      type: System.Uri
    - id: contract
      type: System.String
    - id: bindingType
      type: System.String
    - id: bindingName
      type: System.String
    content.vb: Sub AddServiceEndpoint(name As String, serviceName As String, address As Uri, contract As String, bindingType As String, bindingName As String)
  overload: CoreWCF.Configuration.IConfigurationHolder.AddServiceEndpoint*
- uid: CoreWCF.Configuration.IConfigurationHolder.ResolveBinding(System.String,System.String)
  commentId: M:CoreWCF.Configuration.IConfigurationHolder.ResolveBinding(System.String,System.String)
  id: ResolveBinding(System.String,System.String)
  parent: CoreWCF.Configuration.IConfigurationHolder
  langs:
  - csharp
  - vb
  name: ResolveBinding(String, String)
  nameWithType: IConfigurationHolder.ResolveBinding(String, String)
  fullName: CoreWCF.Configuration.IConfigurationHolder.ResolveBinding(System.String, System.String)
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: Binding ResolveBinding(string bindingType, string name)
    parameters:
    - id: bindingType
      type: System.String
    - id: name
      type: System.String
    return:
      type: CoreWCF.Channels.Binding
    content.vb: Function ResolveBinding(bindingType As String, name As String) As Binding
  overload: CoreWCF.Configuration.IConfigurationHolder.ResolveBinding*
- uid: CoreWCF.Configuration.IConfigurationHolder.GetXmlConfigEndpoint(CoreWCF.Configuration.ServiceEndpoint)
  commentId: M:CoreWCF.Configuration.IConfigurationHolder.GetXmlConfigEndpoint(CoreWCF.Configuration.ServiceEndpoint)
  id: GetXmlConfigEndpoint(CoreWCF.Configuration.ServiceEndpoint)
  parent: CoreWCF.Configuration.IConfigurationHolder
  langs:
  - csharp
  - vb
  name: GetXmlConfigEndpoint(ServiceEndpoint)
  nameWithType: IConfigurationHolder.GetXmlConfigEndpoint(ServiceEndpoint)
  fullName: CoreWCF.Configuration.IConfigurationHolder.GetXmlConfigEndpoint(CoreWCF.Configuration.ServiceEndpoint)
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: IXmlConfigEndpoint GetXmlConfigEndpoint(ServiceEndpoint endPoint)
    parameters:
    - id: endPoint
      type: CoreWCF.Configuration.ServiceEndpoint
    return:
      type: CoreWCF.Configuration.IXmlConfigEndpoint
    content.vb: Function GetXmlConfigEndpoint(endPoint As ServiceEndpoint) As IXmlConfigEndpoint
  overload: CoreWCF.Configuration.IConfigurationHolder.GetXmlConfigEndpoint*
- uid: CoreWCF.Configuration.IConfigurationHolder.Endpoints
  commentId: P:CoreWCF.Configuration.IConfigurationHolder.Endpoints
  id: Endpoints
  parent: CoreWCF.Configuration.IConfigurationHolder
  langs:
  - csharp
  - vb
  name: Endpoints
  nameWithType: IConfigurationHolder.Endpoints
  fullName: CoreWCF.Configuration.IConfigurationHolder.Endpoints
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: ISet<ServiceEndpoint> Endpoints { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ISet{CoreWCF.Configuration.ServiceEndpoint}
    content.vb: ReadOnly Property Endpoints As ISet(Of ServiceEndpoint)
  overload: CoreWCF.Configuration.IConfigurationHolder.Endpoints*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: CoreWCF.Configuration
  commentId: N:CoreWCF.Configuration
  isExternal: true
  name: CoreWCF.Configuration
  nameWithType: CoreWCF.Configuration
  fullName: CoreWCF.Configuration
- uid: CoreWCF.Configuration.IConfigurationHolder.AddBinding*
  commentId: Overload:CoreWCF.Configuration.IConfigurationHolder.AddBinding
  isExternal: true
  name: AddBinding
  nameWithType: IConfigurationHolder.AddBinding
  fullName: CoreWCF.Configuration.IConfigurationHolder.AddBinding
- uid: CoreWCF.Channels.Binding
  commentId: T:CoreWCF.Channels.Binding
  parent: CoreWCF.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: CoreWCF.Channels.Binding
- uid: CoreWCF.Channels
  commentId: N:CoreWCF.Channels
  isExternal: true
  name: CoreWCF.Channels
  nameWithType: CoreWCF.Channels
  fullName: CoreWCF.Channels
- uid: CoreWCF.Configuration.IConfigurationHolder.AddServiceEndpoint*
  commentId: Overload:CoreWCF.Configuration.IConfigurationHolder.AddServiceEndpoint
  isExternal: true
  name: AddServiceEndpoint
  nameWithType: IConfigurationHolder.AddServiceEndpoint
  fullName: CoreWCF.Configuration.IConfigurationHolder.AddServiceEndpoint
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Configuration.IConfigurationHolder.ResolveBinding*
  commentId: Overload:CoreWCF.Configuration.IConfigurationHolder.ResolveBinding
  isExternal: true
  name: ResolveBinding
  nameWithType: IConfigurationHolder.ResolveBinding
  fullName: CoreWCF.Configuration.IConfigurationHolder.ResolveBinding
- uid: CoreWCF.Configuration.IConfigurationHolder.GetXmlConfigEndpoint*
  commentId: Overload:CoreWCF.Configuration.IConfigurationHolder.GetXmlConfigEndpoint
  isExternal: true
  name: GetXmlConfigEndpoint
  nameWithType: IConfigurationHolder.GetXmlConfigEndpoint
  fullName: CoreWCF.Configuration.IConfigurationHolder.GetXmlConfigEndpoint
- uid: CoreWCF.Configuration.ServiceEndpoint
  commentId: T:CoreWCF.Configuration.ServiceEndpoint
  parent: CoreWCF.Configuration
  isExternal: true
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: CoreWCF.Configuration.ServiceEndpoint
- uid: CoreWCF.Configuration.IXmlConfigEndpoint
  commentId: T:CoreWCF.Configuration.IXmlConfigEndpoint
  parent: CoreWCF.Configuration
  isExternal: true
  name: IXmlConfigEndpoint
  nameWithType: IXmlConfigEndpoint
  fullName: CoreWCF.Configuration.IXmlConfigEndpoint
- uid: CoreWCF.Configuration.IConfigurationHolder.Endpoints*
  commentId: Overload:CoreWCF.Configuration.IConfigurationHolder.Endpoints
  isExternal: true
  name: Endpoints
  nameWithType: IConfigurationHolder.Endpoints
  fullName: CoreWCF.Configuration.IConfigurationHolder.Endpoints
- uid: System.Collections.Generic.ISet{CoreWCF.Configuration.ServiceEndpoint}
  commentId: '!:System.Collections.Generic.ISet{CoreWCF.Configuration.ServiceEndpoint}'
  definition: System.Collections.Generic.ISet`1
  name: ISet<ServiceEndpoint>
  nameWithType: ISet<ServiceEndpoint>
  fullName: System.Collections.Generic.ISet<CoreWCF.Configuration.ServiceEndpoint>
  nameWithType.vb: ISet(Of ServiceEndpoint)
  fullName.vb: System.Collections.Generic.ISet(Of CoreWCF.Configuration.ServiceEndpoint)
  name.vb: ISet(Of ServiceEndpoint)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.Configuration.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: CoreWCF.Configuration.ServiceEndpoint
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.Configuration.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: CoreWCF.Configuration.ServiceEndpoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ISet`1
  commentId: '!:System.Collections.Generic.ISet`1'
  isExternal: true
  name: ISet<>
  nameWithType: ISet<>
  fullName: System.Collections.Generic.ISet<>
  nameWithType.vb: ISet(Of )
  fullName.vb: System.Collections.Generic.ISet(Of )
  name.vb: ISet(Of )
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
