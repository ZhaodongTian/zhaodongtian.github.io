### YamlMime:ManagedReference
items:
- uid: CoreWCF.Security.ChannelProtectionRequirements
  commentId: T:CoreWCF.Security.ChannelProtectionRequirements
  id: ChannelProtectionRequirements
  parent: CoreWCF.Security
  children:
  - CoreWCF.Security.ChannelProtectionRequirements.#ctor
  - CoreWCF.Security.ChannelProtectionRequirements.#ctor(CoreWCF.Security.ChannelProtectionRequirements)
  - CoreWCF.Security.ChannelProtectionRequirements.Add(CoreWCF.Security.ChannelProtectionRequirements)
  - CoreWCF.Security.ChannelProtectionRequirements.Add(CoreWCF.Security.ChannelProtectionRequirements,System.Boolean)
  - CoreWCF.Security.ChannelProtectionRequirements.IncomingEncryptionParts
  - CoreWCF.Security.ChannelProtectionRequirements.IncomingSignatureParts
  - CoreWCF.Security.ChannelProtectionRequirements.IsReadOnly
  - CoreWCF.Security.ChannelProtectionRequirements.MakeReadOnly
  - CoreWCF.Security.ChannelProtectionRequirements.OutgoingEncryptionParts
  - CoreWCF.Security.ChannelProtectionRequirements.OutgoingSignatureParts
  langs:
  - csharp
  - vb
  name: ChannelProtectionRequirements
  nameWithType: ChannelProtectionRequirements
  fullName: CoreWCF.Security.ChannelProtectionRequirements
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  summary: Describes encryption and signature requirements that apply to different parts of messages that are transmitted on this channel.
  remarks: "When extending the &lt;xref:CoreWCF.Channels.BindingElement> class, you must implement the &lt;xref:CoreWCF.Channels.BindingElement.GetProperty%60%601%28CoreWCF.Channels.BindingContext%29> so that it returns an instance of this class corresponding to the binding element.  \n\n"
  syntax:
    content: 'public class ChannelProtectionRequirements : Object'
    content.vb: >-
      Public Class ChannelProtectionRequirements
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.Security.ChannelProtectionRequirements.#ctor
  commentId: M:CoreWCF.Security.ChannelProtectionRequirements.#ctor
  id: '#ctor'
  parent: CoreWCF.Security.ChannelProtectionRequirements
  langs:
  - csharp
  - vb
  name: ChannelProtectionRequirements()
  nameWithType: ChannelProtectionRequirements.ChannelProtectionRequirements()
  fullName: CoreWCF.Security.ChannelProtectionRequirements.ChannelProtectionRequirements()
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public ChannelProtectionRequirements()
    content.vb: Public Sub New
  overload: CoreWCF.Security.ChannelProtectionRequirements.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.ChannelProtectionRequirements.#ctor(CoreWCF.Security.ChannelProtectionRequirements)
  commentId: M:CoreWCF.Security.ChannelProtectionRequirements.#ctor(CoreWCF.Security.ChannelProtectionRequirements)
  id: '#ctor(CoreWCF.Security.ChannelProtectionRequirements)'
  parent: CoreWCF.Security.ChannelProtectionRequirements
  langs:
  - csharp
  - vb
  name: ChannelProtectionRequirements(ChannelProtectionRequirements)
  nameWithType: ChannelProtectionRequirements.ChannelProtectionRequirements(ChannelProtectionRequirements)
  fullName: CoreWCF.Security.ChannelProtectionRequirements.ChannelProtectionRequirements(CoreWCF.Security.ChannelProtectionRequirements)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public ChannelProtectionRequirements(ChannelProtectionRequirements other)
    parameters:
    - id: other
      type: CoreWCF.Security.ChannelProtectionRequirements
    content.vb: Public Sub New(other As ChannelProtectionRequirements)
  overload: CoreWCF.Security.ChannelProtectionRequirements.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.ChannelProtectionRequirements.Add(CoreWCF.Security.ChannelProtectionRequirements)
  commentId: M:CoreWCF.Security.ChannelProtectionRequirements.Add(CoreWCF.Security.ChannelProtectionRequirements)
  id: Add(CoreWCF.Security.ChannelProtectionRequirements)
  parent: CoreWCF.Security.ChannelProtectionRequirements
  langs:
  - csharp
  - vb
  name: Add(ChannelProtectionRequirements)
  nameWithType: ChannelProtectionRequirements.Add(ChannelProtectionRequirements)
  fullName: CoreWCF.Security.ChannelProtectionRequirements.Add(CoreWCF.Security.ChannelProtectionRequirements)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public void Add(ChannelProtectionRequirements protectionRequirements)
    parameters:
    - id: protectionRequirements
      type: CoreWCF.Security.ChannelProtectionRequirements
    content.vb: Public Sub Add(protectionRequirements As ChannelProtectionRequirements)
  overload: CoreWCF.Security.ChannelProtectionRequirements.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.ChannelProtectionRequirements.Add(CoreWCF.Security.ChannelProtectionRequirements,System.Boolean)
  commentId: M:CoreWCF.Security.ChannelProtectionRequirements.Add(CoreWCF.Security.ChannelProtectionRequirements,System.Boolean)
  id: Add(CoreWCF.Security.ChannelProtectionRequirements,System.Boolean)
  parent: CoreWCF.Security.ChannelProtectionRequirements
  langs:
  - csharp
  - vb
  name: Add(ChannelProtectionRequirements, Boolean)
  nameWithType: ChannelProtectionRequirements.Add(ChannelProtectionRequirements, Boolean)
  fullName: CoreWCF.Security.ChannelProtectionRequirements.Add(CoreWCF.Security.ChannelProtectionRequirements, System.Boolean)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public void Add(ChannelProtectionRequirements protectionRequirements, bool channelScopeOnly)
    parameters:
    - id: protectionRequirements
      type: CoreWCF.Security.ChannelProtectionRequirements
    - id: channelScopeOnly
      type: System.Boolean
    content.vb: Public Sub Add(protectionRequirements As ChannelProtectionRequirements, channelScopeOnly As Boolean)
  overload: CoreWCF.Security.ChannelProtectionRequirements.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.ChannelProtectionRequirements.MakeReadOnly
  commentId: M:CoreWCF.Security.ChannelProtectionRequirements.MakeReadOnly
  id: MakeReadOnly
  parent: CoreWCF.Security.ChannelProtectionRequirements
  langs:
  - csharp
  - vb
  name: MakeReadOnly()
  nameWithType: ChannelProtectionRequirements.MakeReadOnly()
  fullName: CoreWCF.Security.ChannelProtectionRequirements.MakeReadOnly()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public void MakeReadOnly()
    content.vb: Public Sub MakeReadOnly
  overload: CoreWCF.Security.ChannelProtectionRequirements.MakeReadOnly*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.ChannelProtectionRequirements.IsReadOnly
  commentId: P:CoreWCF.Security.ChannelProtectionRequirements.IsReadOnly
  id: IsReadOnly
  parent: CoreWCF.Security.ChannelProtectionRequirements
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: ChannelProtectionRequirements.IsReadOnly
  fullName: CoreWCF.Security.ChannelProtectionRequirements.IsReadOnly
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: CoreWCF.Security.ChannelProtectionRequirements.IsReadOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.ChannelProtectionRequirements.IncomingSignatureParts
  commentId: P:CoreWCF.Security.ChannelProtectionRequirements.IncomingSignatureParts
  id: IncomingSignatureParts
  parent: CoreWCF.Security.ChannelProtectionRequirements
  langs:
  - csharp
  - vb
  name: IncomingSignatureParts
  nameWithType: ChannelProtectionRequirements.IncomingSignatureParts
  fullName: CoreWCF.Security.ChannelProtectionRequirements.IncomingSignatureParts
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public ScopedMessagePartSpecification IncomingSignatureParts { get; }
    parameters: []
    return:
      type: CoreWCF.Security.ScopedMessagePartSpecification
    content.vb: Public ReadOnly Property IncomingSignatureParts As ScopedMessagePartSpecification
  overload: CoreWCF.Security.ChannelProtectionRequirements.IncomingSignatureParts*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.ChannelProtectionRequirements.IncomingEncryptionParts
  commentId: P:CoreWCF.Security.ChannelProtectionRequirements.IncomingEncryptionParts
  id: IncomingEncryptionParts
  parent: CoreWCF.Security.ChannelProtectionRequirements
  langs:
  - csharp
  - vb
  name: IncomingEncryptionParts
  nameWithType: ChannelProtectionRequirements.IncomingEncryptionParts
  fullName: CoreWCF.Security.ChannelProtectionRequirements.IncomingEncryptionParts
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public ScopedMessagePartSpecification IncomingEncryptionParts { get; }
    parameters: []
    return:
      type: CoreWCF.Security.ScopedMessagePartSpecification
    content.vb: Public ReadOnly Property IncomingEncryptionParts As ScopedMessagePartSpecification
  overload: CoreWCF.Security.ChannelProtectionRequirements.IncomingEncryptionParts*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.ChannelProtectionRequirements.OutgoingSignatureParts
  commentId: P:CoreWCF.Security.ChannelProtectionRequirements.OutgoingSignatureParts
  id: OutgoingSignatureParts
  parent: CoreWCF.Security.ChannelProtectionRequirements
  langs:
  - csharp
  - vb
  name: OutgoingSignatureParts
  nameWithType: ChannelProtectionRequirements.OutgoingSignatureParts
  fullName: CoreWCF.Security.ChannelProtectionRequirements.OutgoingSignatureParts
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public ScopedMessagePartSpecification OutgoingSignatureParts { get; }
    parameters: []
    return:
      type: CoreWCF.Security.ScopedMessagePartSpecification
    content.vb: Public ReadOnly Property OutgoingSignatureParts As ScopedMessagePartSpecification
  overload: CoreWCF.Security.ChannelProtectionRequirements.OutgoingSignatureParts*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.ChannelProtectionRequirements.OutgoingEncryptionParts
  commentId: P:CoreWCF.Security.ChannelProtectionRequirements.OutgoingEncryptionParts
  id: OutgoingEncryptionParts
  parent: CoreWCF.Security.ChannelProtectionRequirements
  langs:
  - csharp
  - vb
  name: OutgoingEncryptionParts
  nameWithType: ChannelProtectionRequirements.OutgoingEncryptionParts
  fullName: CoreWCF.Security.ChannelProtectionRequirements.OutgoingEncryptionParts
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public ScopedMessagePartSpecification OutgoingEncryptionParts { get; }
    parameters: []
    return:
      type: CoreWCF.Security.ScopedMessagePartSpecification
    content.vb: Public ReadOnly Property OutgoingEncryptionParts As ScopedMessagePartSpecification
  overload: CoreWCF.Security.ChannelProtectionRequirements.OutgoingEncryptionParts*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CoreWCF.Security
  commentId: N:CoreWCF.Security
  isExternal: true
  name: CoreWCF.Security
  nameWithType: CoreWCF.Security
  fullName: CoreWCF.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Security.ChannelProtectionRequirements.#ctor*
  commentId: Overload:CoreWCF.Security.ChannelProtectionRequirements.#ctor
  isExternal: true
  name: ChannelProtectionRequirements
  nameWithType: ChannelProtectionRequirements.ChannelProtectionRequirements
  fullName: CoreWCF.Security.ChannelProtectionRequirements.ChannelProtectionRequirements
- uid: CoreWCF.Security.ChannelProtectionRequirements
  commentId: T:CoreWCF.Security.ChannelProtectionRequirements
  parent: CoreWCF.Security
  isExternal: true
  name: ChannelProtectionRequirements
  nameWithType: ChannelProtectionRequirements
  fullName: CoreWCF.Security.ChannelProtectionRequirements
- uid: CoreWCF.Security.ChannelProtectionRequirements.Add*
  commentId: Overload:CoreWCF.Security.ChannelProtectionRequirements.Add
  isExternal: true
  name: Add
  nameWithType: ChannelProtectionRequirements.Add
  fullName: CoreWCF.Security.ChannelProtectionRequirements.Add
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.Security.ChannelProtectionRequirements.MakeReadOnly*
  commentId: Overload:CoreWCF.Security.ChannelProtectionRequirements.MakeReadOnly
  isExternal: true
  name: MakeReadOnly
  nameWithType: ChannelProtectionRequirements.MakeReadOnly
  fullName: CoreWCF.Security.ChannelProtectionRequirements.MakeReadOnly
- uid: CoreWCF.Security.ChannelProtectionRequirements.IsReadOnly*
  commentId: Overload:CoreWCF.Security.ChannelProtectionRequirements.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ChannelProtectionRequirements.IsReadOnly
  fullName: CoreWCF.Security.ChannelProtectionRequirements.IsReadOnly
- uid: CoreWCF.Security.ChannelProtectionRequirements.IncomingSignatureParts*
  commentId: Overload:CoreWCF.Security.ChannelProtectionRequirements.IncomingSignatureParts
  isExternal: true
  name: IncomingSignatureParts
  nameWithType: ChannelProtectionRequirements.IncomingSignatureParts
  fullName: CoreWCF.Security.ChannelProtectionRequirements.IncomingSignatureParts
- uid: CoreWCF.Security.ScopedMessagePartSpecification
  commentId: T:CoreWCF.Security.ScopedMessagePartSpecification
  parent: CoreWCF.Security
  isExternal: true
  name: ScopedMessagePartSpecification
  nameWithType: ScopedMessagePartSpecification
  fullName: CoreWCF.Security.ScopedMessagePartSpecification
- uid: CoreWCF.Security.ChannelProtectionRequirements.IncomingEncryptionParts*
  commentId: Overload:CoreWCF.Security.ChannelProtectionRequirements.IncomingEncryptionParts
  isExternal: true
  name: IncomingEncryptionParts
  nameWithType: ChannelProtectionRequirements.IncomingEncryptionParts
  fullName: CoreWCF.Security.ChannelProtectionRequirements.IncomingEncryptionParts
- uid: CoreWCF.Security.ChannelProtectionRequirements.OutgoingSignatureParts*
  commentId: Overload:CoreWCF.Security.ChannelProtectionRequirements.OutgoingSignatureParts
  isExternal: true
  name: OutgoingSignatureParts
  nameWithType: ChannelProtectionRequirements.OutgoingSignatureParts
  fullName: CoreWCF.Security.ChannelProtectionRequirements.OutgoingSignatureParts
- uid: CoreWCF.Security.ChannelProtectionRequirements.OutgoingEncryptionParts*
  commentId: Overload:CoreWCF.Security.ChannelProtectionRequirements.OutgoingEncryptionParts
  isExternal: true
  name: OutgoingEncryptionParts
  nameWithType: ChannelProtectionRequirements.OutgoingEncryptionParts
  fullName: CoreWCF.Security.ChannelProtectionRequirements.OutgoingEncryptionParts
