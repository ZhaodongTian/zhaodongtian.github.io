### YamlMime:ManagedReference
items:
- uid: CoreWCF.Web.IncomingWebRequestContext
  commentId: T:CoreWCF.Web.IncomingWebRequestContext
  id: IncomingWebRequestContext
  parent: CoreWCF.Web
  children:
  - CoreWCF.Web.IncomingWebRequestContext.Accept
  - CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.DateTime)
  - CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.Guid)
  - CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.Int32)
  - CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.Int64)
  - CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.String)
  - CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.Guid)
  - CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.Int32)
  - CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.Int64)
  - CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.String)
  - CoreWCF.Web.IncomingWebRequestContext.ContentLength
  - CoreWCF.Web.IncomingWebRequestContext.ContentType
  - CoreWCF.Web.IncomingWebRequestContext.GetAcceptHeaderElements
  - CoreWCF.Web.IncomingWebRequestContext.Headers
  - CoreWCF.Web.IncomingWebRequestContext.IfMatch
  - CoreWCF.Web.IncomingWebRequestContext.IfModifiedSince
  - CoreWCF.Web.IncomingWebRequestContext.IfNoneMatch
  - CoreWCF.Web.IncomingWebRequestContext.IfUnmodifiedSince
  - CoreWCF.Web.IncomingWebRequestContext.Method
  - CoreWCF.Web.IncomingWebRequestContext.UriTemplateMatch
  - CoreWCF.Web.IncomingWebRequestContext.UserAgent
  langs:
  - csharp
  - vb
  name: IncomingWebRequestContext
  nameWithType: IncomingWebRequestContext
  fullName: CoreWCF.Web.IncomingWebRequestContext
  type: Class
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Web
  summary: Provides programmatic access to the context of the incoming Web request.
  remarks: To be added.
  syntax:
    content: 'public class IncomingWebRequestContext : Object'
    content.vb: >-
      Public Class IncomingWebRequestContext
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.String)
  commentId: M:CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.String)
  summary: Called when a conditional receive request is made for a resource
  id: CheckConditionalRetrieve(System.String)
  parent: CoreWCF.Web.IncomingWebRequestContext
  langs:
  - csharp
  - vb
  name: CheckConditionalRetrieve(String)
  nameWithType: IncomingWebRequestContext.CheckConditionalRetrieve(String)
  fullName: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.String)
  type: Method
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Web
  syntax:
    content: public void CheckConditionalRetrieve(string entityTag)
    parameters:
    - id: entityTag
      type: System.String
      description: The entity tag.
    content.vb: Public Sub CheckConditionalRetrieve(entityTag As String)
  overload: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.Int32)
  commentId: M:CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.Int32)
  summary: Called when a conditional receive request is made for a resource
  id: CheckConditionalRetrieve(System.Int32)
  parent: CoreWCF.Web.IncomingWebRequestContext
  langs:
  - csharp
  - vb
  name: CheckConditionalRetrieve(Int32)
  nameWithType: IncomingWebRequestContext.CheckConditionalRetrieve(Int32)
  fullName: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.Int32)
  type: Method
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Web
  syntax:
    content: public void CheckConditionalRetrieve(int entityTag)
    parameters:
    - id: entityTag
      type: System.Int32
      description: An entity tag.
    content.vb: Public Sub CheckConditionalRetrieve(entityTag As Integer)
  overload: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.Int64)
  commentId: M:CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.Int64)
  summary: Called when a conditional receive request is made for a resource
  id: CheckConditionalRetrieve(System.Int64)
  parent: CoreWCF.Web.IncomingWebRequestContext
  langs:
  - csharp
  - vb
  name: CheckConditionalRetrieve(Int64)
  nameWithType: IncomingWebRequestContext.CheckConditionalRetrieve(Int64)
  fullName: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.Int64)
  type: Method
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Web
  syntax:
    content: public void CheckConditionalRetrieve(long entityTag)
    parameters:
    - id: entityTag
      type: System.Int64
      description: The entity tag.
    content.vb: Public Sub CheckConditionalRetrieve(entityTag As Long)
  overload: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.Guid)
  commentId: M:CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.Guid)
  summary: Called when a conditional receive request is made for a resource
  id: CheckConditionalRetrieve(System.Guid)
  parent: CoreWCF.Web.IncomingWebRequestContext
  langs:
  - csharp
  - vb
  name: CheckConditionalRetrieve(Guid)
  nameWithType: IncomingWebRequestContext.CheckConditionalRetrieve(Guid)
  fullName: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.Guid)
  type: Method
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Web
  syntax:
    content: public void CheckConditionalRetrieve(Guid entityTag)
    parameters:
    - id: entityTag
      type: System.Guid
      description: An entity tag
    content.vb: Public Sub CheckConditionalRetrieve(entityTag As Guid)
  overload: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.DateTime)
  commentId: M:CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.DateTime)
  summary: Called when a conditional receive request is made for a resource
  id: CheckConditionalRetrieve(System.DateTime)
  parent: CoreWCF.Web.IncomingWebRequestContext
  langs:
  - csharp
  - vb
  name: CheckConditionalRetrieve(DateTime)
  nameWithType: IncomingWebRequestContext.CheckConditionalRetrieve(DateTime)
  fullName: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve(System.DateTime)
  type: Method
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Web
  syntax:
    content: public void CheckConditionalRetrieve(DateTime lastModified)
    parameters:
    - id: lastModified
      type: System.DateTime
      description: The time at which the resource was last modified.
    content.vb: Public Sub CheckConditionalRetrieve(lastModified As DateTime)
  overload: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.String)
  commentId: M:CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.String)
  summary: Called when a conditional update request is made for a resource.
  id: CheckConditionalUpdate(System.String)
  parent: CoreWCF.Web.IncomingWebRequestContext
  langs:
  - csharp
  - vb
  name: CheckConditionalUpdate(String)
  nameWithType: IncomingWebRequestContext.CheckConditionalUpdate(String)
  fullName: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.String)
  type: Method
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Web
  syntax:
    content: public void CheckConditionalUpdate(string entityTag)
    parameters:
    - id: entityTag
      type: System.String
      description: The entity tag
    content.vb: Public Sub CheckConditionalUpdate(entityTag As String)
  overload: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.Int32)
  commentId: M:CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.Int32)
  summary: Called when a conditional update request is made for a resource
  id: CheckConditionalUpdate(System.Int32)
  parent: CoreWCF.Web.IncomingWebRequestContext
  langs:
  - csharp
  - vb
  name: CheckConditionalUpdate(Int32)
  nameWithType: IncomingWebRequestContext.CheckConditionalUpdate(Int32)
  fullName: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.Int32)
  type: Method
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Web
  syntax:
    content: public void CheckConditionalUpdate(int entityTag)
    parameters:
    - id: entityTag
      type: System.Int32
      description: The entity tag
    content.vb: Public Sub CheckConditionalUpdate(entityTag As Integer)
  overload: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.Int64)
  commentId: M:CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.Int64)
  summary: Called when a conditional update request is made for a resource
  id: CheckConditionalUpdate(System.Int64)
  parent: CoreWCF.Web.IncomingWebRequestContext
  langs:
  - csharp
  - vb
  name: CheckConditionalUpdate(Int64)
  nameWithType: IncomingWebRequestContext.CheckConditionalUpdate(Int64)
  fullName: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.Int64)
  type: Method
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Web
  syntax:
    content: public void CheckConditionalUpdate(long entityTag)
    parameters:
    - id: entityTag
      type: System.Int64
      description: The entity tag
    content.vb: Public Sub CheckConditionalUpdate(entityTag As Long)
  overload: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.Guid)
  commentId: M:CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.Guid)
  summary: Called when a conditional receive request is made for a resource
  id: CheckConditionalUpdate(System.Guid)
  parent: CoreWCF.Web.IncomingWebRequestContext
  langs:
  - csharp
  - vb
  name: CheckConditionalUpdate(Guid)
  nameWithType: IncomingWebRequestContext.CheckConditionalUpdate(Guid)
  fullName: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate(System.Guid)
  type: Method
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Web
  syntax:
    content: public void CheckConditionalUpdate(Guid entityTag)
    parameters:
    - id: entityTag
      type: System.Guid
      description: The entity tag
    content.vb: Public Sub CheckConditionalUpdate(entityTag As Guid)
  overload: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Web.IncomingWebRequestContext.GetAcceptHeaderElements
  commentId: M:CoreWCF.Web.IncomingWebRequestContext.GetAcceptHeaderElements
  summary: Gets a collection of the Accept header elements
  id: GetAcceptHeaderElements
  parent: CoreWCF.Web.IncomingWebRequestContext
  langs:
  - csharp
  - vb
  name: GetAcceptHeaderElements()
  nameWithType: IncomingWebRequestContext.GetAcceptHeaderElements()
  fullName: CoreWCF.Web.IncomingWebRequestContext.GetAcceptHeaderElements()
  type: Method
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Web
  syntax:
    content: public Collection<ContentType> GetAcceptHeaderElements()
    return:
      type: System.Collections.ObjectModel.Collection{System.Net.Mime.ContentType}
      description: A collection of the Accept header elements.
    content.vb: Public Function GetAcceptHeaderElements As Collection(Of ContentType)
  overload: CoreWCF.Web.IncomingWebRequestContext.GetAcceptHeaderElements*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Web.IncomingWebRequestContext.Accept
  commentId: P:CoreWCF.Web.IncomingWebRequestContext.Accept
  summary: Gets the Accept header value from the incoming Web request
  id: Accept
  parent: CoreWCF.Web.IncomingWebRequestContext
  langs:
  - csharp
  - vb
  name: Accept
  nameWithType: IncomingWebRequestContext.Accept
  fullName: CoreWCF.Web.IncomingWebRequestContext.Accept
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Web
  syntax:
    content: public string Accept { get; }
    parameters: []
    return:
      type: System.String
      description: The Accept header from the incoming Web request.
    content.vb: Public ReadOnly Property Accept As String
  overload: CoreWCF.Web.IncomingWebRequestContext.Accept*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Web.IncomingWebRequestContext.ContentLength
  commentId: P:CoreWCF.Web.IncomingWebRequestContext.ContentLength
  description: Gets the ContentLength header value of the incoming Web request
  id: ContentLength
  parent: CoreWCF.Web.IncomingWebRequestContext
  langs:
  - csharp
  - vb
  name: ContentLength
  nameWithType: IncomingWebRequestContext.ContentLength
  fullName: CoreWCF.Web.IncomingWebRequestContext.ContentLength
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Web
  syntax:
    content: public long ContentLength { get; }
    parameters: []
    return:
      type: System.Int64
      description: The ContentLength header of the incoming Web request.
    content.vb: Public ReadOnly Property ContentLength As Long
  overload: CoreWCF.Web.IncomingWebRequestContext.ContentLength*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Web.IncomingWebRequestContext.ContentType
  commentId: P:CoreWCF.Web.IncomingWebRequestContext.ContentType
  summary: Gets the ContentType header value from the incoming Web request.
  id: ContentType
  parent: CoreWCF.Web.IncomingWebRequestContext
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: IncomingWebRequestContext.ContentType
  fullName: CoreWCF.Web.IncomingWebRequestContext.ContentType
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Web
  syntax:
    content: public string ContentType { get; }
    parameters: []
    return:
      type: System.String
      description: The ContentType header from the incoming Web request.
    content.vb: Public ReadOnly Property ContentType As String
  overload: CoreWCF.Web.IncomingWebRequestContext.ContentType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Web.IncomingWebRequestContext.IfMatch
  commentId: P:CoreWCF.Web.IncomingWebRequestContext.IfMatch
  summary: Gets a collection of the items contained in the requests If-Match header
  id: IfMatch
  parent: CoreWCF.Web.IncomingWebRequestContext
  langs:
  - csharp
  - vb
  name: IfMatch
  nameWithType: IncomingWebRequestContext.IfMatch
  fullName: CoreWCF.Web.IncomingWebRequestContext.IfMatch
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Web
  syntax:
    content: public IEnumerable<string> IfMatch { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: A collection of items contained in the requests If-Match header
    content.vb: Public ReadOnly Property IfMatch As IEnumerable(Of String)
  overload: CoreWCF.Web.IncomingWebRequestContext.IfMatch*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Web.IncomingWebRequestContext.IfNoneMatch
  commentId: P:CoreWCF.Web.IncomingWebRequestContext.IfNoneMatch
  summary: Gets the values contained in the request's If-None-Match header.
  id: IfNoneMatch
  parent: CoreWCF.Web.IncomingWebRequestContext
  langs:
  - csharp
  - vb
  name: IfNoneMatch
  nameWithType: IncomingWebRequestContext.IfNoneMatch
  fullName: CoreWCF.Web.IncomingWebRequestContext.IfNoneMatch
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Web
  syntax:
    content: public IEnumerable<string> IfNoneMatch { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The values contained in the request's If-None-Match header
    content.vb: Public ReadOnly Property IfNoneMatch As IEnumerable(Of String)
  overload: CoreWCF.Web.IncomingWebRequestContext.IfNoneMatch*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Web.IncomingWebRequestContext.IfModifiedSince
  commentId: P:CoreWCF.Web.IncomingWebRequestContext.IfModifiedSince
  summary: Gets the value of the request's If-Modified-Since header.
  id: IfModifiedSince
  parent: CoreWCF.Web.IncomingWebRequestContext
  langs:
  - csharp
  - vb
  name: IfModifiedSince
  nameWithType: IncomingWebRequestContext.IfModifiedSince
  fullName: CoreWCF.Web.IncomingWebRequestContext.IfModifiedSince
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Web
  syntax:
    content: public Nullable<DateTime> IfModifiedSince { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: The request's If-Modified-Since header value.
    content.vb: Public ReadOnly Property IfModifiedSince As Nullable(Of DateTime)
  overload: CoreWCF.Web.IncomingWebRequestContext.IfModifiedSince*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Web.IncomingWebRequestContext.IfUnmodifiedSince
  commentId: P:CoreWCF.Web.IncomingWebRequestContext.IfUnmodifiedSince
  summary: Gets the value of the request's If-Unmatched-Since header.
  id: IfUnmodifiedSince
  parent: CoreWCF.Web.IncomingWebRequestContext
  langs:
  - csharp
  - vb
  name: IfUnmodifiedSince
  nameWithType: IncomingWebRequestContext.IfUnmodifiedSince
  fullName: CoreWCF.Web.IncomingWebRequestContext.IfUnmodifiedSince
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Web
  syntax:
    content: public Nullable<DateTime> IfUnmodifiedSince { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: The request's If-Unmatched-Since header.
    content.vb: Public ReadOnly Property IfUnmodifiedSince As Nullable(Of DateTime)
  overload: CoreWCF.Web.IncomingWebRequestContext.IfUnmodifiedSince*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Web.IncomingWebRequestContext.Headers
  commentId: P:CoreWCF.Web.IncomingWebRequestContext.Headers
  summary: Gets the headers for the incoming Web request.
  id: Headers
  parent: CoreWCF.Web.IncomingWebRequestContext
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: IncomingWebRequestContext.Headers
  fullName: CoreWCF.Web.IncomingWebRequestContext.Headers
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Web
  syntax:
    content: public WebHeaderCollection Headers { get; }
    parameters: []
    return:
      type: System.Net.WebHeaderCollection
      description: A <xref:System.Net.WebHeaderCollection> instance that contains the headers of the incoming Web request.
    content.vb: Public ReadOnly Property Headers As WebHeaderCollection
  overload: CoreWCF.Web.IncomingWebRequestContext.Headers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Web.IncomingWebRequestContext.Method
  commentId: P:CoreWCF.Web.IncomingWebRequestContext.Method
  summary: Gets the HTTP method of the incoming Web request.
  id: Method
  parent: CoreWCF.Web.IncomingWebRequestContext
  langs:
  - csharp
  - vb
  name: Method
  nameWithType: IncomingWebRequestContext.Method
  fullName: CoreWCF.Web.IncomingWebRequestContext.Method
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Web
  syntax:
    content: public string Method { get; }
    parameters: []
    return:
      type: System.String
      description: The HTTP method of the incoming Web request
    content.vb: Public ReadOnly Property Method As String
  overload: CoreWCF.Web.IncomingWebRequestContext.Method*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Web.IncomingWebRequestContext.UriTemplateMatch
  commentId: P:CoreWCF.Web.IncomingWebRequestContext.UriTemplateMatch
  summary: Gets or sets the <xref:CoreWCF.UriTemplateMatch> instance created during the dispatch of the incoming Web request.
  id: UriTemplateMatch
  parent: CoreWCF.Web.IncomingWebRequestContext
  langs:
  - csharp
  - vb
  name: UriTemplateMatch
  nameWithType: IncomingWebRequestContext.UriTemplateMatch
  fullName: CoreWCF.Web.IncomingWebRequestContext.UriTemplateMatch
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Web
  syntax:
    content: public UriTemplateMatch UriTemplateMatch { get; set; }
    parameters: []
    return:
      type: CoreWCF.UriTemplateMatch
      description: A <xref:CoreWCF.UriTemplateMatch> instance
    content.vb: Public Property UriTemplateMatch As UriTemplateMatch
  overload: CoreWCF.Web.IncomingWebRequestContext.UriTemplateMatch*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Web.IncomingWebRequestContext.UserAgent
  commentId: P:CoreWCF.Web.IncomingWebRequestContext.UserAgent
  summary: Gets the UserAgent header value from the incoming Web request.
  id: UserAgent
  parent: CoreWCF.Web.IncomingWebRequestContext
  langs:
  - csharp
  - vb
  name: UserAgent
  nameWithType: IncomingWebRequestContext.UserAgent
  fullName: CoreWCF.Web.IncomingWebRequestContext.UserAgent
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Web
  syntax:
    content: public string UserAgent { get; }
    parameters: []
    return:
      type: System.String
      description: The UserAgent header from the incoming Web request.
    content.vb: Public ReadOnly Property UserAgent As String
  overload: CoreWCF.Web.IncomingWebRequestContext.UserAgent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CoreWCF.Web
  commentId: N:CoreWCF.Web
  isExternal: true
  name: CoreWCF.Web
  nameWithType: CoreWCF.Web
  fullName: CoreWCF.Web
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve*
  commentId: Overload:CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve
  isExternal: true
  name: CheckConditionalRetrieve
  nameWithType: IncomingWebRequestContext.CheckConditionalRetrieve
  fullName: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalRetrieve
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate*
  commentId: Overload:CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate
  isExternal: true
  name: CheckConditionalUpdate
  nameWithType: IncomingWebRequestContext.CheckConditionalUpdate
  fullName: CoreWCF.Web.IncomingWebRequestContext.CheckConditionalUpdate
- uid: CoreWCF.Web.IncomingWebRequestContext.GetAcceptHeaderElements*
  commentId: Overload:CoreWCF.Web.IncomingWebRequestContext.GetAcceptHeaderElements
  isExternal: true
  name: GetAcceptHeaderElements
  nameWithType: IncomingWebRequestContext.GetAcceptHeaderElements
  fullName: CoreWCF.Web.IncomingWebRequestContext.GetAcceptHeaderElements
- uid: System.Collections.ObjectModel.Collection{System.Net.Mime.ContentType}
  commentId: '!:System.Collections.ObjectModel.Collection{System.Net.Mime.ContentType}'
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<ContentType>
  nameWithType: Collection<ContentType>
  fullName: System.Collections.ObjectModel.Collection<System.Net.Mime.ContentType>
  nameWithType.vb: Collection(Of ContentType)
  fullName.vb: System.Collections.ObjectModel.Collection(Of System.Net.Mime.ContentType)
  name.vb: Collection(Of ContentType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Mime.ContentType
    name: ContentType
    nameWithType: ContentType
    fullName: System.Net.Mime.ContentType
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Mime.ContentType
    name: ContentType
    nameWithType: ContentType
    fullName: System.Net.Mime.ContentType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<>
  nameWithType: Collection<>
  fullName: System.Collections.ObjectModel.Collection<>
  nameWithType.vb: Collection(Of )
  fullName.vb: System.Collections.ObjectModel.Collection(Of )
  name.vb: Collection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Web.IncomingWebRequestContext.Accept*
  commentId: Overload:CoreWCF.Web.IncomingWebRequestContext.Accept
  isExternal: true
  name: Accept
  nameWithType: IncomingWebRequestContext.Accept
  fullName: CoreWCF.Web.IncomingWebRequestContext.Accept
- uid: CoreWCF.Web.IncomingWebRequestContext.ContentLength*
  commentId: Overload:CoreWCF.Web.IncomingWebRequestContext.ContentLength
  isExternal: true
  name: ContentLength
  nameWithType: IncomingWebRequestContext.ContentLength
  fullName: CoreWCF.Web.IncomingWebRequestContext.ContentLength
- uid: CoreWCF.Web.IncomingWebRequestContext.ContentType*
  commentId: Overload:CoreWCF.Web.IncomingWebRequestContext.ContentType
  isExternal: true
  name: ContentType
  nameWithType: IncomingWebRequestContext.ContentType
  fullName: CoreWCF.Web.IncomingWebRequestContext.ContentType
- uid: CoreWCF.Web.IncomingWebRequestContext.IfMatch*
  commentId: Overload:CoreWCF.Web.IncomingWebRequestContext.IfMatch
  isExternal: true
  name: IfMatch
  nameWithType: IncomingWebRequestContext.IfMatch
  fullName: CoreWCF.Web.IncomingWebRequestContext.IfMatch
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: '!:System.Collections.Generic.IEnumerable{System.String}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Web.IncomingWebRequestContext.IfNoneMatch*
  commentId: Overload:CoreWCF.Web.IncomingWebRequestContext.IfNoneMatch
  isExternal: true
  name: IfNoneMatch
  nameWithType: IncomingWebRequestContext.IfNoneMatch
  fullName: CoreWCF.Web.IncomingWebRequestContext.IfNoneMatch
- uid: CoreWCF.Web.IncomingWebRequestContext.IfModifiedSince*
  commentId: Overload:CoreWCF.Web.IncomingWebRequestContext.IfModifiedSince
  isExternal: true
  name: IfModifiedSince
  nameWithType: IncomingWebRequestContext.IfModifiedSince
  fullName: CoreWCF.Web.IncomingWebRequestContext.IfModifiedSince
- uid: System.Nullable{System.DateTime}
  commentId: '!:System.Nullable{System.DateTime}'
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Web.IncomingWebRequestContext.IfUnmodifiedSince*
  commentId: Overload:CoreWCF.Web.IncomingWebRequestContext.IfUnmodifiedSince
  isExternal: true
  name: IfUnmodifiedSince
  nameWithType: IncomingWebRequestContext.IfUnmodifiedSince
  fullName: CoreWCF.Web.IncomingWebRequestContext.IfUnmodifiedSince
- uid: CoreWCF.Web.IncomingWebRequestContext.Headers*
  commentId: Overload:CoreWCF.Web.IncomingWebRequestContext.Headers
  isExternal: true
  name: Headers
  nameWithType: IncomingWebRequestContext.Headers
  fullName: CoreWCF.Web.IncomingWebRequestContext.Headers
- uid: System.Net.WebHeaderCollection
  isExternal: true
  name: WebHeaderCollection
  nameWithType: WebHeaderCollection
  fullName: System.Net.WebHeaderCollection
- uid: CoreWCF.Web.IncomingWebRequestContext.Method*
  commentId: Overload:CoreWCF.Web.IncomingWebRequestContext.Method
  isExternal: true
  name: Method
  nameWithType: IncomingWebRequestContext.Method
  fullName: CoreWCF.Web.IncomingWebRequestContext.Method
- uid: CoreWCF.Web.IncomingWebRequestContext.UriTemplateMatch*
  commentId: Overload:CoreWCF.Web.IncomingWebRequestContext.UriTemplateMatch
  isExternal: true
  name: UriTemplateMatch
  nameWithType: IncomingWebRequestContext.UriTemplateMatch
  fullName: CoreWCF.Web.IncomingWebRequestContext.UriTemplateMatch
- uid: CoreWCF.UriTemplateMatch
  commentId: T:CoreWCF.UriTemplateMatch
  parent: CoreWCF
  isExternal: true
  name: UriTemplateMatch
  nameWithType: UriTemplateMatch
  fullName: CoreWCF.UriTemplateMatch
- uid: CoreWCF
  commentId: N:CoreWCF
  isExternal: true
  name: CoreWCF
  nameWithType: CoreWCF
  fullName: CoreWCF
- uid: CoreWCF.Web.IncomingWebRequestContext.UserAgent*
  commentId: Overload:CoreWCF.Web.IncomingWebRequestContext.UserAgent
  isExternal: true
  name: UserAgent
  nameWithType: IncomingWebRequestContext.UserAgent
  fullName: CoreWCF.Web.IncomingWebRequestContext.UserAgent
