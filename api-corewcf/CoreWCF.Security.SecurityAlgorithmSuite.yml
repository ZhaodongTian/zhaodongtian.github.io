### YamlMime:ManagedReference
items:
- uid: CoreWCF.Security.SecurityAlgorithmSuite
  commentId: T:CoreWCF.Security.SecurityAlgorithmSuite
  id: SecurityAlgorithmSuite
  parent: CoreWCF.Security
  children:
  - CoreWCF.Security.SecurityAlgorithmSuite.#ctor
  - CoreWCF.Security.SecurityAlgorithmSuite.Basic128
  - CoreWCF.Security.SecurityAlgorithmSuite.Basic128Rsa15
  - CoreWCF.Security.SecurityAlgorithmSuite.Basic128Sha256
  - CoreWCF.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
  - CoreWCF.Security.SecurityAlgorithmSuite.Basic192
  - CoreWCF.Security.SecurityAlgorithmSuite.Basic192Rsa15
  - CoreWCF.Security.SecurityAlgorithmSuite.Basic192Sha256
  - CoreWCF.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
  - CoreWCF.Security.SecurityAlgorithmSuite.Basic256
  - CoreWCF.Security.SecurityAlgorithmSuite.Basic256Rsa15
  - CoreWCF.Security.SecurityAlgorithmSuite.Basic256Sha256
  - CoreWCF.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
  - CoreWCF.Security.SecurityAlgorithmSuite.Default
  - CoreWCF.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  - CoreWCF.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  - CoreWCF.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  - CoreWCF.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
  - CoreWCF.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  - CoreWCF.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  - CoreWCF.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  - CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  - CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  - CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  - CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)
  - CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)
  - CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)
  - CoreWCF.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)
  - CoreWCF.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)
  - CoreWCF.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)
  - CoreWCF.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)
  - CoreWCF.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)
  - CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)
  - CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)
  - CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)
  - CoreWCF.Security.SecurityAlgorithmSuite.TripleDes
  - CoreWCF.Security.SecurityAlgorithmSuite.TripleDesRsa15
  - CoreWCF.Security.SecurityAlgorithmSuite.TripleDesSha256
  - CoreWCF.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
  langs:
  - csharp
  - vb
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite
  fullName: CoreWCF.Security.SecurityAlgorithmSuite
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  summary: Specifies properties of algorithms. This is an  class.
  remarks: "Instances of this class are used to specify the cryptographic characteristics of the algorithms used when securing messages.  \n\nThis class is used by derived classes to instantiate security algorithm suites, and contains properties that describe the security algorithms. For example, the `wsBasicHttp` binding uses an internal derived class to specify the properties of its security algorithms.  \n\n"
  syntax:
    content: 'public abstract class SecurityAlgorithmSuite : Object'
    content.vb: >-
      Public MustInherit Class SecurityAlgorithmSuite
          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - CoreWCF.Security.Basic128SecurityAlgorithmSuite
  - CoreWCF.Security.Basic192SecurityAlgorithmSuite
  - CoreWCF.Security.Basic256SecurityAlgorithmSuite
  - CoreWCF.Security.TripleDesSecurityAlgorithmSuite
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: CoreWCF.Security.SecurityAlgorithmSuite.#ctor
  commentId: M:CoreWCF.Security.SecurityAlgorithmSuite.#ctor
  id: '#ctor'
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: SecurityAlgorithmSuite()
  nameWithType: SecurityAlgorithmSuite.SecurityAlgorithmSuite()
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.SecurityAlgorithmSuite()
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: protected SecurityAlgorithmSuite()
    content.vb: Protected Sub New
  overload: CoreWCF.Security.SecurityAlgorithmSuite.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CoreWCF.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)
  commentId: M:CoreWCF.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)
  id: IsCanonicalizationAlgorithmSupported(System.String)
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: IsCanonicalizationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public virtual bool IsCanonicalizationAlgorithmSupported(string algorithm)
    parameters:
    - id: algorithm
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsCanonicalizationAlgorithmSupported(algorithm As String) As Boolean
  overload: CoreWCF.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)
  commentId: M:CoreWCF.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)
  id: IsDigestAlgorithmSupported(System.String)
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: IsDigestAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public virtual bool IsDigestAlgorithmSupported(string algorithm)
    parameters:
    - id: algorithm
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsDigestAlgorithmSupported(algorithm As String) As Boolean
  overload: CoreWCF.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)
  commentId: M:CoreWCF.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)
  id: IsEncryptionAlgorithmSupported(System.String)
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: IsEncryptionAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public virtual bool IsEncryptionAlgorithmSupported(string algorithm)
    parameters:
    - id: algorithm
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsEncryptionAlgorithmSupported(algorithm As String) As Boolean
  overload: CoreWCF.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)
  commentId: M:CoreWCF.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)
  id: IsEncryptionKeyDerivationAlgorithmSupported(System.String)
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: IsEncryptionKeyDerivationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public virtual bool IsEncryptionKeyDerivationAlgorithmSupported(string algorithm)
    parameters:
    - id: algorithm
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsEncryptionKeyDerivationAlgorithmSupported(algorithm As String) As Boolean
  overload: CoreWCF.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)
  commentId: M:CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)
  id: IsSymmetricKeyWrapAlgorithmSupported(System.String)
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: IsSymmetricKeyWrapAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public virtual bool IsSymmetricKeyWrapAlgorithmSupported(string algorithm)
    parameters:
    - id: algorithm
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsSymmetricKeyWrapAlgorithmSupported(algorithm As String) As Boolean
  overload: CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)
  commentId: M:CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)
  id: IsAsymmetricKeyWrapAlgorithmSupported(System.String)
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: IsAsymmetricKeyWrapAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public virtual bool IsAsymmetricKeyWrapAlgorithmSupported(string algorithm)
    parameters:
    - id: algorithm
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsAsymmetricKeyWrapAlgorithmSupported(algorithm As String) As Boolean
  overload: CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)
  commentId: M:CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)
  id: IsSymmetricSignatureAlgorithmSupported(System.String)
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: IsSymmetricSignatureAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public virtual bool IsSymmetricSignatureAlgorithmSupported(string algorithm)
    parameters:
    - id: algorithm
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsSymmetricSignatureAlgorithmSupported(algorithm As String) As Boolean
  overload: CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)
  commentId: M:CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)
  id: IsAsymmetricSignatureAlgorithmSupported(System.String)
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: IsAsymmetricSignatureAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public virtual bool IsAsymmetricSignatureAlgorithmSupported(string algorithm)
    parameters:
    - id: algorithm
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsAsymmetricSignatureAlgorithmSupported(algorithm As String) As Boolean
  overload: CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)
  commentId: M:CoreWCF.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)
  id: IsSignatureKeyDerivationAlgorithmSupported(System.String)
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: IsSignatureKeyDerivationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public virtual bool IsSignatureKeyDerivationAlgorithmSupported(string algorithm)
    parameters:
    - id: algorithm
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsSignatureKeyDerivationAlgorithmSupported(algorithm As String) As Boolean
  overload: CoreWCF.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)
  commentId: M:CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)
  id: IsSymmetricKeyLengthSupported(System.Int32)
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: IsSymmetricKeyLengthSupported(Int32)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public abstract bool IsSymmetricKeyLengthSupported(int length)
    parameters:
    - id: length
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function IsSymmetricKeyLengthSupported(length As Integer) As Boolean
  overload: CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)
  commentId: M:CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)
  id: IsAsymmetricKeyLengthSupported(System.Int32)
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: IsAsymmetricKeyLengthSupported(Int32)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public abstract bool IsAsymmetricKeyLengthSupported(int length)
    parameters:
    - id: length
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function IsAsymmetricKeyLengthSupported(length As Integer) As Boolean
  overload: CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Default
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.Default
  id: Default
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: SecurityAlgorithmSuite.Default
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Default
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public static SecurityAlgorithmSuite Default { get; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityAlgorithmSuite
    content.vb: Public Shared ReadOnly Property Default As SecurityAlgorithmSuite
  overload: CoreWCF.Security.SecurityAlgorithmSuite.Default*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic256
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.Basic256
  id: Basic256
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: Basic256
  nameWithType: SecurityAlgorithmSuite.Basic256
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic256
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public static SecurityAlgorithmSuite Basic256 { get; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityAlgorithmSuite
    content.vb: Public Shared ReadOnly Property Basic256 As SecurityAlgorithmSuite
  overload: CoreWCF.Security.SecurityAlgorithmSuite.Basic256*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic192
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.Basic192
  id: Basic192
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: Basic192
  nameWithType: SecurityAlgorithmSuite.Basic192
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic192
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public static SecurityAlgorithmSuite Basic192 { get; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityAlgorithmSuite
    content.vb: Public Shared ReadOnly Property Basic192 As SecurityAlgorithmSuite
  overload: CoreWCF.Security.SecurityAlgorithmSuite.Basic192*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic128
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.Basic128
  id: Basic128
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: Basic128
  nameWithType: SecurityAlgorithmSuite.Basic128
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic128
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public static SecurityAlgorithmSuite Basic128 { get; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityAlgorithmSuite
    content.vb: Public Shared ReadOnly Property Basic128 As SecurityAlgorithmSuite
  overload: CoreWCF.Security.SecurityAlgorithmSuite.Basic128*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.TripleDes
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.TripleDes
  id: TripleDes
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: TripleDes
  nameWithType: SecurityAlgorithmSuite.TripleDes
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.TripleDes
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public static SecurityAlgorithmSuite TripleDes { get; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityAlgorithmSuite
    content.vb: Public Shared ReadOnly Property TripleDes As SecurityAlgorithmSuite
  overload: CoreWCF.Security.SecurityAlgorithmSuite.TripleDes*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic256Rsa15
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.Basic256Rsa15
  id: Basic256Rsa15
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: Basic256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Rsa15
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic256Rsa15
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public static SecurityAlgorithmSuite Basic256Rsa15 { get; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityAlgorithmSuite
    content.vb: Public Shared ReadOnly Property Basic256Rsa15 As SecurityAlgorithmSuite
  overload: CoreWCF.Security.SecurityAlgorithmSuite.Basic256Rsa15*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic192Rsa15
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.Basic192Rsa15
  id: Basic192Rsa15
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: Basic192Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Rsa15
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic192Rsa15
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public static SecurityAlgorithmSuite Basic192Rsa15 { get; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityAlgorithmSuite
    content.vb: Public Shared ReadOnly Property Basic192Rsa15 As SecurityAlgorithmSuite
  overload: CoreWCF.Security.SecurityAlgorithmSuite.Basic192Rsa15*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic128Rsa15
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.Basic128Rsa15
  id: Basic128Rsa15
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: Basic128Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Rsa15
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic128Rsa15
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public static SecurityAlgorithmSuite Basic128Rsa15 { get; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityAlgorithmSuite
    content.vb: Public Shared ReadOnly Property Basic128Rsa15 As SecurityAlgorithmSuite
  overload: CoreWCF.Security.SecurityAlgorithmSuite.Basic128Rsa15*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.TripleDesRsa15
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.TripleDesRsa15
  id: TripleDesRsa15
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: TripleDesRsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesRsa15
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.TripleDesRsa15
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public static SecurityAlgorithmSuite TripleDesRsa15 { get; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityAlgorithmSuite
    content.vb: Public Shared ReadOnly Property TripleDesRsa15 As SecurityAlgorithmSuite
  overload: CoreWCF.Security.SecurityAlgorithmSuite.TripleDesRsa15*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic256Sha256
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.Basic256Sha256
  id: Basic256Sha256
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: Basic256Sha256
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic256Sha256
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public static SecurityAlgorithmSuite Basic256Sha256 { get; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityAlgorithmSuite
    content.vb: Public Shared ReadOnly Property Basic256Sha256 As SecurityAlgorithmSuite
  overload: CoreWCF.Security.SecurityAlgorithmSuite.Basic256Sha256*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic192Sha256
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.Basic192Sha256
  id: Basic192Sha256
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: Basic192Sha256
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic192Sha256
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public static SecurityAlgorithmSuite Basic192Sha256 { get; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityAlgorithmSuite
    content.vb: Public Shared ReadOnly Property Basic192Sha256 As SecurityAlgorithmSuite
  overload: CoreWCF.Security.SecurityAlgorithmSuite.Basic192Sha256*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic128Sha256
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.Basic128Sha256
  id: Basic128Sha256
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: Basic128Sha256
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic128Sha256
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public static SecurityAlgorithmSuite Basic128Sha256 { get; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityAlgorithmSuite
    content.vb: Public Shared ReadOnly Property Basic128Sha256 As SecurityAlgorithmSuite
  overload: CoreWCF.Security.SecurityAlgorithmSuite.Basic128Sha256*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.TripleDesSha256
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.TripleDesSha256
  id: TripleDesSha256
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: TripleDesSha256
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.TripleDesSha256
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public static SecurityAlgorithmSuite TripleDesSha256 { get; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityAlgorithmSuite
    content.vb: Public Shared ReadOnly Property TripleDesSha256 As SecurityAlgorithmSuite
  overload: CoreWCF.Security.SecurityAlgorithmSuite.TripleDesSha256*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
  id: Basic256Sha256Rsa15
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: Basic256Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256Rsa15
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public static SecurityAlgorithmSuite Basic256Sha256Rsa15 { get; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityAlgorithmSuite
    content.vb: Public Shared ReadOnly Property Basic256Sha256Rsa15 As SecurityAlgorithmSuite
  overload: CoreWCF.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
  id: Basic192Sha256Rsa15
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: Basic192Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256Rsa15
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public static SecurityAlgorithmSuite Basic192Sha256Rsa15 { get; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityAlgorithmSuite
    content.vb: Public Shared ReadOnly Property Basic192Sha256Rsa15 As SecurityAlgorithmSuite
  overload: CoreWCF.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
  id: Basic128Sha256Rsa15
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: Basic128Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256Rsa15
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public static SecurityAlgorithmSuite Basic128Sha256Rsa15 { get; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityAlgorithmSuite
    content.vb: Public Shared ReadOnly Property Basic128Sha256Rsa15 As SecurityAlgorithmSuite
  overload: CoreWCF.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
  id: TripleDesSha256Rsa15
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: TripleDesSha256Rsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256Rsa15
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public static SecurityAlgorithmSuite TripleDesSha256Rsa15 { get; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityAlgorithmSuite
    content.vb: Public Shared ReadOnly Property TripleDesSha256Rsa15 As SecurityAlgorithmSuite
  overload: CoreWCF.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  id: DefaultCanonicalizationAlgorithm
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: DefaultCanonicalizationAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public abstract string DefaultCanonicalizationAlgorithm { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property DefaultCanonicalizationAlgorithm As String
  overload: CoreWCF.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
  id: DefaultDigestAlgorithm
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: DefaultDigestAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultDigestAlgorithm
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public abstract string DefaultDigestAlgorithm { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property DefaultDigestAlgorithm As String
  overload: CoreWCF.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  id: DefaultEncryptionAlgorithm
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: DefaultEncryptionAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public abstract string DefaultEncryptionAlgorithm { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property DefaultEncryptionAlgorithm As String
  overload: CoreWCF.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  id: DefaultEncryptionKeyDerivationLength
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: DefaultEncryptionKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public abstract int DefaultEncryptionKeyDerivationLength { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public MustOverride ReadOnly Property DefaultEncryptionKeyDerivationLength As Integer
  overload: CoreWCF.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  id: DefaultSymmetricKeyWrapAlgorithm
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: DefaultSymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public abstract string DefaultSymmetricKeyWrapAlgorithm { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property DefaultSymmetricKeyWrapAlgorithm As String
  overload: CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  id: DefaultAsymmetricKeyWrapAlgorithm
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: DefaultAsymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public abstract string DefaultAsymmetricKeyWrapAlgorithm { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property DefaultAsymmetricKeyWrapAlgorithm As String
  overload: CoreWCF.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  id: DefaultSymmetricSignatureAlgorithm
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: DefaultSymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public abstract string DefaultSymmetricSignatureAlgorithm { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property DefaultSymmetricSignatureAlgorithm As String
  overload: CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  id: DefaultAsymmetricSignatureAlgorithm
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: DefaultAsymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public abstract string DefaultAsymmetricSignatureAlgorithm { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property DefaultAsymmetricSignatureAlgorithm As String
  overload: CoreWCF.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  id: DefaultSignatureKeyDerivationLength
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: DefaultSignatureKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public abstract int DefaultSignatureKeyDerivationLength { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public MustOverride ReadOnly Property DefaultSignatureKeyDerivationLength As Integer
  overload: CoreWCF.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  commentId: P:CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  id: DefaultSymmetricKeyLength
  parent: CoreWCF.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  - vb
  name: DefaultSymmetricKeyLength
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public abstract int DefaultSymmetricKeyLength { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public MustOverride ReadOnly Property DefaultSymmetricKeyLength As Integer
  overload: CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
references:
- uid: CoreWCF.Security
  commentId: N:CoreWCF.Security
  isExternal: true
  name: CoreWCF.Security
  nameWithType: CoreWCF.Security
  fullName: CoreWCF.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Security.SecurityAlgorithmSuite.#ctor*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.#ctor
  isExternal: true
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite.SecurityAlgorithmSuite
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.SecurityAlgorithmSuite
- uid: CoreWCF.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported
  isExternal: true
  name: IsCanonicalizationAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported
  isExternal: true
  name: IsDigestAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsDigestAlgorithmSupported
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported
- uid: CoreWCF.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported
  isExternal: true
  name: IsEncryptionAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported
- uid: CoreWCF.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported
  isExternal: true
  name: IsEncryptionKeyDerivationAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported
- uid: CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported
  isExternal: true
  name: IsSymmetricKeyWrapAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported
- uid: CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported
  isExternal: true
  name: IsAsymmetricKeyWrapAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported
- uid: CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported
  isExternal: true
  name: IsSymmetricSignatureAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported
- uid: CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported
  isExternal: true
  name: IsAsymmetricSignatureAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported
- uid: CoreWCF.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported
  isExternal: true
  name: IsSignatureKeyDerivationAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported
- uid: CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported
  isExternal: true
  name: IsSymmetricKeyLengthSupported
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported
  isExternal: true
  name: IsAsymmetricKeyLengthSupported
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Default*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.Default
  isExternal: true
  name: Default
  nameWithType: SecurityAlgorithmSuite.Default
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Default
- uid: CoreWCF.Security.SecurityAlgorithmSuite
  commentId: T:CoreWCF.Security.SecurityAlgorithmSuite
  parent: CoreWCF.Security
  isExternal: true
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite
  fullName: CoreWCF.Security.SecurityAlgorithmSuite
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic256*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.Basic256
  isExternal: true
  name: Basic256
  nameWithType: SecurityAlgorithmSuite.Basic256
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic256
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic192*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.Basic192
  isExternal: true
  name: Basic192
  nameWithType: SecurityAlgorithmSuite.Basic192
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic192
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic128*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.Basic128
  isExternal: true
  name: Basic128
  nameWithType: SecurityAlgorithmSuite.Basic128
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic128
- uid: CoreWCF.Security.SecurityAlgorithmSuite.TripleDes*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.TripleDes
  isExternal: true
  name: TripleDes
  nameWithType: SecurityAlgorithmSuite.TripleDes
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.TripleDes
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic256Rsa15*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.Basic256Rsa15
  isExternal: true
  name: Basic256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Rsa15
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic256Rsa15
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic192Rsa15*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.Basic192Rsa15
  isExternal: true
  name: Basic192Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Rsa15
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic192Rsa15
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic128Rsa15*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.Basic128Rsa15
  isExternal: true
  name: Basic128Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Rsa15
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic128Rsa15
- uid: CoreWCF.Security.SecurityAlgorithmSuite.TripleDesRsa15*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.TripleDesRsa15
  isExternal: true
  name: TripleDesRsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesRsa15
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.TripleDesRsa15
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic256Sha256*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.Basic256Sha256
  isExternal: true
  name: Basic256Sha256
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic256Sha256
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic192Sha256*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.Basic192Sha256
  isExternal: true
  name: Basic192Sha256
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic192Sha256
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic128Sha256*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.Basic128Sha256
  isExternal: true
  name: Basic128Sha256
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic128Sha256
- uid: CoreWCF.Security.SecurityAlgorithmSuite.TripleDesSha256*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.TripleDesSha256
  isExternal: true
  name: TripleDesSha256
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.TripleDesSha256
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
  isExternal: true
  name: Basic256Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256Rsa15
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
  isExternal: true
  name: Basic192Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256Rsa15
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
- uid: CoreWCF.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
  isExternal: true
  name: Basic128Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256Rsa15
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
- uid: CoreWCF.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
  isExternal: true
  name: TripleDesSha256Rsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256Rsa15
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
- uid: CoreWCF.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  isExternal: true
  name: DefaultCanonicalizationAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
- uid: CoreWCF.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
  isExternal: true
  name: DefaultDigestAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultDigestAlgorithm
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
- uid: CoreWCF.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  isExternal: true
  name: DefaultEncryptionAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
- uid: CoreWCF.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  isExternal: true
  name: DefaultEncryptionKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
- uid: CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  isExternal: true
  name: DefaultSymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
- uid: CoreWCF.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  isExternal: true
  name: DefaultAsymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
- uid: CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  isExternal: true
  name: DefaultSymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
- uid: CoreWCF.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  isExternal: true
  name: DefaultAsymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
- uid: CoreWCF.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  isExternal: true
  name: DefaultSignatureKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
- uid: CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength*
  commentId: Overload:CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  isExternal: true
  name: DefaultSymmetricKeyLength
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  fullName: CoreWCF.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
