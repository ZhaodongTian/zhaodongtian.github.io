### YamlMime:ManagedReference
items:
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  commentId: T:CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  id: SessionSecurityToken
  parent: CoreWCF.IdentityModel.Tokens
  children:
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal)
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String)
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,CoreWCF.IdentityModel.Tokens.SymmetricSecurityKey)
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},CoreWCF.IdentityModel.Tokens.SymmetricSecurityKey)
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,CoreWCF.IdentityModel.Tokens.SymmetricSecurityKey)
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.Context
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ContextId
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.EndpointId
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.Id
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.IsPersistent
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ValidFrom
  - CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ValidTo
  langs:
  - csharp
  - vb
  name: SessionSecurityToken
  nameWithType: SessionSecurityToken
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nDefines a SessionSecurityToken that contains data associated with a session.\n"
  syntax:
    content: 'public class SessionSecurityToken : SecurityToken'
    content.vb: >-
      Public Class SessionSecurityToken
          Inherits SecurityToken
  inheritance:
  - System.Object
  - CoreWCF.IdentityModel.Tokens.SecurityToken
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - CoreWCF.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
  - CoreWCF.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
  - CoreWCF.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  - CoreWCF.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal)
  commentId: M:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal)'
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: SessionSecurityToken(ClaimsPrincipal)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal)
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(System.Security.Claims.ClaimsPrincipal)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nCreate session security token from a principal.\n"
  syntax:
    content: public SessionSecurityToken(ClaimsPrincipal claimsPrincipal)
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: The <xref href="CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(claimsPrincipal As ClaimsPrincipal)
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)
  commentId: M:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)'
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: SessionSecurityToken(ClaimsPrincipal, TimeSpan)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal, TimeSpan)
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(System.Security.Claims.ClaimsPrincipal, System.TimeSpan)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nCreate session security token from a principal.\n"
  syntax:
    content: public SessionSecurityToken(ClaimsPrincipal claimsPrincipal, TimeSpan lifetime)
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: The <xref href="CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal" data-throw-if-not-resolved="false"></xref>.
    - id: lifetime
      type: System.TimeSpan
      description: The Timespan the token is valid.
    content.vb: Public Sub New(claimsPrincipal As ClaimsPrincipal, lifetime As TimeSpan)
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String)
  commentId: M:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.String)'
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: SessionSecurityToken(ClaimsPrincipal, String)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal, String)
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(System.Security.Claims.ClaimsPrincipal, System.String)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nCreate session security token from principal and bootstrap token.\n"
  syntax:
    content: public SessionSecurityToken(ClaimsPrincipal claimsPrincipal, string context)
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: The <xref href="CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal" data-throw-if-not-resolved="false"></xref> that generated from the bootstrap token.
    - id: context
      type: System.String
      description: Session specific context string
    content.vb: Public Sub New(claimsPrincipal As ClaimsPrincipal, context As String)
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  commentId: M:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})'
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: SessionSecurityToken(ClaimsPrincipal, String, Nullable<DateTime>, Nullable<DateTime>)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal, String, Nullable<DateTime>, Nullable<DateTime>)
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(System.Security.Claims.ClaimsPrincipal, System.String, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nCreate session security token from principal and bootstrap token.\n"
  syntax:
    content: public SessionSecurityToken(ClaimsPrincipal claimsPrincipal, string context, Nullable<DateTime> validFrom, Nullable<DateTime> validTo)
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: The <xref href="CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal" data-throw-if-not-resolved="false"></xref> that generated from the bootstrap token.
    - id: context
      type: System.String
      description: Session specific context string
    - id: validFrom
      type: System.Nullable{System.DateTime}
      description: DateTime specifying the time the token becomes valid.
    - id: validTo
      type: System.Nullable{System.DateTime}
      description: DateTime specifying the time the token becomes invalid.
    content.vb: Public Sub New(claimsPrincipal As ClaimsPrincipal, context As String, validFrom As Nullable(Of DateTime), validTo As Nullable(Of DateTime))
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  nameWithType.vb: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal, String, Nullable(Of DateTime), Nullable(Of DateTime))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(System.Security.Claims.ClaimsPrincipal, System.String, System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime))
  name.vb: SessionSecurityToken(ClaimsPrincipal, String, Nullable(Of DateTime), Nullable(Of DateTime))
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  commentId: M:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})'
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: SessionSecurityToken(ClaimsPrincipal, String, String, Nullable<DateTime>, Nullable<DateTime>)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal, String, String, Nullable<DateTime>, Nullable<DateTime>)
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(System.Security.Claims.ClaimsPrincipal, System.String, System.String, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nCreate session security token from principal and bootstrap token.\n"
  syntax:
    content: public SessionSecurityToken(ClaimsPrincipal claimsPrincipal, string context, string endpointId, Nullable<DateTime> validFrom, Nullable<DateTime> validTo)
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: The <xref href="CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal" data-throw-if-not-resolved="false"></xref> that generated from the bootstrap token.
    - id: context
      type: System.String
      description: Session specific context string
    - id: endpointId
      type: System.String
      description: The endpoint to which this token is bound. String.Empty would create a unscoped token.
    - id: validFrom
      type: System.Nullable{System.DateTime}
      description: DateTime specifying the time the token becomes valid.
    - id: validTo
      type: System.Nullable{System.DateTime}
      description: DateTime specifying the time the token becomes invalid.
    content.vb: Public Sub New(claimsPrincipal As ClaimsPrincipal, context As String, endpointId As String, validFrom As Nullable(Of DateTime), validTo As Nullable(Of DateTime))
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  nameWithType.vb: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal, String, String, Nullable(Of DateTime), Nullable(Of DateTime))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(System.Security.Claims.ClaimsPrincipal, System.String, System.String, System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime))
  name.vb: SessionSecurityToken(ClaimsPrincipal, String, String, Nullable(Of DateTime), Nullable(Of DateTime))
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,CoreWCF.IdentityModel.Tokens.SymmetricSecurityKey)
  commentId: M:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,CoreWCF.IdentityModel.Tokens.SymmetricSecurityKey)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,CoreWCF.IdentityModel.Tokens.SymmetricSecurityKey)'
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: SessionSecurityToken(ClaimsPrincipal, UniqueId, String, String, TimeSpan, SymmetricSecurityKey)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal, UniqueId, String, String, TimeSpan, SymmetricSecurityKey)
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(System.Security.Claims.ClaimsPrincipal, System.Xml.UniqueId, System.String, System.String, System.TimeSpan, CoreWCF.IdentityModel.Tokens.SymmetricSecurityKey)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nInitializes a new instance of the <xref href=\"CoreWCF.IdentityModel.Tokens.SessionSecurityToken\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public SessionSecurityToken(ClaimsPrincipal claimsPrincipal, UniqueId contextId, string context, string endpointId, TimeSpan lifetime, SymmetricSecurityKey key)
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "\n<xref href=\"CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal\" data-throw-if-not-resolved=\"false\"></xref> associated with this session."
    - id: contextId
      type: System.Xml.UniqueId
      description: Optional context identifier associated with this token.  If null a new identifier will be generated.
    - id: context
      type: System.String
      description: Optional context information associated with the session.
    - id: endpointId
      type: System.String
      description: The endpoint to which this token is bound. String.Empty would create a unscoped token.
    - id: lifetime
      type: System.TimeSpan
      description: The lifetime of the session token.  ValidFrom will be set to DateTime.UtcNow, ValidTo will be set to ValidFrom + lifetime.
    - id: key
      type: CoreWCF.IdentityModel.Tokens.SymmetricSecurityKey
      description: Optional symmetric session key.
    content.vb: Public Sub New(claimsPrincipal As ClaimsPrincipal, contextId As UniqueId, context As String, endpointId As String, lifetime As TimeSpan, key As SymmetricSecurityKey)
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The value of lifetime &lt;= TimeSpan.Zero.&quot;
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,CoreWCF.IdentityModel.Tokens.SymmetricSecurityKey)
  commentId: M:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,CoreWCF.IdentityModel.Tokens.SymmetricSecurityKey)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,CoreWCF.IdentityModel.Tokens.SymmetricSecurityKey)'
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: SessionSecurityToken(ClaimsPrincipal, UniqueId, String, String, DateTime, TimeSpan, SymmetricSecurityKey)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal, UniqueId, String, String, DateTime, TimeSpan, SymmetricSecurityKey)
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(System.Security.Claims.ClaimsPrincipal, System.Xml.UniqueId, System.String, System.String, System.DateTime, System.TimeSpan, CoreWCF.IdentityModel.Tokens.SymmetricSecurityKey)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nInitializes a new instance of the <xref href=\"CoreWCF.IdentityModel.Tokens.SessionSecurityToken\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public SessionSecurityToken(ClaimsPrincipal claimsPrincipal, UniqueId contextId, string context, string endpointId, DateTime validFrom, TimeSpan lifetime, SymmetricSecurityKey key)
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "\n<xref href=\"CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal\" data-throw-if-not-resolved=\"false\"></xref> associated with this session."
    - id: contextId
      type: System.Xml.UniqueId
      description: Optional context identifier associated with this token.  If null a new identifier will be generated.
    - id: context
      type: System.String
      description: Optional context information associated with the session.
    - id: endpointId
      type: System.String
      description: The endpoint to which this token is bound. String.Empty would create a unscoped token.
    - id: validFrom
      type: System.DateTime
      description: DateTime specifying the time the token becomes valid.
    - id: lifetime
      type: System.TimeSpan
      description: The lifetime of the session token.  ValidTo will be set to ValidFrom + lifetime.
    - id: key
      type: CoreWCF.IdentityModel.Tokens.SymmetricSecurityKey
      description: Optional symmetric session key.
    content.vb: Public Sub New(claimsPrincipal As ClaimsPrincipal, contextId As UniqueId, context As String, endpointId As String, validFrom As DateTime, lifetime As TimeSpan, key As SymmetricSecurityKey)
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The value of lifetime &lt;= TimeSpan.Zero.&quot;
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},CoreWCF.IdentityModel.Tokens.SymmetricSecurityKey)
  commentId: M:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},CoreWCF.IdentityModel.Tokens.SymmetricSecurityKey)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},CoreWCF.IdentityModel.Tokens.SymmetricSecurityKey)'
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: SessionSecurityToken(ClaimsPrincipal, UniqueId, String, String, Nullable<DateTime>, Nullable<DateTime>, SymmetricSecurityKey)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal, UniqueId, String, String, Nullable<DateTime>, Nullable<DateTime>, SymmetricSecurityKey)
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(System.Security.Claims.ClaimsPrincipal, System.Xml.UniqueId, System.String, System.String, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, CoreWCF.IdentityModel.Tokens.SymmetricSecurityKey)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nInitializes a new instance of the <xref href=\"CoreWCF.IdentityModel.Tokens.SessionSecurityToken\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  remarks: "\nIf no key is supplied, a 128bit key is generated. KeyEffectiveTime is set to validFrom, KeyExpirationTime is set to validTo.\nA key generation identifier is created.\n"
  syntax:
    content: public SessionSecurityToken(ClaimsPrincipal claimsPrincipal, UniqueId contextId, string context, string endpointId, Nullable<DateTime> validFrom, Nullable<DateTime> validTo, SymmetricSecurityKey key)
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "\n<xref href=\"CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal\" data-throw-if-not-resolved=\"false\"></xref> associated with this session."
    - id: contextId
      type: System.Xml.UniqueId
      description: Context Identifier that identifies the session
    - id: context
      type: System.String
      description: Optional context information associated with the session.
    - id: endpointId
      type: System.String
      description: The endpoint to which this token is bound. String.Empty would create a unscoped token.
    - id: validFrom
      type: System.Nullable{System.DateTime}
      description: DateTime specifying the time the token becomes valid.
    - id: validTo
      type: System.Nullable{System.DateTime}
      description: DateTime specifying the time the token becomes invalid.
    - id: key
      type: CoreWCF.IdentityModel.Tokens.SymmetricSecurityKey
      description: Optional symmetric session key.
    content.vb: Public Sub New(claimsPrincipal As ClaimsPrincipal, contextId As UniqueId, context As String, endpointId As String, validFrom As Nullable(Of DateTime), validTo As Nullable(Of DateTime), key As SymmetricSecurityKey)
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The input parameter &apos;claimsPrincipal&apos; is null.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The input parameter &apos;contextId&apos; is null.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: validFrom is greater than or equal to validTo.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: validTo is less than current time.
  nameWithType.vb: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal, UniqueId, String, String, Nullable(Of DateTime), Nullable(Of DateTime), SymmetricSecurityKey)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(System.Security.Claims.ClaimsPrincipal, System.Xml.UniqueId, System.String, System.String, System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), CoreWCF.IdentityModel.Tokens.SymmetricSecurityKey)
  name.vb: SessionSecurityToken(ClaimsPrincipal, UniqueId, String, String, Nullable(Of DateTime), Nullable(Of DateTime), SymmetricSecurityKey)
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: SessionSecurityToken(SerializationInfo, StreamingContext)
  nameWithType: SessionSecurityToken.SessionSecurityToken(SerializationInfo, StreamingContext)
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: protected SessionSecurityToken(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
    - id: context
      type: System.Runtime.Serialization.StreamingContext
    content.vb: Protected Sub New(info As SerializationInfo, context As StreamingContext)
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: SessionSecurityToken.GetObjectData(SerializationInfo, StreamingContext)
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public virtual void GetObjectData(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
    - id: context
      type: System.Runtime.Serialization.StreamingContext
    content.vb: Public Overridable Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.GetObjectData*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal
  commentId: P:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal
  id: ClaimsPrincipal
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: ClaimsPrincipal
  nameWithType: SessionSecurityToken.ClaimsPrincipal
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nThe <xref href=\"CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal\" data-throw-if-not-resolved=\"false\"></xref> associated with the session.\n"
  syntax:
    content: public ClaimsPrincipal ClaimsPrincipal { get; }
    parameters: []
    return:
      type: System.Security.Claims.ClaimsPrincipal
    content.vb: Public ReadOnly Property ClaimsPrincipal As ClaimsPrincipal
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.Context
  commentId: P:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.Context
  id: Context
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: SessionSecurityToken.Context
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.Context
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets the user specified value.\n"
  syntax:
    content: public string Context { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Context As String
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.Context*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ContextId
  commentId: P:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ContextId
  id: ContextId
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: ContextId
  nameWithType: SessionSecurityToken.ContextId
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ContextId
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nThe Session Context Identifier\n"
  syntax:
    content: public UniqueId ContextId { get; }
    parameters: []
    return:
      type: System.Xml.UniqueId
    content.vb: Public ReadOnly Property ContextId As UniqueId
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ContextId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.EndpointId
  commentId: P:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.EndpointId
  id: EndpointId
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: EndpointId
  nameWithType: SessionSecurityToken.EndpointId
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.EndpointId
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets the Id of the endpoint to which this token is scoped.\n"
  syntax:
    content: public string EndpointId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property EndpointId As String
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.EndpointId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime
  commentId: P:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime
  id: KeyEffectiveTime
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: KeyEffectiveTime
  nameWithType: SessionSecurityToken.KeyEffectiveTime
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nThe effective date/time of the key in this token\n"
  syntax:
    content: public DateTime KeyEffectiveTime { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property KeyEffectiveTime As DateTime
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime
  commentId: P:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime
  id: KeyExpirationTime
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: KeyExpirationTime
  nameWithType: SessionSecurityToken.KeyExpirationTime
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nThe expiration date/time of the key in this token\n"
  syntax:
    content: public DateTime KeyExpirationTime { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property KeyExpirationTime As DateTime
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration
  commentId: P:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration
  id: KeyGeneration
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: KeyGeneration
  nameWithType: SessionSecurityToken.KeyGeneration
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nThe identifier for the key generation in this token\n"
  syntax:
    content: public UniqueId KeyGeneration { get; }
    parameters: []
    return:
      type: System.Xml.UniqueId
    content.vb: Public ReadOnly Property KeyGeneration As UniqueId
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.Id
  commentId: P:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.Id
  id: Id
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: SessionSecurityToken.Id
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.Id
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets the id of this token.\n"
  syntax:
    content: public override string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Id As String
  overridden: CoreWCF.IdentityModel.Tokens.SecurityToken.Id
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.Id*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.IsPersistent
  commentId: P:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.IsPersistent
  id: IsPersistent
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: IsPersistent
  nameWithType: SessionSecurityToken.IsPersistent
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.IsPersistent
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nIf true, cookie is written as a persistent cookie.\n"
  syntax:
    content: public bool IsPersistent { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsPersistent As Boolean
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.IsPersistent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode
  commentId: P:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode
  id: IsReferenceMode
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: IsReferenceMode
  nameWithType: SessionSecurityToken.IsReferenceMode
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nIf true, the SessionSecurityToken is operating in reference mode.\n"
  remarks: "\nIn reference mode, a simple artifact is produced during serialization\nand the real token is stored in the token cache associated with the\ntoken handler. For Web Farm scenarios, the token cache must operate\nacross all nodes in teh farm.\n"
  syntax:
    content: public bool IsReferenceMode { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsReferenceMode As Boolean
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion
  commentId: P:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion
  id: SecureConversationVersion
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: SecureConversationVersion
  nameWithType: SessionSecurityToken.SecureConversationVersion
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets the SecureConversationVersion used for this token.\n"
  syntax:
    content: public Uri SecureConversationVersion { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property SecureConversationVersion As Uri
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys
  commentId: P:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys
  id: SecurityKeys
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: SecurityKeys
  nameWithType: SessionSecurityToken.SecurityKeys
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets the keys associated with this session, usually a single key\n"
  syntax:
    content: public override ReadOnlyCollection<SecurityKey> SecurityKeys { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Tokens.SecurityKey}
    content.vb: Public Overrides ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)
  overridden: CoreWCF.IdentityModel.Tokens.SecurityToken.SecurityKeys
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ValidFrom
  commentId: P:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ValidFrom
  id: ValidFrom
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: ValidFrom
  nameWithType: SessionSecurityToken.ValidFrom
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ValidFrom
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets the begining DateTime before which token is invalid.\n"
  syntax:
    content: public override DateTime ValidFrom { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overrides ReadOnly Property ValidFrom As DateTime
  overridden: CoreWCF.IdentityModel.Tokens.SecurityToken.ValidFrom
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ValidFrom*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ValidTo
  commentId: P:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ValidTo
  id: ValidTo
  parent: CoreWCF.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  - vb
  name: ValidTo
  nameWithType: SessionSecurityToken.ValidTo
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ValidTo
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets the ending DateTime after which the token is invalid.\n"
  syntax:
    content: public override DateTime ValidTo { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overrides ReadOnly Property ValidTo As DateTime
  overridden: CoreWCF.IdentityModel.Tokens.SecurityToken.ValidTo
  overload: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ValidTo*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: CoreWCF.IdentityModel.Tokens
  commentId: N:CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: CoreWCF.IdentityModel.Tokens
  nameWithType: CoreWCF.IdentityModel.Tokens
  fullName: CoreWCF.IdentityModel.Tokens
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityToken
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
- uid: System.Runtime.Serialization.ISerializable
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
  parent: CoreWCF.IdentityModel.Tokens.SecurityToken
  isExternal: true
  name: CanCreateKeyIdentifierClause<T>()
  nameWithType: SecurityToken.CanCreateKeyIdentifierClause<T>()
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause<T>()
  nameWithType.vb: SecurityToken.CanCreateKeyIdentifierClause(Of T)()
  fullName.vb: CoreWCF.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause(Of T)()
  name.vb: CanCreateKeyIdentifierClause(Of T)()
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
    name: CanCreateKeyIdentifierClause<T>
    nameWithType: SecurityToken.CanCreateKeyIdentifierClause<T>
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
    name: CanCreateKeyIdentifierClause(Of T)
    nameWithType: SecurityToken.CanCreateKeyIdentifierClause(Of T)
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
  parent: CoreWCF.IdentityModel.Tokens.SecurityToken
  isExternal: true
  name: CreateKeyIdentifierClause<T>()
  nameWithType: SecurityToken.CreateKeyIdentifierClause<T>()
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause<T>()
  nameWithType.vb: SecurityToken.CreateKeyIdentifierClause(Of T)()
  fullName.vb: CoreWCF.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause(Of T)()
  name.vb: CreateKeyIdentifierClause(Of T)()
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
    name: CreateKeyIdentifierClause<T>
    nameWithType: SecurityToken.CreateKeyIdentifierClause<T>
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
    name: CreateKeyIdentifierClause(Of T)
    nameWithType: SecurityToken.CreateKeyIdentifierClause(Of T)
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  parent: CoreWCF.IdentityModel.Tokens.SecurityToken
  isExternal: true
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
    name: MatchesKeyIdentifierClause
    nameWithType: SecurityToken.MatchesKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
    name: MatchesKeyIdentifierClause
    nameWithType: SecurityToken.MatchesKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  parent: CoreWCF.IdentityModel.Tokens.SecurityToken
  isExternal: true
  name: ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
    name: ResolveKeyIdentifierClause
    nameWithType: SecurityToken.ResolveKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
    name: ResolveKeyIdentifierClause
    nameWithType: SecurityToken.ResolveKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.#ctor
  isExternal: true
  name: SessionSecurityToken
  nameWithType: SessionSecurityToken.SessionSecurityToken
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken
- uid: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.DateTime}
  commentId: '!:System.Nullable{System.DateTime}'
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: System.Xml.UniqueId
  isExternal: true
  name: UniqueId
  nameWithType: UniqueId
  fullName: System.Xml.UniqueId
- uid: CoreWCF.IdentityModel.Tokens.SymmetricSecurityKey
  commentId: T:CoreWCF.IdentityModel.Tokens.SymmetricSecurityKey
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SymmetricSecurityKey
  nameWithType: SymmetricSecurityKey
  fullName: CoreWCF.IdentityModel.Tokens.SymmetricSecurityKey
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: System.Runtime.Serialization.SerializationInfo
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.GetObjectData*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.GetObjectData
  isExternal: true
  name: GetObjectData
  nameWithType: SessionSecurityToken.GetObjectData
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.GetObjectData
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal
  isExternal: true
  name: ClaimsPrincipal
  nameWithType: SessionSecurityToken.ClaimsPrincipal
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.Context*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.Context
  isExternal: true
  name: Context
  nameWithType: SessionSecurityToken.Context
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.Context
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ContextId*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ContextId
  isExternal: true
  name: ContextId
  nameWithType: SessionSecurityToken.ContextId
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ContextId
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.EndpointId*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.EndpointId
  isExternal: true
  name: EndpointId
  nameWithType: SessionSecurityToken.EndpointId
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.EndpointId
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime
  isExternal: true
  name: KeyEffectiveTime
  nameWithType: SessionSecurityToken.KeyEffectiveTime
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime
  isExternal: true
  name: KeyExpirationTime
  nameWithType: SessionSecurityToken.KeyExpirationTime
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration
  isExternal: true
  name: KeyGeneration
  nameWithType: SessionSecurityToken.KeyGeneration
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken.Id
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityToken.Id
  parent: CoreWCF.IdentityModel.Tokens.SecurityToken
  isExternal: true
  name: Id
  nameWithType: SecurityToken.Id
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.Id
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.Id*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.Id
  isExternal: true
  name: Id
  nameWithType: SessionSecurityToken.Id
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.Id
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.IsPersistent*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.IsPersistent
  isExternal: true
  name: IsPersistent
  nameWithType: SessionSecurityToken.IsPersistent
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.IsPersistent
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode
  isExternal: true
  name: IsReferenceMode
  nameWithType: SessionSecurityToken.IsReferenceMode
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion
  isExternal: true
  name: SecureConversationVersion
  nameWithType: SessionSecurityToken.SecureConversationVersion
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion
- uid: System.Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken.SecurityKeys
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityToken.SecurityKeys
  parent: CoreWCF.IdentityModel.Tokens.SecurityToken
  isExternal: true
  name: SecurityKeys
  nameWithType: SecurityToken.SecurityKeys
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.SecurityKeys
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys
  isExternal: true
  name: SecurityKeys
  nameWithType: SessionSecurityToken.SecurityKeys
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys
- uid: System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Tokens.SecurityKey}
  commentId: '!:System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Tokens.SecurityKey}'
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<SecurityKey>
  nameWithType: ReadOnlyCollection<SecurityKey>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<CoreWCF.IdentityModel.Tokens.SecurityKey>
  nameWithType.vb: ReadOnlyCollection(Of SecurityKey)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of CoreWCF.IdentityModel.Tokens.SecurityKey)
  name.vb: ReadOnlyCollection(Of SecurityKey)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: CoreWCF.IdentityModel.Tokens.SecurityKey
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: CoreWCF.IdentityModel.Tokens.SecurityKey
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<>
  nameWithType: ReadOnlyCollection<>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<>
  nameWithType.vb: ReadOnlyCollection(Of )
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of )
  name.vb: ReadOnlyCollection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken.ValidFrom
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityToken.ValidFrom
  parent: CoreWCF.IdentityModel.Tokens.SecurityToken
  isExternal: true
  name: ValidFrom
  nameWithType: SecurityToken.ValidFrom
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.ValidFrom
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ValidFrom*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ValidFrom
  isExternal: true
  name: ValidFrom
  nameWithType: SessionSecurityToken.ValidFrom
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ValidFrom
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken.ValidTo
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityToken.ValidTo
  parent: CoreWCF.IdentityModel.Tokens.SecurityToken
  isExternal: true
  name: ValidTo
  nameWithType: SecurityToken.ValidTo
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.ValidTo
- uid: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ValidTo*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ValidTo
  isExternal: true
  name: ValidTo
  nameWithType: SessionSecurityToken.ValidTo
  fullName: CoreWCF.IdentityModel.Tokens.SessionSecurityToken.ValidTo
