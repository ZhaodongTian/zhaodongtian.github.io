### YamlMime:ManagedReference
items:
- uid: CoreWCF.Channels.IDuplexChannel
  commentId: T:CoreWCF.Channels.IDuplexChannel
  id: IDuplexChannel
  parent: CoreWCF.Channels
  children: []
  langs:
  - csharp
  - vb
  name: IDuplexChannel
  nameWithType: IDuplexChannel
  fullName: CoreWCF.Channels.IDuplexChannel
  type: Interface
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  summary: Defines the interface that a channel must implement to both send and receive messages.
  remarks: "The [IDuplexChannel](xref:CoreWCF.Channels.IDuplexChannel) interface is the union of the [IInputChannel](xref:CoreWCF.Channels.IInputChannel) and [IOutputChannel](xref:CoreWCF.Channels.IOutputChannel) interfaces. The [IDuplexChannel](xref:CoreWCF.Channels.IDuplexChannel) interface does not mandate any correlation between the [IInputChannel](xref:CoreWCF.Channels.IInputChannel) and [IOutputChannel](xref:CoreWCF.Channels.IOutputChannel) when implemented. This means, in particular, that the contract does not mandate that the sender of messages that are received through the [IInputChannel](xref:CoreWCF.Channels.IInputChannel) is equal to the recipient of messages sent through the [IOutputChannel](xref:CoreWCF.Channels.IOutputChannel)."
  syntax:
    content: 'public interface IDuplexChannel : IInputChannel, IOutputChannel, IChannel, ICommunicationObject'
    content.vb: >-
      Public Interface IDuplexChannel
          Inherits IChannel, ICommunicationObject, IInputChannel, IOutputChannel
  inheritedMembers:
  - CoreWCF.Channels.IInputChannel.ReceiveAsync(System.Threading.CancellationToken)
  - CoreWCF.Channels.IInputChannel.TryReceiveAsync(System.Threading.CancellationToken)
  - CoreWCF.Channels.IInputChannel.LocalAddress
  - CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message)
  - CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
  - CoreWCF.Channels.IOutputChannel.RemoteAddress
  - CoreWCF.Channels.IOutputChannel.Via
  - CoreWCF.Channels.IChannel.GetProperty``1
  - CoreWCF.Channels.IChannel.ChannelDispatcher
  - CoreWCF.ICommunicationObject.Abort
  - CoreWCF.ICommunicationObject.CloseAsync
  - CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
  - CoreWCF.ICommunicationObject.OpenAsync
  - CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
  - CoreWCF.ICommunicationObject.State
  - CoreWCF.ICommunicationObject.Closed
  - CoreWCF.ICommunicationObject.Closing
  - CoreWCF.ICommunicationObject.Faulted
  - CoreWCF.ICommunicationObject.Opened
  - CoreWCF.ICommunicationObject.Opening
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: CoreWCF.Channels
  commentId: N:CoreWCF.Channels
  isExternal: true
  name: CoreWCF.Channels
  nameWithType: CoreWCF.Channels
  fullName: CoreWCF.Channels
- uid: CoreWCF.Channels.IInputChannel.ReceiveAsync(System.Threading.CancellationToken)
  commentId: M:CoreWCF.Channels.IInputChannel.ReceiveAsync(System.Threading.CancellationToken)
  parent: CoreWCF.Channels.IInputChannel
  isExternal: true
  name: ReceiveAsync(CancellationToken)
  nameWithType: IInputChannel.ReceiveAsync(CancellationToken)
  fullName: CoreWCF.Channels.IInputChannel.ReceiveAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: CoreWCF.Channels.IInputChannel.ReceiveAsync(System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: IInputChannel.ReceiveAsync
    fullName: CoreWCF.Channels.IInputChannel.ReceiveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.IInputChannel.ReceiveAsync(System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: IInputChannel.ReceiveAsync
    fullName: CoreWCF.Channels.IInputChannel.ReceiveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.IInputChannel.TryReceiveAsync(System.Threading.CancellationToken)
  commentId: M:CoreWCF.Channels.IInputChannel.TryReceiveAsync(System.Threading.CancellationToken)
  parent: CoreWCF.Channels.IInputChannel
  isExternal: true
  name: TryReceiveAsync(CancellationToken)
  nameWithType: IInputChannel.TryReceiveAsync(CancellationToken)
  fullName: CoreWCF.Channels.IInputChannel.TryReceiveAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: CoreWCF.Channels.IInputChannel.TryReceiveAsync(System.Threading.CancellationToken)
    name: TryReceiveAsync
    nameWithType: IInputChannel.TryReceiveAsync
    fullName: CoreWCF.Channels.IInputChannel.TryReceiveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.IInputChannel.TryReceiveAsync(System.Threading.CancellationToken)
    name: TryReceiveAsync
    nameWithType: IInputChannel.TryReceiveAsync
    fullName: CoreWCF.Channels.IInputChannel.TryReceiveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.IInputChannel.LocalAddress
  commentId: P:CoreWCF.Channels.IInputChannel.LocalAddress
  parent: CoreWCF.Channels.IInputChannel
  isExternal: true
  name: LocalAddress
  nameWithType: IInputChannel.LocalAddress
  fullName: CoreWCF.Channels.IInputChannel.LocalAddress
- uid: CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message)
  commentId: M:CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message)
  parent: CoreWCF.Channels.IOutputChannel
  isExternal: true
  name: SendAsync(Message)
  nameWithType: IOutputChannel.SendAsync(Message)
  fullName: CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message)
  spec.csharp:
  - uid: CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message)
    name: SendAsync
    nameWithType: IOutputChannel.SendAsync
    fullName: CoreWCF.Channels.IOutputChannel.SendAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.Message
    name: Message
    nameWithType: Message
    fullName: CoreWCF.Channels.Message
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message)
    name: SendAsync
    nameWithType: IOutputChannel.SendAsync
    fullName: CoreWCF.Channels.IOutputChannel.SendAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.Message
    name: Message
    nameWithType: Message
    fullName: CoreWCF.Channels.Message
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
  commentId: M:CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
  parent: CoreWCF.Channels.IOutputChannel
  isExternal: true
  name: SendAsync(Message, CancellationToken)
  nameWithType: IOutputChannel.SendAsync(Message, CancellationToken)
  fullName: CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message, System.Threading.CancellationToken)
  spec.csharp:
  - uid: CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: IOutputChannel.SendAsync
    fullName: CoreWCF.Channels.IOutputChannel.SendAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.Message
    name: Message
    nameWithType: Message
    fullName: CoreWCF.Channels.Message
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.IOutputChannel.SendAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: IOutputChannel.SendAsync
    fullName: CoreWCF.Channels.IOutputChannel.SendAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.Message
    name: Message
    nameWithType: Message
    fullName: CoreWCF.Channels.Message
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.IOutputChannel.RemoteAddress
  commentId: P:CoreWCF.Channels.IOutputChannel.RemoteAddress
  parent: CoreWCF.Channels.IOutputChannel
  isExternal: true
  name: RemoteAddress
  nameWithType: IOutputChannel.RemoteAddress
  fullName: CoreWCF.Channels.IOutputChannel.RemoteAddress
- uid: CoreWCF.Channels.IOutputChannel.Via
  commentId: P:CoreWCF.Channels.IOutputChannel.Via
  parent: CoreWCF.Channels.IOutputChannel
  isExternal: true
  name: Via
  nameWithType: IOutputChannel.Via
  fullName: CoreWCF.Channels.IOutputChannel.Via
- uid: CoreWCF.Channels.IChannel.GetProperty``1
  commentId: M:CoreWCF.Channels.IChannel.GetProperty``1
  parent: CoreWCF.Channels.IChannel
  isExternal: true
  name: GetProperty<T>()
  nameWithType: IChannel.GetProperty<T>()
  fullName: CoreWCF.Channels.IChannel.GetProperty<T>()
  nameWithType.vb: IChannel.GetProperty(Of T)()
  fullName.vb: CoreWCF.Channels.IChannel.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
  spec.csharp:
  - uid: CoreWCF.Channels.IChannel.GetProperty``1
    name: GetProperty<T>
    nameWithType: IChannel.GetProperty<T>
    fullName: CoreWCF.Channels.IChannel.GetProperty<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.IChannel.GetProperty``1
    name: GetProperty(Of T)
    nameWithType: IChannel.GetProperty(Of T)
    fullName: CoreWCF.Channels.IChannel.GetProperty(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.IChannel.ChannelDispatcher
  commentId: P:CoreWCF.Channels.IChannel.ChannelDispatcher
  parent: CoreWCF.Channels.IChannel
  isExternal: true
  name: ChannelDispatcher
  nameWithType: IChannel.ChannelDispatcher
  fullName: CoreWCF.Channels.IChannel.ChannelDispatcher
- uid: CoreWCF.ICommunicationObject.Abort
  commentId: M:CoreWCF.ICommunicationObject.Abort
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Abort()
  nameWithType: ICommunicationObject.Abort()
  fullName: CoreWCF.ICommunicationObject.Abort()
  spec.csharp:
  - uid: CoreWCF.ICommunicationObject.Abort
    name: Abort
    nameWithType: ICommunicationObject.Abort
    fullName: CoreWCF.ICommunicationObject.Abort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.ICommunicationObject.Abort
    name: Abort
    nameWithType: ICommunicationObject.Abort
    fullName: CoreWCF.ICommunicationObject.Abort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.ICommunicationObject.CloseAsync
  commentId: M:CoreWCF.ICommunicationObject.CloseAsync
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: CloseAsync()
  nameWithType: ICommunicationObject.CloseAsync()
  fullName: CoreWCF.ICommunicationObject.CloseAsync()
  spec.csharp:
  - uid: CoreWCF.ICommunicationObject.CloseAsync
    name: CloseAsync
    nameWithType: ICommunicationObject.CloseAsync
    fullName: CoreWCF.ICommunicationObject.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.ICommunicationObject.CloseAsync
    name: CloseAsync
    nameWithType: ICommunicationObject.CloseAsync
    fullName: CoreWCF.ICommunicationObject.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
  commentId: M:CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: CloseAsync(CancellationToken)
  nameWithType: ICommunicationObject.CloseAsync(CancellationToken)
  fullName: CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
    name: CloseAsync
    nameWithType: ICommunicationObject.CloseAsync
    fullName: CoreWCF.ICommunicationObject.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
    name: CloseAsync
    nameWithType: ICommunicationObject.CloseAsync
    fullName: CoreWCF.ICommunicationObject.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.ICommunicationObject.OpenAsync
  commentId: M:CoreWCF.ICommunicationObject.OpenAsync
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: OpenAsync()
  nameWithType: ICommunicationObject.OpenAsync()
  fullName: CoreWCF.ICommunicationObject.OpenAsync()
  spec.csharp:
  - uid: CoreWCF.ICommunicationObject.OpenAsync
    name: OpenAsync
    nameWithType: ICommunicationObject.OpenAsync
    fullName: CoreWCF.ICommunicationObject.OpenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.ICommunicationObject.OpenAsync
    name: OpenAsync
    nameWithType: ICommunicationObject.OpenAsync
    fullName: CoreWCF.ICommunicationObject.OpenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
  commentId: M:CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: OpenAsync(CancellationToken)
  nameWithType: ICommunicationObject.OpenAsync(CancellationToken)
  fullName: CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: ICommunicationObject.OpenAsync
    fullName: CoreWCF.ICommunicationObject.OpenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: ICommunicationObject.OpenAsync
    fullName: CoreWCF.ICommunicationObject.OpenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.ICommunicationObject.State
  commentId: P:CoreWCF.ICommunicationObject.State
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: State
  nameWithType: ICommunicationObject.State
  fullName: CoreWCF.ICommunicationObject.State
- uid: CoreWCF.ICommunicationObject.Closed
  commentId: E:CoreWCF.ICommunicationObject.Closed
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Closed
  nameWithType: ICommunicationObject.Closed
  fullName: CoreWCF.ICommunicationObject.Closed
- uid: CoreWCF.ICommunicationObject.Closing
  commentId: E:CoreWCF.ICommunicationObject.Closing
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Closing
  nameWithType: ICommunicationObject.Closing
  fullName: CoreWCF.ICommunicationObject.Closing
- uid: CoreWCF.ICommunicationObject.Faulted
  commentId: E:CoreWCF.ICommunicationObject.Faulted
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Faulted
  nameWithType: ICommunicationObject.Faulted
  fullName: CoreWCF.ICommunicationObject.Faulted
- uid: CoreWCF.ICommunicationObject.Opened
  commentId: E:CoreWCF.ICommunicationObject.Opened
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Opened
  nameWithType: ICommunicationObject.Opened
  fullName: CoreWCF.ICommunicationObject.Opened
- uid: CoreWCF.ICommunicationObject.Opening
  commentId: E:CoreWCF.ICommunicationObject.Opening
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Opening
  nameWithType: ICommunicationObject.Opening
  fullName: CoreWCF.ICommunicationObject.Opening
- uid: CoreWCF.Channels.IInputChannel
  commentId: T:CoreWCF.Channels.IInputChannel
  parent: CoreWCF.Channels
  isExternal: true
  name: IInputChannel
  nameWithType: IInputChannel
  fullName: CoreWCF.Channels.IInputChannel
- uid: CoreWCF.Channels.IOutputChannel
  commentId: T:CoreWCF.Channels.IOutputChannel
  parent: CoreWCF.Channels
  isExternal: true
  name: IOutputChannel
  nameWithType: IOutputChannel
  fullName: CoreWCF.Channels.IOutputChannel
- uid: CoreWCF.Channels.IChannel
  commentId: T:CoreWCF.Channels.IChannel
  parent: CoreWCF.Channels
  isExternal: true
  name: IChannel
  nameWithType: IChannel
  fullName: CoreWCF.Channels.IChannel
- uid: CoreWCF.ICommunicationObject
  commentId: T:CoreWCF.ICommunicationObject
  parent: CoreWCF
  isExternal: true
  name: ICommunicationObject
  nameWithType: ICommunicationObject
  fullName: CoreWCF.ICommunicationObject
- uid: CoreWCF
  commentId: N:CoreWCF
  isExternal: true
  name: CoreWCF
  nameWithType: CoreWCF
  fullName: CoreWCF
