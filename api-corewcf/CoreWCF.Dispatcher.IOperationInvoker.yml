### YamlMime:ManagedReference
items:
- uid: CoreWCF.Dispatcher.IOperationInvoker
  commentId: T:CoreWCF.Dispatcher.IOperationInvoker
  id: IOperationInvoker
  parent: CoreWCF.Dispatcher
  children:
  - CoreWCF.Dispatcher.IOperationInvoker.AllocateInputs
  - CoreWCF.Dispatcher.IOperationInvoker.InvokeAsync(System.Object,System.Object[])
  langs:
  - csharp
  - vb
  name: IOperationInvoker
  nameWithType: IOperationInvoker
  fullName: CoreWCF.Dispatcher.IOperationInvoker
  type: Interface
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  summary: Declares methods that take an object and an array of parameters extracted from a message, invoke a method on that object with those parameters, and return the method&apos;s return value and output parameters.
  remarks: "Implement the &lt;xref:CoreWCF.Dispatcher.IOperationInvoker> interface to control the conversion from an untyped object and array of parameters to a strongly-typed method call on that object. It has a synchronous &lt;xref:CoreWCF.Dispatcher.IOperationInvoker.Invoke%2A> method, which takes an instance and set of inputs of type object and returns an object and a set of outputs of type object. It also has a &lt;xref:CoreWCF.Dispatcher.IOperationInvoker.InvokeBegin%2A> and &lt;xref:CoreWCF.Dispatcher.IOperationInvoker.InvokeEnd%2A> variant.  The &lt;xref:CoreWCF.Dispatcher.IOperationInvoker.IsSynchronous%2A> property specifies whether the synchronous or asynchronous method should be used.  \n\n"
  syntax:
    content: public interface IOperationInvoker
    content.vb: Public Interface IOperationInvoker
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: CoreWCF.Dispatcher.IOperationInvoker.AllocateInputs
  commentId: M:CoreWCF.Dispatcher.IOperationInvoker.AllocateInputs
  id: AllocateInputs
  parent: CoreWCF.Dispatcher.IOperationInvoker
  langs:
  - csharp
  - vb
  name: AllocateInputs()
  nameWithType: IOperationInvoker.AllocateInputs()
  fullName: CoreWCF.Dispatcher.IOperationInvoker.AllocateInputs()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: object[] AllocateInputs()
    return:
      type: System.Object[]
    content.vb: Function AllocateInputs As Object()
  overload: CoreWCF.Dispatcher.IOperationInvoker.AllocateInputs*
- uid: CoreWCF.Dispatcher.IOperationInvoker.InvokeAsync(System.Object,System.Object[])
  commentId: M:CoreWCF.Dispatcher.IOperationInvoker.InvokeAsync(System.Object,System.Object[])
  id: InvokeAsync(System.Object,System.Object[])
  parent: CoreWCF.Dispatcher.IOperationInvoker
  langs:
  - csharp
  - vb
  name: InvokeAsync(Object, Object[])
  nameWithType: IOperationInvoker.InvokeAsync(Object, Object[])
  fullName: CoreWCF.Dispatcher.IOperationInvoker.InvokeAsync(System.Object, System.Object[])
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Dispatcher
  syntax:
    content: ValueTask<(object, object[])> InvokeAsync(object instance, object[] inputs)
    parameters:
    - id: instance
      type: System.Object
    - id: inputs
      type: System.Object[]
    return:
      type: System.Threading.Tasks.ValueTask{System.ValueTuple{System.Object,System.Object[]}}
    content.vb: Function InvokeAsync(instance As Object, inputs As Object()) As ValueTask(Of(Object, Object())(Of Object , Object()))
  overload: CoreWCF.Dispatcher.IOperationInvoker.InvokeAsync*
  nameWithType.vb: IOperationInvoker.InvokeAsync(Object, Object())
  fullName.vb: CoreWCF.Dispatcher.IOperationInvoker.InvokeAsync(System.Object, System.Object())
  name.vb: InvokeAsync(Object, Object())
references:
- uid: CoreWCF.Dispatcher
  commentId: N:CoreWCF.Dispatcher
  isExternal: true
  name: CoreWCF.Dispatcher
  nameWithType: CoreWCF.Dispatcher
  fullName: CoreWCF.Dispatcher
- uid: CoreWCF.Dispatcher.IOperationInvoker.AllocateInputs*
  commentId: Overload:CoreWCF.Dispatcher.IOperationInvoker.AllocateInputs
  isExternal: true
  name: AllocateInputs
  nameWithType: IOperationInvoker.AllocateInputs
  fullName: CoreWCF.Dispatcher.IOperationInvoker.AllocateInputs
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: CoreWCF.Dispatcher.IOperationInvoker.InvokeAsync*
  commentId: Overload:CoreWCF.Dispatcher.IOperationInvoker.InvokeAsync
  isExternal: true
  name: InvokeAsync
  nameWithType: IOperationInvoker.InvokeAsync
  fullName: CoreWCF.Dispatcher.IOperationInvoker.InvokeAsync
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Tasks.ValueTask{System.ValueTuple{System.Object,System.Object[]}}
  commentId: '!:System.Threading.Tasks.ValueTask{System.ValueTuple{System.Object,System.Object[]}}'
  definition: System.Threading.Tasks.ValueTask`1
  name: ValueTask<(, )<Object, Object[]>>
  nameWithType: ValueTask<(, )<Object, Object[]>>
  fullName: System.Threading.Tasks.ValueTask<System.ValueTuple<System.Object, System.Object[]>>
  nameWithType.vb: ValueTask(Of (, )(Of Object, Object()))
  fullName.vb: System.Threading.Tasks.ValueTask(Of System.ValueTuple(Of System.Object, System.Object()))
  name.vb: ValueTask(Of (, )(Of Object, Object()))
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`2
    name: (, )
    nameWithType: (, )
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`2
    name: (, )
    nameWithType: (, )
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.ValueTask`1
  isExternal: true
  name: ValueTask<>
  nameWithType: ValueTask<>
  fullName: System.Threading.Tasks.ValueTask<>
  nameWithType.vb: ValueTask(Of )
  fullName.vb: System.Threading.Tasks.ValueTask(Of )
  name.vb: ValueTask(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
