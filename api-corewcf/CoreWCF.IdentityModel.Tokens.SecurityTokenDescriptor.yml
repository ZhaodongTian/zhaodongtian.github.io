### YamlMime:ManagedReference
items:
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
  id: SecurityTokenDescriptor
  parent: CoreWCF.IdentityModel.Tokens
  children:
  - CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.#ctor
  - CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(System.String)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(System.String,System.DateTime)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress
  - CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AttachedReference
  - CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AuthenticationInfo
  - CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials
  - CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime
  - CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Properties
  - CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.ReplyToAddress
  - CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials
  - CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Subject
  - CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Token
  - CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName
  - CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.TokenType
  - CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.UnattachedReference
  langs:
  - csharp
  - vb
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenDescriptor
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nThis is a place holder for all the attributes related to the issued token.\n"
  syntax:
    content: 'public class SecurityTokenDescriptor : Object'
    content.vb: >-
      Public Class SecurityTokenDescriptor
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(System.String)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(System.String)
  id: AddAuthenticationClaims(System.String)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  - vb
  name: AddAuthenticationClaims(String)
  nameWithType: SecurityTokenDescriptor.AddAuthenticationClaims(String)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(System.String)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nAdds a <xref href=\"CoreWCF.IdentityModel.Claims.Claim\" data-throw-if-not-resolved=\"false\"></xref> for the authentication type to the claim collection of \nthe <xref href=\"CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor\" data-throw-if-not-resolved=\"false\"></xref>"
  syntax:
    content: public void AddAuthenticationClaims(string authType)
    parameters:
    - id: authType
      type: System.String
      description: The authentication type.
    content.vb: Public Sub AddAuthenticationClaims(authType As String)
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(System.String,System.DateTime)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(System.String,System.DateTime)
  id: AddAuthenticationClaims(System.String,System.DateTime)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  - vb
  name: AddAuthenticationClaims(String, DateTime)
  nameWithType: SecurityTokenDescriptor.AddAuthenticationClaims(String, DateTime)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(System.String, System.DateTime)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nAdds <xref href=\"CoreWCF.IdentityModel.Claims.Claim\" data-throw-if-not-resolved=\"false\"></xref>s for the authentication type and the authentication instant \nto the claim collection of the <xref href=\"CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor\" data-throw-if-not-resolved=\"false\"></xref>"
  syntax:
    content: public void AddAuthenticationClaims(string authType, DateTime time)
    parameters:
    - id: authType
      type: System.String
      description: Specifies the authentication type
    - id: time
      type: System.DateTime
      description: Specifies the authentication instant in UTC. If the input is not in UTC, it is converted to UTC.
    content.vb: Public Sub AddAuthenticationClaims(authType As String, time As DateTime)
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.#ctor
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.#ctor
  id: '#ctor'
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  - vb
  name: SecurityTokenDescriptor()
  nameWithType: SecurityTokenDescriptor.SecurityTokenDescriptor()
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.SecurityTokenDescriptor()
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public SecurityTokenDescriptor()
    content.vb: Public Sub New
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress
  id: AppliesToAddress
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  - vb
  name: AppliesToAddress
  nameWithType: SecurityTokenDescriptor.AppliesToAddress
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets or sets the address for the <see cref=\"!:RequestSecurityTokenResponse\"></see> AppliesTo property.\n"
  syntax:
    content: public string AppliesToAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AppliesToAddress As String
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if not an absolute URI.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.ReplyToAddress
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.ReplyToAddress
  id: ReplyToAddress
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  - vb
  name: ReplyToAddress
  nameWithType: SecurityTokenDescriptor.ReplyToAddress
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.ReplyToAddress
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets or sets the address for the <see cref=\"!:RequestSecurityTokenResponse\"></see> ReplyToAddress property.\n"
  syntax:
    content: public string ReplyToAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ReplyToAddress As String
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.ReplyToAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials
  id: EncryptingCredentials
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  - vb
  name: EncryptingCredentials
  nameWithType: SecurityTokenDescriptor.EncryptingCredentials
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets or sets the credentials used to encrypt the token.\n"
  syntax:
    content: public EncryptingCredentials EncryptingCredentials { get; set; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Tokens.EncryptingCredentials
    content.vb: Public Property EncryptingCredentials As EncryptingCredentials
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials
  id: SigningCredentials
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  - vb
  name: SigningCredentials
  nameWithType: SecurityTokenDescriptor.SigningCredentials
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets or sets the credentials used to sign the token.\n"
  syntax:
    content: public SigningCredentials SigningCredentials { get; set; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Tokens.SigningCredentials
    content.vb: Public Property SigningCredentials As SigningCredentials
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AttachedReference
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AttachedReference
  id: AttachedReference
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  - vb
  name: AttachedReference
  nameWithType: SecurityTokenDescriptor.AttachedReference
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AttachedReference
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets or sets the SecurityKeyIdentifierClause when the token is attached \nto the message.\n"
  syntax:
    content: public SecurityKeyIdentifierClause AttachedReference { get; set; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    content.vb: Public Property AttachedReference As SecurityKeyIdentifierClause
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AttachedReference*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName
  id: TokenIssuerName
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  - vb
  name: TokenIssuerName
  nameWithType: SecurityTokenDescriptor.TokenIssuerName
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets or sets the issuer name, which may be used inside the issued token as well.\n"
  syntax:
    content: public string TokenIssuerName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TokenIssuerName As String
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Properties
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Properties
  id: Properties
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: SecurityTokenDescriptor.Properties
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Properties
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets the properties bag to extend the object.\n"
  syntax:
    content: public Dictionary<string, object> Properties { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Public ReadOnly Property Properties As Dictionary(Of String, Object)
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Properties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Token
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Token
  id: Token
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  - vb
  name: Token
  nameWithType: SecurityTokenDescriptor.Token
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Token
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets or sets the issued security token.\n"
  syntax:
    content: public SecurityToken Token { get; set; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Tokens.SecurityToken
    content.vb: Public Property Token As SecurityToken
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Token*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.TokenType
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.TokenType
  id: TokenType
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  - vb
  name: TokenType
  nameWithType: SecurityTokenDescriptor.TokenType
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.TokenType
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets or sets the token type of the issued token.\n"
  syntax:
    content: public string TokenType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TokenType As String
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.TokenType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.UnattachedReference
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.UnattachedReference
  id: UnattachedReference
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  - vb
  name: UnattachedReference
  nameWithType: SecurityTokenDescriptor.UnattachedReference
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.UnattachedReference
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets or sets the unattached token reference to refer to the issued token when it is not \nattached to the message.\n"
  syntax:
    content: public SecurityKeyIdentifierClause UnattachedReference { get; set; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    content.vb: Public Property UnattachedReference As SecurityKeyIdentifierClause
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.UnattachedReference*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime
  id: Lifetime
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  - vb
  name: Lifetime
  nameWithType: SecurityTokenDescriptor.Lifetime
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets or sets the lifetime information for the issued token.\n"
  syntax:
    content: public Lifetime Lifetime { get; set; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Protocols.WSTrust.Lifetime
    content.vb: Public Property Lifetime As Lifetime
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Subject
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Subject
  id: Subject
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  - vb
  name: Subject
  nameWithType: SecurityTokenDescriptor.Subject
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Subject
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets or sets the OutputClaims to be included in the issued token.\n"
  syntax:
    content: public ClaimsIdentity Subject { get; set; }
    parameters: []
    return:
      type: System.Security.Claims.ClaimsIdentity
    content.vb: Public Property Subject As ClaimsIdentity
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Subject*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AuthenticationInfo
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AuthenticationInfo
  id: AuthenticationInfo
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  - vb
  name: AuthenticationInfo
  nameWithType: SecurityTokenDescriptor.AuthenticationInfo
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AuthenticationInfo
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets or sets the AuthenticationInformation.\n"
  syntax:
    content: public AuthenticationInformation AuthenticationInfo { get; set; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Claims.AuthenticationInformation
    content.vb: Public Property AuthenticationInfo As AuthenticationInformation
  overload: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AuthenticationInfo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: CoreWCF.IdentityModel.Tokens
  commentId: N:CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: CoreWCF.IdentityModel.Tokens
  nameWithType: CoreWCF.IdentityModel.Tokens
  fullName: CoreWCF.IdentityModel.Tokens
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims
  isExternal: true
  name: AddAuthenticationClaims
  nameWithType: SecurityTokenDescriptor.AddAuthenticationClaims
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.#ctor*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.#ctor
  isExternal: true
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenDescriptor.SecurityTokenDescriptor
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.SecurityTokenDescriptor
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress
  isExternal: true
  name: AppliesToAddress
  nameWithType: SecurityTokenDescriptor.AppliesToAddress
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.ReplyToAddress*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.ReplyToAddress
  isExternal: true
  name: ReplyToAddress
  nameWithType: SecurityTokenDescriptor.ReplyToAddress
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.ReplyToAddress
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials
  isExternal: true
  name: EncryptingCredentials
  nameWithType: SecurityTokenDescriptor.EncryptingCredentials
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials
- uid: CoreWCF.IdentityModel.Tokens.EncryptingCredentials
  commentId: T:CoreWCF.IdentityModel.Tokens.EncryptingCredentials
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials
  fullName: CoreWCF.IdentityModel.Tokens.EncryptingCredentials
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials
  isExternal: true
  name: SigningCredentials
  nameWithType: SecurityTokenDescriptor.SigningCredentials
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials
- uid: CoreWCF.IdentityModel.Tokens.SigningCredentials
  commentId: T:CoreWCF.IdentityModel.Tokens.SigningCredentials
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SigningCredentials
  nameWithType: SigningCredentials
  fullName: CoreWCF.IdentityModel.Tokens.SigningCredentials
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AttachedReference*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AttachedReference
  isExternal: true
  name: AttachedReference
  nameWithType: SecurityTokenDescriptor.AttachedReference
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AttachedReference
- uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
  commentId: T:CoreWCF.IdentityModel.SecurityKeyIdentifierClause
  parent: CoreWCF.IdentityModel
  isExternal: true
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
- uid: CoreWCF.IdentityModel
  commentId: N:CoreWCF.IdentityModel
  isExternal: true
  name: CoreWCF.IdentityModel
  nameWithType: CoreWCF.IdentityModel
  fullName: CoreWCF.IdentityModel
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName
  isExternal: true
  name: TokenIssuerName
  nameWithType: SecurityTokenDescriptor.TokenIssuerName
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Properties*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Properties
  isExternal: true
  name: Properties
  nameWithType: SecurityTokenDescriptor.Properties
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Properties
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: '!:System.Collections.Generic.Dictionary{System.String,System.Object}'
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: System.Collections.Generic.Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: System.Collections.Generic.Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Token*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Token
  isExternal: true
  name: Token
  nameWithType: SecurityTokenDescriptor.Token
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Token
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityToken
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.TokenType*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.TokenType
  isExternal: true
  name: TokenType
  nameWithType: SecurityTokenDescriptor.TokenType
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.TokenType
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.UnattachedReference*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.UnattachedReference
  isExternal: true
  name: UnattachedReference
  nameWithType: SecurityTokenDescriptor.UnattachedReference
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.UnattachedReference
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime
  isExternal: true
  name: Lifetime
  nameWithType: SecurityTokenDescriptor.Lifetime
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime
- uid: CoreWCF.IdentityModel.Protocols.WSTrust.Lifetime
  commentId: T:CoreWCF.IdentityModel.Protocols.WSTrust.Lifetime
  parent: CoreWCF.IdentityModel.Protocols.WSTrust
  isExternal: true
  name: Lifetime
  nameWithType: Lifetime
  fullName: CoreWCF.IdentityModel.Protocols.WSTrust.Lifetime
- uid: CoreWCF.IdentityModel.Protocols.WSTrust
  commentId: N:CoreWCF.IdentityModel.Protocols.WSTrust
  isExternal: true
  name: CoreWCF.IdentityModel.Protocols.WSTrust
  nameWithType: CoreWCF.IdentityModel.Protocols.WSTrust
  fullName: CoreWCF.IdentityModel.Protocols.WSTrust
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Subject*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Subject
  isExternal: true
  name: Subject
  nameWithType: SecurityTokenDescriptor.Subject
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.Subject
- uid: System.Security.Claims.ClaimsIdentity
  commentId: '!:System.Security.Claims.ClaimsIdentity'
  isExternal: true
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AuthenticationInfo*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AuthenticationInfo
  isExternal: true
  name: AuthenticationInfo
  nameWithType: SecurityTokenDescriptor.AuthenticationInfo
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor.AuthenticationInfo
- uid: CoreWCF.IdentityModel.Claims.AuthenticationInformation
  commentId: T:CoreWCF.IdentityModel.Claims.AuthenticationInformation
  parent: CoreWCF.IdentityModel.Claims
  isExternal: true
  name: AuthenticationInformation
  nameWithType: AuthenticationInformation
  fullName: CoreWCF.IdentityModel.Claims.AuthenticationInformation
- uid: CoreWCF.IdentityModel.Claims
  commentId: N:CoreWCF.IdentityModel.Claims
  isExternal: true
  name: CoreWCF.IdentityModel.Claims
  nameWithType: CoreWCF.IdentityModel.Claims
  fullName: CoreWCF.IdentityModel.Claims
