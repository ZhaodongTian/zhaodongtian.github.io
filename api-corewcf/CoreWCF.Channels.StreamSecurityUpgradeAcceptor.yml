### YamlMime:ManagedReference
items:
- uid: CoreWCF.Channels.StreamSecurityUpgradeAcceptor
  commentId: T:CoreWCF.Channels.StreamSecurityUpgradeAcceptor
  id: StreamSecurityUpgradeAcceptor
  parent: CoreWCF.Channels
  children:
  - CoreWCF.Channels.StreamSecurityUpgradeAcceptor.#ctor
  - CoreWCF.Channels.StreamSecurityUpgradeAcceptor.GetRemoteSecurity
  langs:
  - csharp
  - vb
  name: StreamSecurityUpgradeAcceptor
  nameWithType: StreamSecurityUpgradeAcceptor
  fullName: CoreWCF.Channels.StreamSecurityUpgradeAcceptor
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  summary: To implement a custom security upgrade acceptor, inherit from this `abstract`  base class.
  remarks: "This class is used with <xref:System.ServiceModel.Channels.StreamSecurityUpgradeInitiator> and <xref:CoreWCF.Channels.StreamSecurityUpgradeProvider> to implement a security stream upgrade.  \n\nFor a detailed description of the upgrade process, see <xref:CoreWCF.Channels.StreamUpgradeProvider>.  \n\n"
  syntax:
    content: 'public abstract class StreamSecurityUpgradeAcceptor : StreamUpgradeAcceptor'
    content.vb: >-
      Public MustInherit Class StreamSecurityUpgradeAcceptor
          Inherits StreamUpgradeAcceptor
  inheritance:
  - System.Object
  - CoreWCF.Channels.StreamUpgradeAcceptor
  inheritedMembers:
  - CoreWCF.Channels.StreamUpgradeAcceptor.CanUpgrade(System.String)
  - CoreWCF.Channels.StreamUpgradeAcceptor.AcceptUpgradeAsync(System.IO.Stream)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: CoreWCF.Channels.StreamSecurityUpgradeAcceptor.#ctor
  commentId: M:CoreWCF.Channels.StreamSecurityUpgradeAcceptor.#ctor
  id: '#ctor'
  parent: CoreWCF.Channels.StreamSecurityUpgradeAcceptor
  langs:
  - csharp
  - vb
  name: StreamSecurityUpgradeAcceptor()
  summary: Initializes a new instance of the [StreamSecurityUpgradeAcceptor](xref:CoreWCF.Channels.StreamSecurityUpgradeAcceptor) class.
  nameWithType: StreamSecurityUpgradeAcceptor.StreamSecurityUpgradeAcceptor()
  fullName: CoreWCF.Channels.StreamSecurityUpgradeAcceptor.StreamSecurityUpgradeAcceptor()
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: protected StreamSecurityUpgradeAcceptor()
    content.vb: Protected Sub New
  overload: CoreWCF.Channels.StreamSecurityUpgradeAcceptor.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CoreWCF.Channels.StreamSecurityUpgradeAcceptor.GetRemoteSecurity
  commentId: M:CoreWCF.Channels.StreamSecurityUpgradeAcceptor.GetRemoteSecurity
  id: GetRemoteSecurity
  parent: CoreWCF.Channels.StreamSecurityUpgradeAcceptor
  langs:
  - csharp
  - vb
  name: GetRemoteSecurity()
  summary: Gets the security message property provided on the stream for performing custom security negotiation based on the information provided in the security context.
  nameWithType: StreamSecurityUpgradeAcceptor.GetRemoteSecurity()
  fullName: CoreWCF.Channels.StreamSecurityUpgradeAcceptor.GetRemoteSecurity()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: public abstract SecurityMessageProperty GetRemoteSecurity()
    return:
      type: CoreWCF.Security.SecurityMessageProperty
      description: Returns the [SecurityMessageProperty](xref:CoreWCF.Security.SecurityMessageProperty).
    content.vb: Public MustOverride Function GetRemoteSecurity As SecurityMessageProperty
  overload: CoreWCF.Channels.StreamSecurityUpgradeAcceptor.GetRemoteSecurity*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  remarks: This information is useful for implementing a stream-level authentication mechanism based on the identities provided in the security context.
references:
- uid: CoreWCF.Channels
  commentId: N:CoreWCF.Channels
  isExternal: true
  name: CoreWCF.Channels
  nameWithType: CoreWCF.Channels
  fullName: CoreWCF.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CoreWCF.Channels.StreamUpgradeAcceptor
  commentId: T:CoreWCF.Channels.StreamUpgradeAcceptor
  parent: CoreWCF.Channels
  isExternal: true
  name: StreamUpgradeAcceptor
  nameWithType: StreamUpgradeAcceptor
  fullName: CoreWCF.Channels.StreamUpgradeAcceptor
- uid: CoreWCF.Channels.StreamUpgradeAcceptor.CanUpgrade(System.String)
  commentId: M:CoreWCF.Channels.StreamUpgradeAcceptor.CanUpgrade(System.String)
  parent: CoreWCF.Channels.StreamUpgradeAcceptor
  isExternal: true
  name: CanUpgrade(String)
  nameWithType: StreamUpgradeAcceptor.CanUpgrade(String)
  fullName: CoreWCF.Channels.StreamUpgradeAcceptor.CanUpgrade(System.String)
  spec.csharp:
  - uid: CoreWCF.Channels.StreamUpgradeAcceptor.CanUpgrade(System.String)
    name: CanUpgrade
    nameWithType: StreamUpgradeAcceptor.CanUpgrade
    fullName: CoreWCF.Channels.StreamUpgradeAcceptor.CanUpgrade
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.StreamUpgradeAcceptor.CanUpgrade(System.String)
    name: CanUpgrade
    nameWithType: StreamUpgradeAcceptor.CanUpgrade
    fullName: CoreWCF.Channels.StreamUpgradeAcceptor.CanUpgrade
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.StreamUpgradeAcceptor.AcceptUpgradeAsync(System.IO.Stream)
  commentId: M:CoreWCF.Channels.StreamUpgradeAcceptor.AcceptUpgradeAsync(System.IO.Stream)
  parent: CoreWCF.Channels.StreamUpgradeAcceptor
  isExternal: true
  name: AcceptUpgradeAsync(Stream)
  nameWithType: StreamUpgradeAcceptor.AcceptUpgradeAsync(Stream)
  fullName: CoreWCF.Channels.StreamUpgradeAcceptor.AcceptUpgradeAsync(System.IO.Stream)
  spec.csharp:
  - uid: CoreWCF.Channels.StreamUpgradeAcceptor.AcceptUpgradeAsync(System.IO.Stream)
    name: AcceptUpgradeAsync
    nameWithType: StreamUpgradeAcceptor.AcceptUpgradeAsync
    fullName: CoreWCF.Channels.StreamUpgradeAcceptor.AcceptUpgradeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.StreamUpgradeAcceptor.AcceptUpgradeAsync(System.IO.Stream)
    name: AcceptUpgradeAsync
    nameWithType: StreamUpgradeAcceptor.AcceptUpgradeAsync
    fullName: CoreWCF.Channels.StreamUpgradeAcceptor.AcceptUpgradeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Channels.StreamSecurityUpgradeAcceptor.#ctor*
  commentId: Overload:CoreWCF.Channels.StreamSecurityUpgradeAcceptor.#ctor
  isExternal: true
  name: StreamSecurityUpgradeAcceptor
  nameWithType: StreamSecurityUpgradeAcceptor.StreamSecurityUpgradeAcceptor
  fullName: CoreWCF.Channels.StreamSecurityUpgradeAcceptor.StreamSecurityUpgradeAcceptor
- uid: CoreWCF.Channels.StreamSecurityUpgradeAcceptor.GetRemoteSecurity*
  commentId: Overload:CoreWCF.Channels.StreamSecurityUpgradeAcceptor.GetRemoteSecurity
  isExternal: true
  name: GetRemoteSecurity
  nameWithType: StreamSecurityUpgradeAcceptor.GetRemoteSecurity
  fullName: CoreWCF.Channels.StreamSecurityUpgradeAcceptor.GetRemoteSecurity
- uid: CoreWCF.Security.SecurityMessageProperty
  commentId: T:CoreWCF.Security.SecurityMessageProperty
  parent: CoreWCF.Security
  isExternal: true
  name: SecurityMessageProperty
  nameWithType: SecurityMessageProperty
  fullName: CoreWCF.Security.SecurityMessageProperty
- uid: CoreWCF.Security
  commentId: N:CoreWCF.Security
  isExternal: true
  name: CoreWCF.Security
  nameWithType: CoreWCF.Security
  fullName: CoreWCF.Security
