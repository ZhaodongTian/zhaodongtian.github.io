### YamlMime:ManagedReference
items:
- uid: CoreWCF.Channels.ISessionChannel`1
  commentId: T:CoreWCF.Channels.ISessionChannel`1
  id: ISessionChannel`1
  parent: CoreWCF.Channels
  children:
  - CoreWCF.Channels.ISessionChannel`1.Session
  langs:
  - csharp
  - vb
  name: ISessionChannel<TSession>
  nameWithType: ISessionChannel<TSession>
  fullName: CoreWCF.Channels.ISessionChannel<TSession>
  type: Interface
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  summary: Defines the interface that associates a channel with a specific type of session.
  remarks: "The <xref:CoreWCF.Channels.ISessionChannel%601> interface is the base interface for session-based channels. It associates the type of session with the channel by setting the generic type parameter `TSession` to a type that implements the <xref:CoreWCF.Channels.ISession> interface in a way that reflects its role in the message exchange. For example, the `TSession` is set to <xref:CoreWCF.Channels.IInputSession> for an incoming session on the receiving side of a one-way communication, to <xref:CoreWCF.Channels.IOutputSession> for an outgoing session on the sending side of a one-way communication, and to <xref:CoreWCF.Channels.IDuplexSession> for a duplex session for a bi-directional communication pattern.  \n\nThe <xref:CoreWCF.Channels.ISessionChannel%601> interface provides a <xref:CoreWCF.Channels.ISessionChannel%601.Session%2A> property to retrieve the session with which the channel is associated.  \n\n"
  syntax:
    content: >-
      public interface ISessionChannel<TSession>
          where TSession : ISession
    typeParameters:
    - id: TSession
      description: "The type of <xref:CoreWCF.Channels.ISession> associated with the cannel."
    content.vb: Public Interface ISessionChannel(Of TSession As ISession)
  nameWithType.vb: ISessionChannel(Of TSession)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: CoreWCF.Channels.ISessionChannel(Of TSession)
  name.vb: ISessionChannel(Of TSession)
- uid: CoreWCF.Channels.ISessionChannel`1.Session
  commentId: P:CoreWCF.Channels.ISessionChannel`1.Session
  id: Session
  parent: CoreWCF.Channels.ISessionChannel`1
  langs:
  - csharp
  - vb
  name: Session
  nameWithType: ISessionChannel<TSession>.Session
  fullName: CoreWCF.Channels.ISessionChannel<TSession>.Session
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  summary: Gets the type of session associated with this channel.
  syntax:
    content: TSession Session { get; }
    parameters: []
    return:
      type: '{TSession}'
      description: "The type of <xref:CoreWCF.Channels.ISession> associated with this channel."
    content.vb: ReadOnly Property Session As TSession
  overload: CoreWCF.Channels.ISessionChannel`1.Session*
  nameWithType.vb: ISessionChannel(Of TSession).Session
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: CoreWCF.Channels.ISessionChannel(Of TSession).Session
references:
- uid: CoreWCF.Channels
  commentId: N:CoreWCF.Channels
  isExternal: true
  name: CoreWCF.Channels
  nameWithType: CoreWCF.Channels
  fullName: CoreWCF.Channels
- uid: CoreWCF.Channels.ISessionChannel`1.Session*
  commentId: Overload:CoreWCF.Channels.ISessionChannel`1.Session
  isExternal: true
  name: Session
  nameWithType: ISessionChannel<TSession>.Session
  fullName: CoreWCF.Channels.ISessionChannel<TSession>.Session
  nameWithType.vb: ISessionChannel(Of TSession).Session
  fullName.vb: CoreWCF.Channels.ISessionChannel(Of TSession).Session
- uid: '{TSession}'
  commentId: '!:TSession'
  definition: TSession
  name: TSession
  nameWithType: TSession
  fullName: TSession
- uid: TSession
  commentId: '!:TSession'
  name: TSession
  nameWithType: TSession
  fullName: TSession
