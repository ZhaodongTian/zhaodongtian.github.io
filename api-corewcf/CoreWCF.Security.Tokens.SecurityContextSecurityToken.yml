### YamlMime:ManagedReference
items:
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken
  commentId: T:CoreWCF.Security.Tokens.SecurityContextSecurityToken
  id: SecurityContextSecurityToken
  parent: CoreWCF.Security.Tokens
  children:
  - CoreWCF.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.Byte[],System.DateTime,System.DateTime)
  - CoreWCF.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime)
  - CoreWCF.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy})
  - CoreWCF.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Xml.UniqueId,System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy})
  - CoreWCF.Security.Tokens.SecurityContextSecurityToken.AuthorizationPolicies
  - CoreWCF.Security.Tokens.SecurityContextSecurityToken.BootstrapMessageProperty
  - CoreWCF.Security.Tokens.SecurityContextSecurityToken.CanCreateKeyIdentifierClause``1
  - CoreWCF.Security.Tokens.SecurityContextSecurityToken.ContextId
  - CoreWCF.Security.Tokens.SecurityContextSecurityToken.CreateKeyIdentifierClause``1
  - CoreWCF.Security.Tokens.SecurityContextSecurityToken.Dispose
  - CoreWCF.Security.Tokens.SecurityContextSecurityToken.Id
  - CoreWCF.Security.Tokens.SecurityContextSecurityToken.IsCookieMode
  - CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyEffectiveTime
  - CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyExpirationTime
  - CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyGeneration
  - CoreWCF.Security.Tokens.SecurityContextSecurityToken.MatchesKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  - CoreWCF.Security.Tokens.SecurityContextSecurityToken.SecurityKeys
  - CoreWCF.Security.Tokens.SecurityContextSecurityToken.ToString
  - CoreWCF.Security.Tokens.SecurityContextSecurityToken.ValidFrom
  - CoreWCF.Security.Tokens.SecurityContextSecurityToken.ValidTo
  langs:
  - csharp
  - vb
  name: SecurityContextSecurityToken
  nameWithType: SecurityContextSecurityToken
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  summary: Represents the token defined by the WS-SecureConversation specification.
  remarks: "An instance of this class contains key material along with authentication information that represents the client. The user selects the particular cryptographic algorithm to use with it.  \n\n"
  syntax:
    content: 'public class SecurityContextSecurityToken : SecurityToken'
    content.vb: >-
      Public Class SecurityContextSecurityToken
          Inherits SecurityToken
  inheritance:
  - System.Object
  - CoreWCF.IdentityModel.Tokens.SecurityToken
  implements:
  - System.IDisposable
  inheritedMembers:
  - CoreWCF.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.Byte[],System.DateTime,System.DateTime)
  commentId: M:CoreWCF.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.Byte[],System.DateTime,System.DateTime)
  id: '#ctor(System.Xml.UniqueId,System.Byte[],System.DateTime,System.DateTime)'
  parent: CoreWCF.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  - vb
  name: SecurityContextSecurityToken(UniqueId, Byte[], DateTime, DateTime)
  nameWithType: SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId, Byte[], DateTime, DateTime)
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.SecurityContextSecurityToken(System.Xml.UniqueId, System.Byte[], System.DateTime, System.DateTime)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public SecurityContextSecurityToken(UniqueId contextId, byte[] key, DateTime validFrom, DateTime validTo)
    parameters:
    - id: contextId
      type: System.Xml.UniqueId
    - id: key
      type: System.Byte[]
    - id: validFrom
      type: System.DateTime
    - id: validTo
      type: System.DateTime
    content.vb: Public Sub New(contextId As UniqueId, key As Byte(), validFrom As DateTime, validTo As DateTime)
  overload: CoreWCF.Security.Tokens.SecurityContextSecurityToken.#ctor*
  nameWithType.vb: SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId, Byte(), DateTime, DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.Security.Tokens.SecurityContextSecurityToken.SecurityContextSecurityToken(System.Xml.UniqueId, System.Byte(), System.DateTime, System.DateTime)
  name.vb: SecurityContextSecurityToken(UniqueId, Byte(), DateTime, DateTime)
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime)
  commentId: M:CoreWCF.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime)
  id: '#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime)'
  parent: CoreWCF.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  - vb
  name: SecurityContextSecurityToken(UniqueId, String, Byte[], DateTime, DateTime)
  nameWithType: SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId, String, Byte[], DateTime, DateTime)
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.SecurityContextSecurityToken(System.Xml.UniqueId, System.String, System.Byte[], System.DateTime, System.DateTime)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public SecurityContextSecurityToken(UniqueId contextId, string id, byte[] key, DateTime validFrom, DateTime validTo)
    parameters:
    - id: contextId
      type: System.Xml.UniqueId
    - id: id
      type: System.String
    - id: key
      type: System.Byte[]
    - id: validFrom
      type: System.DateTime
    - id: validTo
      type: System.DateTime
    content.vb: Public Sub New(contextId As UniqueId, id As String, key As Byte(), validFrom As DateTime, validTo As DateTime)
  overload: CoreWCF.Security.Tokens.SecurityContextSecurityToken.#ctor*
  nameWithType.vb: SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId, String, Byte(), DateTime, DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.Security.Tokens.SecurityContextSecurityToken.SecurityContextSecurityToken(System.Xml.UniqueId, System.String, System.Byte(), System.DateTime, System.DateTime)
  name.vb: SecurityContextSecurityToken(UniqueId, String, Byte(), DateTime, DateTime)
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy})
  commentId: M:CoreWCF.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy})
  id: '#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy})'
  parent: CoreWCF.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  - vb
  name: SecurityContextSecurityToken(UniqueId, String, Byte[], DateTime, DateTime, ReadOnlyCollection<IAuthorizationPolicy>)
  nameWithType: SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId, String, Byte[], DateTime, DateTime, ReadOnlyCollection<IAuthorizationPolicy>)
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.SecurityContextSecurityToken(System.Xml.UniqueId, System.String, System.Byte[], System.DateTime, System.DateTime, System.Collections.ObjectModel.ReadOnlyCollection<CoreWCF.IdentityModel.Policy.IAuthorizationPolicy>)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public SecurityContextSecurityToken(UniqueId contextId, string id, byte[] key, DateTime validFrom, DateTime validTo, ReadOnlyCollection<IAuthorizationPolicy> authorizationPolicies)
    parameters:
    - id: contextId
      type: System.Xml.UniqueId
    - id: id
      type: System.String
    - id: key
      type: System.Byte[]
    - id: validFrom
      type: System.DateTime
    - id: validTo
      type: System.DateTime
    - id: authorizationPolicies
      type: System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy}
    content.vb: Public Sub New(contextId As UniqueId, id As String, key As Byte(), validFrom As DateTime, validTo As DateTime, authorizationPolicies As ReadOnlyCollection(Of IAuthorizationPolicy))
  overload: CoreWCF.Security.Tokens.SecurityContextSecurityToken.#ctor*
  nameWithType.vb: SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId, String, Byte(), DateTime, DateTime, ReadOnlyCollection(Of IAuthorizationPolicy))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.Security.Tokens.SecurityContextSecurityToken.SecurityContextSecurityToken(System.Xml.UniqueId, System.String, System.Byte(), System.DateTime, System.DateTime, System.Collections.ObjectModel.ReadOnlyCollection(Of CoreWCF.IdentityModel.Policy.IAuthorizationPolicy))
  name.vb: SecurityContextSecurityToken(UniqueId, String, Byte(), DateTime, DateTime, ReadOnlyCollection(Of IAuthorizationPolicy))
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Xml.UniqueId,System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy})
  commentId: M:CoreWCF.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Xml.UniqueId,System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy})
  id: '#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Xml.UniqueId,System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy})'
  parent: CoreWCF.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  - vb
  name: SecurityContextSecurityToken(UniqueId, String, Byte[], DateTime, DateTime, UniqueId, DateTime, DateTime, ReadOnlyCollection<IAuthorizationPolicy>)
  nameWithType: SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId, String, Byte[], DateTime, DateTime, UniqueId, DateTime, DateTime, ReadOnlyCollection<IAuthorizationPolicy>)
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.SecurityContextSecurityToken(System.Xml.UniqueId, System.String, System.Byte[], System.DateTime, System.DateTime, System.Xml.UniqueId, System.DateTime, System.DateTime, System.Collections.ObjectModel.ReadOnlyCollection<CoreWCF.IdentityModel.Policy.IAuthorizationPolicy>)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public SecurityContextSecurityToken(UniqueId contextId, string id, byte[] key, DateTime validFrom, DateTime validTo, UniqueId keyGeneration, DateTime keyEffectiveTime, DateTime keyExpirationTime, ReadOnlyCollection<IAuthorizationPolicy> authorizationPolicies)
    parameters:
    - id: contextId
      type: System.Xml.UniqueId
    - id: id
      type: System.String
    - id: key
      type: System.Byte[]
    - id: validFrom
      type: System.DateTime
    - id: validTo
      type: System.DateTime
    - id: keyGeneration
      type: System.Xml.UniqueId
    - id: keyEffectiveTime
      type: System.DateTime
    - id: keyExpirationTime
      type: System.DateTime
    - id: authorizationPolicies
      type: System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy}
    content.vb: Public Sub New(contextId As UniqueId, id As String, key As Byte(), validFrom As DateTime, validTo As DateTime, keyGeneration As UniqueId, keyEffectiveTime As DateTime, keyExpirationTime As DateTime, authorizationPolicies As ReadOnlyCollection(Of IAuthorizationPolicy))
  overload: CoreWCF.Security.Tokens.SecurityContextSecurityToken.#ctor*
  nameWithType.vb: SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId, String, Byte(), DateTime, DateTime, UniqueId, DateTime, DateTime, ReadOnlyCollection(Of IAuthorizationPolicy))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.Security.Tokens.SecurityContextSecurityToken.SecurityContextSecurityToken(System.Xml.UniqueId, System.String, System.Byte(), System.DateTime, System.DateTime, System.Xml.UniqueId, System.DateTime, System.DateTime, System.Collections.ObjectModel.ReadOnlyCollection(Of CoreWCF.IdentityModel.Policy.IAuthorizationPolicy))
  name.vb: SecurityContextSecurityToken(UniqueId, String, Byte(), DateTime, DateTime, UniqueId, DateTime, DateTime, ReadOnlyCollection(Of IAuthorizationPolicy))
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.ToString
  commentId: M:CoreWCF.Security.Tokens.SecurityContextSecurityToken.ToString
  id: ToString
  parent: CoreWCF.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SecurityContextSecurityToken.ToString()
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.ToString()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: CoreWCF.Security.Tokens.SecurityContextSecurityToken.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.CanCreateKeyIdentifierClause``1
  commentId: M:CoreWCF.Security.Tokens.SecurityContextSecurityToken.CanCreateKeyIdentifierClause``1
  id: CanCreateKeyIdentifierClause``1
  parent: CoreWCF.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  - vb
  name: CanCreateKeyIdentifierClause<T>()
  nameWithType: SecurityContextSecurityToken.CanCreateKeyIdentifierClause<T>()
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.CanCreateKeyIdentifierClause<T>()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: >-
      public override bool CanCreateKeyIdentifierClause<T>()
          where T : SecurityKeyIdentifierClause
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Overrides Function CanCreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) As Boolean
  overridden: CoreWCF.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
  overload: CoreWCF.Security.Tokens.SecurityContextSecurityToken.CanCreateKeyIdentifierClause*
  nameWithType.vb: SecurityContextSecurityToken.CanCreateKeyIdentifierClause(Of T)()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: CoreWCF.Security.Tokens.SecurityContextSecurityToken.CanCreateKeyIdentifierClause(Of T)()
  name.vb: CanCreateKeyIdentifierClause(Of T)()
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.CreateKeyIdentifierClause``1
  commentId: M:CoreWCF.Security.Tokens.SecurityContextSecurityToken.CreateKeyIdentifierClause``1
  id: CreateKeyIdentifierClause``1
  parent: CoreWCF.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  - vb
  name: CreateKeyIdentifierClause<T>()
  nameWithType: SecurityContextSecurityToken.CreateKeyIdentifierClause<T>()
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.CreateKeyIdentifierClause<T>()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: >-
      public override T CreateKeyIdentifierClause<T>()
          where T : SecurityKeyIdentifierClause
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Overrides Function CreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) As T
  overridden: CoreWCF.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
  overload: CoreWCF.Security.Tokens.SecurityContextSecurityToken.CreateKeyIdentifierClause*
  nameWithType.vb: SecurityContextSecurityToken.CreateKeyIdentifierClause(Of T)()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: CoreWCF.Security.Tokens.SecurityContextSecurityToken.CreateKeyIdentifierClause(Of T)()
  name.vb: CreateKeyIdentifierClause(Of T)()
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.MatchesKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  commentId: M:CoreWCF.Security.Tokens.SecurityContextSecurityToken.MatchesKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  id: MatchesKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  parent: CoreWCF.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  - vb
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityContextSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.MatchesKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public override bool MatchesKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)
    parameters:
    - id: keyIdentifierClause
      type: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    return:
      type: System.Boolean
    content.vb: Public Overrides Function MatchesKeyIdentifierClause(keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean
  overridden: CoreWCF.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  overload: CoreWCF.Security.Tokens.SecurityContextSecurityToken.MatchesKeyIdentifierClause*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.Dispose
  commentId: M:CoreWCF.Security.Tokens.SecurityContextSecurityToken.Dispose
  id: Dispose
  parent: CoreWCF.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SecurityContextSecurityToken.Dispose()
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.Dispose()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: CoreWCF.Security.Tokens.SecurityContextSecurityToken.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.BootstrapMessageProperty
  commentId: P:CoreWCF.Security.Tokens.SecurityContextSecurityToken.BootstrapMessageProperty
  id: BootstrapMessageProperty
  parent: CoreWCF.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  - vb
  name: BootstrapMessageProperty
  nameWithType: SecurityContextSecurityToken.BootstrapMessageProperty
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.BootstrapMessageProperty
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  summary: "\nGets or Sets the SecurityMessageProperty extracted from \nthe Bootstrap message. This will contain the original tokens\nthat the client used to Authenticate with the service. By \ndefault, this is turned off. To turn this feature on, add a custom \nServiceCredentialsSecurityTokenManager and override  \nCreateSecurityTokenManager. Create the SecurityContextToken Authenticator by calling \nServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator\nwith &apos;preserveBootstrapTokens&apos; parameter to true. \nIf there are any UserNameSecurityToken in the bootstrap message, the password in\nthese tokens will be removed. When &apos;Cookie&apos; mode SCT is enabled the BootstrapMessageProperty\nis not preserved in the Cookie. To preserve the bootstrap tokens in the CookieMode case\nwrite a custom Serializer and serialize the property as part of the cookie.\n"
  syntax:
    content: public SecurityMessageProperty BootstrapMessageProperty { get; set; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityMessageProperty
    content.vb: Public Property BootstrapMessageProperty As SecurityMessageProperty
  overload: CoreWCF.Security.Tokens.SecurityContextSecurityToken.BootstrapMessageProperty*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.Id
  commentId: P:CoreWCF.Security.Tokens.SecurityContextSecurityToken.Id
  id: Id
  parent: CoreWCF.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: SecurityContextSecurityToken.Id
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.Id
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public override string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Id As String
  overridden: CoreWCF.IdentityModel.Tokens.SecurityToken.Id
  overload: CoreWCF.Security.Tokens.SecurityContextSecurityToken.Id*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.ContextId
  commentId: P:CoreWCF.Security.Tokens.SecurityContextSecurityToken.ContextId
  id: ContextId
  parent: CoreWCF.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  - vb
  name: ContextId
  nameWithType: SecurityContextSecurityToken.ContextId
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.ContextId
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public UniqueId ContextId { get; }
    parameters: []
    return:
      type: System.Xml.UniqueId
    content.vb: Public ReadOnly Property ContextId As UniqueId
  overload: CoreWCF.Security.Tokens.SecurityContextSecurityToken.ContextId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyGeneration
  commentId: P:CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyGeneration
  id: KeyGeneration
  parent: CoreWCF.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  - vb
  name: KeyGeneration
  nameWithType: SecurityContextSecurityToken.KeyGeneration
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyGeneration
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public UniqueId KeyGeneration { get; }
    parameters: []
    return:
      type: System.Xml.UniqueId
    content.vb: Public ReadOnly Property KeyGeneration As UniqueId
  overload: CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyGeneration*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyEffectiveTime
  commentId: P:CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyEffectiveTime
  id: KeyEffectiveTime
  parent: CoreWCF.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  - vb
  name: KeyEffectiveTime
  nameWithType: SecurityContextSecurityToken.KeyEffectiveTime
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyEffectiveTime
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public DateTime KeyEffectiveTime { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property KeyEffectiveTime As DateTime
  overload: CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyEffectiveTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyExpirationTime
  commentId: P:CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyExpirationTime
  id: KeyExpirationTime
  parent: CoreWCF.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  - vb
  name: KeyExpirationTime
  nameWithType: SecurityContextSecurityToken.KeyExpirationTime
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyExpirationTime
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public DateTime KeyExpirationTime { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property KeyExpirationTime As DateTime
  overload: CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyExpirationTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.AuthorizationPolicies
  commentId: P:CoreWCF.Security.Tokens.SecurityContextSecurityToken.AuthorizationPolicies
  id: AuthorizationPolicies
  parent: CoreWCF.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  - vb
  name: AuthorizationPolicies
  nameWithType: SecurityContextSecurityToken.AuthorizationPolicies
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.AuthorizationPolicies
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public ReadOnlyCollection<IAuthorizationPolicy> AuthorizationPolicies { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy}
    content.vb: Public ReadOnly Property AuthorizationPolicies As ReadOnlyCollection(Of IAuthorizationPolicy)
  overload: CoreWCF.Security.Tokens.SecurityContextSecurityToken.AuthorizationPolicies*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.SecurityKeys
  commentId: P:CoreWCF.Security.Tokens.SecurityContextSecurityToken.SecurityKeys
  id: SecurityKeys
  parent: CoreWCF.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  - vb
  name: SecurityKeys
  nameWithType: SecurityContextSecurityToken.SecurityKeys
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.SecurityKeys
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public override ReadOnlyCollection<SecurityKey> SecurityKeys { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Tokens.SecurityKey}
    content.vb: Public Overrides ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)
  overridden: CoreWCF.IdentityModel.Tokens.SecurityToken.SecurityKeys
  overload: CoreWCF.Security.Tokens.SecurityContextSecurityToken.SecurityKeys*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.ValidFrom
  commentId: P:CoreWCF.Security.Tokens.SecurityContextSecurityToken.ValidFrom
  id: ValidFrom
  parent: CoreWCF.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  - vb
  name: ValidFrom
  nameWithType: SecurityContextSecurityToken.ValidFrom
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.ValidFrom
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public override DateTime ValidFrom { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overrides ReadOnly Property ValidFrom As DateTime
  overridden: CoreWCF.IdentityModel.Tokens.SecurityToken.ValidFrom
  overload: CoreWCF.Security.Tokens.SecurityContextSecurityToken.ValidFrom*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.ValidTo
  commentId: P:CoreWCF.Security.Tokens.SecurityContextSecurityToken.ValidTo
  id: ValidTo
  parent: CoreWCF.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  - vb
  name: ValidTo
  nameWithType: SecurityContextSecurityToken.ValidTo
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.ValidTo
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  syntax:
    content: public override DateTime ValidTo { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overrides ReadOnly Property ValidTo As DateTime
  overridden: CoreWCF.IdentityModel.Tokens.SecurityToken.ValidTo
  overload: CoreWCF.Security.Tokens.SecurityContextSecurityToken.ValidTo*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.IsCookieMode
  commentId: P:CoreWCF.Security.Tokens.SecurityContextSecurityToken.IsCookieMode
  id: IsCookieMode
  parent: CoreWCF.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  - vb
  name: IsCookieMode
  nameWithType: SecurityContextSecurityToken.IsCookieMode
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.IsCookieMode
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security.Tokens
  summary: "\nThis is set by the issuer when creating the SCT to be sent in the RSTR\nThe SecurityContextTokenManager examines this property to determine how to write\nout the SCT\nThis field is set to true when the issuer reads in a cookie mode SCT\n"
  syntax:
    content: public bool IsCookieMode { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCookieMode As Boolean
  overload: CoreWCF.Security.Tokens.SecurityContextSecurityToken.IsCookieMode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CoreWCF.Security.Tokens
  commentId: N:CoreWCF.Security.Tokens
  isExternal: true
  name: CoreWCF.Security.Tokens
  nameWithType: CoreWCF.Security.Tokens
  fullName: CoreWCF.Security.Tokens
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityToken
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  parent: CoreWCF.IdentityModel.Tokens.SecurityToken
  isExternal: true
  name: ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
    name: ResolveKeyIdentifierClause
    nameWithType: SecurityToken.ResolveKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
    name: ResolveKeyIdentifierClause
    nameWithType: SecurityToken.ResolveKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.IdentityModel.Tokens
  commentId: N:CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: CoreWCF.IdentityModel.Tokens
  nameWithType: CoreWCF.IdentityModel.Tokens
  fullName: CoreWCF.IdentityModel.Tokens
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.#ctor*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityContextSecurityToken.#ctor
  isExternal: true
  name: SecurityContextSecurityToken
  nameWithType: SecurityContextSecurityToken.SecurityContextSecurityToken
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.SecurityContextSecurityToken
- uid: System.Xml.UniqueId
  isExternal: true
  name: UniqueId
  nameWithType: UniqueId
  fullName: System.Xml.UniqueId
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy}
  commentId: '!:System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy}'
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<CoreWCF.IdentityModel.Policy.IAuthorizationPolicy>
  nameWithType.vb: ReadOnlyCollection(Of IAuthorizationPolicy)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of CoreWCF.IdentityModel.Policy.IAuthorizationPolicy)
  name.vb: ReadOnlyCollection(Of IAuthorizationPolicy)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<>
  nameWithType: ReadOnlyCollection<>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<>
  nameWithType.vb: ReadOnlyCollection(Of )
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of )
  name.vb: ReadOnlyCollection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.ToString*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityContextSecurityToken.ToString
  isExternal: true
  name: ToString
  nameWithType: SecurityContextSecurityToken.ToString
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.ToString
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
  parent: CoreWCF.IdentityModel.Tokens.SecurityToken
  isExternal: true
  name: CanCreateKeyIdentifierClause<T>()
  nameWithType: SecurityToken.CanCreateKeyIdentifierClause<T>()
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause<T>()
  nameWithType.vb: SecurityToken.CanCreateKeyIdentifierClause(Of T)()
  fullName.vb: CoreWCF.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause(Of T)()
  name.vb: CanCreateKeyIdentifierClause(Of T)()
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
    name: CanCreateKeyIdentifierClause<T>
    nameWithType: SecurityToken.CanCreateKeyIdentifierClause<T>
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
    name: CanCreateKeyIdentifierClause(Of T)
    nameWithType: SecurityToken.CanCreateKeyIdentifierClause(Of T)
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.CanCreateKeyIdentifierClause*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityContextSecurityToken.CanCreateKeyIdentifierClause
  isExternal: true
  name: CanCreateKeyIdentifierClause
  nameWithType: SecurityContextSecurityToken.CanCreateKeyIdentifierClause
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.CanCreateKeyIdentifierClause
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
  parent: CoreWCF.IdentityModel.Tokens.SecurityToken
  isExternal: true
  name: CreateKeyIdentifierClause<T>()
  nameWithType: SecurityToken.CreateKeyIdentifierClause<T>()
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause<T>()
  nameWithType.vb: SecurityToken.CreateKeyIdentifierClause(Of T)()
  fullName.vb: CoreWCF.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause(Of T)()
  name.vb: CreateKeyIdentifierClause(Of T)()
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
    name: CreateKeyIdentifierClause<T>
    nameWithType: SecurityToken.CreateKeyIdentifierClause<T>
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
    name: CreateKeyIdentifierClause(Of T)
    nameWithType: SecurityToken.CreateKeyIdentifierClause(Of T)
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.CreateKeyIdentifierClause*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityContextSecurityToken.CreateKeyIdentifierClause
  isExternal: true
  name: CreateKeyIdentifierClause
  nameWithType: SecurityContextSecurityToken.CreateKeyIdentifierClause
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.CreateKeyIdentifierClause
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  parent: CoreWCF.IdentityModel.Tokens.SecurityToken
  isExternal: true
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
    name: MatchesKeyIdentifierClause
    nameWithType: SecurityToken.MatchesKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
    name: MatchesKeyIdentifierClause
    nameWithType: SecurityToken.MatchesKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.MatchesKeyIdentifierClause*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityContextSecurityToken.MatchesKeyIdentifierClause
  isExternal: true
  name: MatchesKeyIdentifierClause
  nameWithType: SecurityContextSecurityToken.MatchesKeyIdentifierClause
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.MatchesKeyIdentifierClause
- uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
  commentId: T:CoreWCF.IdentityModel.SecurityKeyIdentifierClause
  parent: CoreWCF.IdentityModel
  isExternal: true
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
- uid: CoreWCF.IdentityModel
  commentId: N:CoreWCF.IdentityModel
  isExternal: true
  name: CoreWCF.IdentityModel
  nameWithType: CoreWCF.IdentityModel
  fullName: CoreWCF.IdentityModel
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.Dispose*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityContextSecurityToken.Dispose
  isExternal: true
  name: Dispose
  nameWithType: SecurityContextSecurityToken.Dispose
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.Dispose
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.BootstrapMessageProperty*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityContextSecurityToken.BootstrapMessageProperty
  isExternal: true
  name: BootstrapMessageProperty
  nameWithType: SecurityContextSecurityToken.BootstrapMessageProperty
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.BootstrapMessageProperty
- uid: CoreWCF.Security.SecurityMessageProperty
  commentId: T:CoreWCF.Security.SecurityMessageProperty
  parent: CoreWCF.Security
  isExternal: true
  name: SecurityMessageProperty
  nameWithType: SecurityMessageProperty
  fullName: CoreWCF.Security.SecurityMessageProperty
- uid: CoreWCF.Security
  commentId: N:CoreWCF.Security
  isExternal: true
  name: CoreWCF.Security
  nameWithType: CoreWCF.Security
  fullName: CoreWCF.Security
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken.Id
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityToken.Id
  parent: CoreWCF.IdentityModel.Tokens.SecurityToken
  isExternal: true
  name: Id
  nameWithType: SecurityToken.Id
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.Id
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.Id*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityContextSecurityToken.Id
  isExternal: true
  name: Id
  nameWithType: SecurityContextSecurityToken.Id
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.Id
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.ContextId*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityContextSecurityToken.ContextId
  isExternal: true
  name: ContextId
  nameWithType: SecurityContextSecurityToken.ContextId
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.ContextId
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyGeneration*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyGeneration
  isExternal: true
  name: KeyGeneration
  nameWithType: SecurityContextSecurityToken.KeyGeneration
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyGeneration
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyEffectiveTime*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyEffectiveTime
  isExternal: true
  name: KeyEffectiveTime
  nameWithType: SecurityContextSecurityToken.KeyEffectiveTime
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyEffectiveTime
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyExpirationTime*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyExpirationTime
  isExternal: true
  name: KeyExpirationTime
  nameWithType: SecurityContextSecurityToken.KeyExpirationTime
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.KeyExpirationTime
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.AuthorizationPolicies*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityContextSecurityToken.AuthorizationPolicies
  isExternal: true
  name: AuthorizationPolicies
  nameWithType: SecurityContextSecurityToken.AuthorizationPolicies
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.AuthorizationPolicies
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken.SecurityKeys
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityToken.SecurityKeys
  parent: CoreWCF.IdentityModel.Tokens.SecurityToken
  isExternal: true
  name: SecurityKeys
  nameWithType: SecurityToken.SecurityKeys
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.SecurityKeys
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.SecurityKeys*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityContextSecurityToken.SecurityKeys
  isExternal: true
  name: SecurityKeys
  nameWithType: SecurityContextSecurityToken.SecurityKeys
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.SecurityKeys
- uid: System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Tokens.SecurityKey}
  commentId: '!:System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Tokens.SecurityKey}'
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<SecurityKey>
  nameWithType: ReadOnlyCollection<SecurityKey>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<CoreWCF.IdentityModel.Tokens.SecurityKey>
  nameWithType.vb: ReadOnlyCollection(Of SecurityKey)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of CoreWCF.IdentityModel.Tokens.SecurityKey)
  name.vb: ReadOnlyCollection(Of SecurityKey)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: CoreWCF.IdentityModel.Tokens.SecurityKey
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: CoreWCF.IdentityModel.Tokens.SecurityKey
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken.ValidFrom
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityToken.ValidFrom
  parent: CoreWCF.IdentityModel.Tokens.SecurityToken
  isExternal: true
  name: ValidFrom
  nameWithType: SecurityToken.ValidFrom
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.ValidFrom
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.ValidFrom*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityContextSecurityToken.ValidFrom
  isExternal: true
  name: ValidFrom
  nameWithType: SecurityContextSecurityToken.ValidFrom
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.ValidFrom
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken.ValidTo
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityToken.ValidTo
  parent: CoreWCF.IdentityModel.Tokens.SecurityToken
  isExternal: true
  name: ValidTo
  nameWithType: SecurityToken.ValidTo
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken.ValidTo
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.ValidTo*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityContextSecurityToken.ValidTo
  isExternal: true
  name: ValidTo
  nameWithType: SecurityContextSecurityToken.ValidTo
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.ValidTo
- uid: CoreWCF.Security.Tokens.SecurityContextSecurityToken.IsCookieMode*
  commentId: Overload:CoreWCF.Security.Tokens.SecurityContextSecurityToken.IsCookieMode
  isExternal: true
  name: IsCookieMode
  nameWithType: SecurityContextSecurityToken.IsCookieMode
  fullName: CoreWCF.Security.Tokens.SecurityContextSecurityToken.IsCookieMode
