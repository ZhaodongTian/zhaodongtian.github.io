### YamlMime:ManagedReference
items:
- uid: CoreWCF.Channels.TransportBindingElement
  commentId: T:CoreWCF.Channels.TransportBindingElement
  id: TransportBindingElement
  parent: CoreWCF.Channels
  children:
  - CoreWCF.Channels.TransportBindingElement.#ctor
  - CoreWCF.Channels.TransportBindingElement.#ctor(CoreWCF.Channels.TransportBindingElement)
  - CoreWCF.Channels.TransportBindingElement.ExportWsdlEndpoint(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlEndpointConversionContext,System.String,CoreWCF.EndpointAddress,CoreWCF.Channels.AddressingVersion)
  - CoreWCF.Channels.TransportBindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
  - CoreWCF.Channels.TransportBindingElement.IsMatch(CoreWCF.Channels.BindingElement)
  - CoreWCF.Channels.TransportBindingElement.ManualAddressing
  - CoreWCF.Channels.TransportBindingElement.MaxBufferPoolSize
  - CoreWCF.Channels.TransportBindingElement.MaxReceivedMessageSize
  - CoreWCF.Channels.TransportBindingElement.Scheme
  langs:
  - csharp
  - vb
  name: TransportBindingElement
  nameWithType: TransportBindingElement
  fullName: CoreWCF.Channels.TransportBindingElement
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  summary: An `abstract`  base class that represents a transport binding element.
  remarks: "This class factors out properties that are common to all of the transport binding elements provided by the Windows Communication Foundation (WCF). It handles the translation of the base transport settings into run-time manifestations. It delegates the translation of transport-specific settings (for example, HttpProxySettings for HTTP) logic in its concrete derived class transport bindings, which include the following classes:  \n\n-   <xref:System.ServiceModel.Channels.PeerTransportBindingElement>  \n\n-   <xref:CoreWCF.Channels.HttpTransportBindingElement>  \n\n-   <xref:CoreWCF.Channels.HttpsTransportBindingElement>  \n\n-   <xref:CoreWCF.Channels.TcpTransportBindingElement>  \n\n-   <xref:System.ServiceModel.Channels.NamedPipeTransportBindingElement>  \n\n-   <xref:System.ServiceModel.Channels.MsmqTransportBindingElement>  \n\n-   <xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement>  \n\n-   <xref:CoreWCF.Channels.ConnectionOrientedTransportBindingElement>  \n\n> [!NOTE]\n>  Custom transport binding element developers must inherit from this class, which derives from the <xref:CoreWCF.Channels.BindingElement> class.  \n\n"
  syntax:
    content: 'public abstract class TransportBindingElement : BindingElement'
    content.vb: >-
      Public MustInherit Class TransportBindingElement
          Inherits BindingElement
  inheritance:
  - System.Object
  - CoreWCF.Channels.BindingElement
  derivedClasses:
  - CoreWCF.Channels.ConnectionOrientedTransportBindingElement
  - CoreWCF.Channels.HttpTransportBindingElement
  inheritedMembers:
  - CoreWCF.Channels.BindingElement.Clone
  - CoreWCF.Channels.BindingElement.BuildServiceDispatcher``1(CoreWCF.Channels.BindingContext,CoreWCF.Configuration.IServiceDispatcher)
  - CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher``1(CoreWCF.Channels.BindingContext)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: CoreWCF.Channels.TransportBindingElement.#ctor
  commentId: M:CoreWCF.Channels.TransportBindingElement.#ctor
  id: '#ctor'
  parent: CoreWCF.Channels.TransportBindingElement
  langs:
  - csharp
  - vb
  name: TransportBindingElement()
  summary: Creates a new instance of this class.
  nameWithType: TransportBindingElement.TransportBindingElement()
  fullName: CoreWCF.Channels.TransportBindingElement.TransportBindingElement()
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: protected TransportBindingElement()
    content.vb: Protected Sub New
  overload: CoreWCF.Channels.TransportBindingElement.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CoreWCF.Channels.TransportBindingElement.#ctor(CoreWCF.Channels.TransportBindingElement)
  commentId: M:CoreWCF.Channels.TransportBindingElement.#ctor(CoreWCF.Channels.TransportBindingElement)
  id: '#ctor(CoreWCF.Channels.TransportBindingElement)'
  parent: CoreWCF.Channels.TransportBindingElement
  langs:
  - csharp
  - vb
  name: TransportBindingElement(TransportBindingElement)
  summary: Creates a new instance of this class from an existing instance.
  nameWithType: TransportBindingElement.TransportBindingElement(TransportBindingElement)
  fullName: CoreWCF.Channels.TransportBindingElement.TransportBindingElement(CoreWCF.Channels.TransportBindingElement)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: protected TransportBindingElement(TransportBindingElement elementToBeCloned)
    parameters:
    - id: elementToBeCloned
      type: CoreWCF.Channels.TransportBindingElement
      description: The [TransportBindingElement](xref:CoreWCF.Channels.TransportBindingElement) to be cloned.
    content.vb: Protected Sub New(elementToBeCloned As TransportBindingElement)
  overload: CoreWCF.Channels.TransportBindingElement.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CoreWCF.Channels.TransportBindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
  commentId: M:CoreWCF.Channels.TransportBindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
  id: GetProperty``1(CoreWCF.Channels.BindingContext)
  parent: CoreWCF.Channels.TransportBindingElement
  langs:
  - csharp
  - vb
  name: GetProperty<T>(BindingContext)
  summary: Gets a property from the specified [BindingContext](xref:CoreWCF.Channels.BindingContext).
  nameWithType: TransportBindingElement.GetProperty<T>(BindingContext)
  fullName: CoreWCF.Channels.TransportBindingElement.GetProperty<T>(CoreWCF.Channels.BindingContext)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: >-
      public override T GetProperty<T>(BindingContext context)
          where T : class
    parameters:
    - id: context
      type: CoreWCF.Channels.BindingContext
      description: A [BindingContext](xref:CoreWCF.Channels.BindingContext).
    typeParameters:
    - id: T
      description: The property to get.
    return:
      type: '{T}'
      description: The property from the specified [BindingContext](xref:CoreWCF.Channels.BindingContext).
    content.vb: Public Overrides Function GetProperty(Of T As Class)(context As BindingContext) As T
  overridden: CoreWCF.Channels.BindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
  overload: CoreWCF.Channels.TransportBindingElement.GetProperty*
  nameWithType.vb: TransportBindingElement.GetProperty(Of T)(BindingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: CoreWCF.Channels.TransportBindingElement.GetProperty(Of T)(CoreWCF.Channels.BindingContext)
  name.vb: GetProperty(Of T)(BindingContext)
  remarks: This method receives a binding context as an input parameter, which represents the stack of binding elements. This method gets the specified object directly, delegates the inquiry to the next lower binding element in the stack, or a combination of the two. It can modify the context if it delegates the inquiry. Each binding element in the stack can repeat this process, if it has been delegated to, until the bottom of the stack is reached. The object returned is usually a collection of properties.<br/><br/>
           If the type of `T` is [ChannelProtectionRequirements](xref:CoreWCF.Security.ChannelProtectionRequirements), [XmlDictionaryReaderQuotas](xref:CoreWCF.Configuration.XmlDictionaryReaderQuotasElement), or [MessageVersion](xref:CoreWCF.Channels.MessageVersion) then an instance of this class is returned. If the type of T matches the type of an instance in [BindingParameters](xref:CoreWCF.Channels.BindingContext.BindingParameters), that instance is returned.<br/><br/>
           This method is implemented by binding elements as well as by the run-time objects such as [IChannelFactory](xref:System.ServiceModel.Channels.IChannelFactory), [IChannelListener](xref:System.ServiceModel.Channels.IChannelListener), and [IChannel](xref:CoreWCF.Channels.IChannel).
- uid: CoreWCF.Channels.TransportBindingElement.ExportWsdlEndpoint(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlEndpointConversionContext,System.String,CoreWCF.EndpointAddress,CoreWCF.Channels.AddressingVersion)
  commentId: M:CoreWCF.Channels.TransportBindingElement.ExportWsdlEndpoint(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlEndpointConversionContext,System.String,CoreWCF.EndpointAddress,CoreWCF.Channels.AddressingVersion)
  id: ExportWsdlEndpoint(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlEndpointConversionContext,System.String,CoreWCF.EndpointAddress,CoreWCF.Channels.AddressingVersion)
  parent: CoreWCF.Channels.TransportBindingElement
  langs:
  - csharp
  - vb
  name: ExportWsdlEndpoint(WsdlExporter, WsdlEndpointConversionContext, String, EndpointAddress, AddressingVersion)
  nameWithType: TransportBindingElement.ExportWsdlEndpoint(WsdlExporter, WsdlEndpointConversionContext, String, EndpointAddress, AddressingVersion)
  fullName: CoreWCF.Channels.TransportBindingElement.ExportWsdlEndpoint(CoreWCF.Description.WsdlExporter, CoreWCF.Description.WsdlEndpointConversionContext, System.String, CoreWCF.EndpointAddress, CoreWCF.Channels.AddressingVersion)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: public static void ExportWsdlEndpoint(WsdlExporter exporter, WsdlEndpointConversionContext endpointContext, string wsdlTransportUri, EndpointAddress address, AddressingVersion addressingVersion)
    parameters:
    - id: exporter
      type: CoreWCF.Description.WsdlExporter
    - id: endpointContext
      type: CoreWCF.Description.WsdlEndpointConversionContext
    - id: wsdlTransportUri
      type: System.String
    - id: address
      type: CoreWCF.EndpointAddress
    - id: addressingVersion
      type: CoreWCF.Channels.AddressingVersion
    content.vb: Public Shared Sub ExportWsdlEndpoint(exporter As WsdlExporter, endpointContext As WsdlEndpointConversionContext, wsdlTransportUri As String, address As EndpointAddress, addressingVersion As AddressingVersion)
  overload: CoreWCF.Channels.TransportBindingElement.ExportWsdlEndpoint*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CoreWCF.Channels.TransportBindingElement.IsMatch(CoreWCF.Channels.BindingElement)
  commentId: M:CoreWCF.Channels.TransportBindingElement.IsMatch(CoreWCF.Channels.BindingElement)
  id: IsMatch(CoreWCF.Channels.BindingElement)
  parent: CoreWCF.Channels.TransportBindingElement
  langs:
  - csharp
  - vb
  name: IsMatch(BindingElement)
  nameWithType: TransportBindingElement.IsMatch(BindingElement)
  fullName: CoreWCF.Channels.TransportBindingElement.IsMatch(CoreWCF.Channels.BindingElement)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: protected override bool IsMatch(BindingElement b)
    parameters:
    - id: b
      type: CoreWCF.Channels.BindingElement
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function IsMatch(b As BindingElement) As Boolean
  overridden: CoreWCF.Channels.BindingElement.IsMatch(CoreWCF.Channels.BindingElement)
  overload: CoreWCF.Channels.TransportBindingElement.IsMatch*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: CoreWCF.Channels.TransportBindingElement.ManualAddressing
  commentId: P:CoreWCF.Channels.TransportBindingElement.ManualAddressing
  id: ManualAddressing
  parent: CoreWCF.Channels.TransportBindingElement
  langs:
  - csharp
  - vb
  name: ManualAddressing
  summary: Gets or sets a value that indicates whether manual addressing of the message is required.
  nameWithType: TransportBindingElement.ManualAddressing
  fullName: CoreWCF.Channels.TransportBindingElement.ManualAddressing
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: public virtual bool ManualAddressing { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "`true` if manual addressing of the message is required; otherwise `false`. The default is `false`."
    content.vb: Public Overridable Property ManualAddressing As Boolean
  overload: CoreWCF.Channels.TransportBindingElement.ManualAddressing*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  remarks: This property is usually used in router scenarios, where the application determines which one of several destinations to send a message to.<br/><br/>
           If this property is set to `true`, the channel assumes the message has already been addressed and does not add any additional information.<br/><br/>
           If `false`, the sending channel applies the [EndpointAddress](xref:CoreWCF.EndpointAddress) configured as the `To` addressee on the channel to outgoing messages.
- uid: CoreWCF.Channels.TransportBindingElement.MaxBufferPoolSize
  commentId: P:CoreWCF.Channels.TransportBindingElement.MaxBufferPoolSize
  id: MaxBufferPoolSize
  parent: CoreWCF.Channels.TransportBindingElement
  langs:
  - csharp
  - vb
  name: MaxBufferPoolSize
  summary: Gets or sets the maximum size, in bytes, of any buffer pools used by the transport.
  nameWithType: TransportBindingElement.MaxBufferPoolSize
  fullName: CoreWCF.Channels.TransportBindingElement.MaxBufferPoolSize
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: public virtual long MaxBufferPoolSize { get; set; }
    parameters: []
    return:
      type: System.Int64
      description: The maximum size of the buffer pool. The default is 524,288 bytes.
    content.vb: Public Overridable Property MaxBufferPoolSize As Long
  overload: CoreWCF.Channels.TransportBindingElement.MaxBufferPoolSize*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  remarks: Many parts of WCF use buffers. Creating and destroying buffers each time they are used is expensive, and garbage collection for buffers is also expensive.<br/><br/>
           With buffer pools, you can take a buffer from the pool, use it, and return it to the pool once you are done. Thus the overhead in creating and destroying buffers is avoided. The downside is that there is an increase in memory usage because your buffers are not getting garbage collected. If the [MaxBufferPoolSize](xref:CoreWCF.Channels.TransportBindingElement.MaxBufferPoolSize) is set to 0, no buffers are returned to the pool, and instead garbage collection begins.
- uid: CoreWCF.Channels.TransportBindingElement.MaxReceivedMessageSize
  commentId: P:CoreWCF.Channels.TransportBindingElement.MaxReceivedMessageSize
  id: MaxReceivedMessageSize
  parent: CoreWCF.Channels.TransportBindingElement
  langs:
  - csharp
  - vb
  name: MaxReceivedMessageSize
  summary: Gets or sets the maximum allowable message size, in bytes, that can be received.
  nameWithType: TransportBindingElement.MaxReceivedMessageSize
  fullName: CoreWCF.Channels.TransportBindingElement.MaxReceivedMessageSize
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: public virtual long MaxReceivedMessageSize { get; set; }
    parameters: []
    return:
      type: System.Int64
      description: The maximum allowable message size that can be received. The default is 65,536 bytes.
    content.vb: Public Overridable Property MaxReceivedMessageSize As Long
  overload: CoreWCF.Channels.TransportBindingElement.MaxReceivedMessageSize*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  remarks: This property can counter a hacker scenario where a message is sent with a very large or infinite specified length, or where data is sent continuously to a connected Named Pipe.
- uid: CoreWCF.Channels.TransportBindingElement.Scheme
  commentId: P:CoreWCF.Channels.TransportBindingElement.Scheme
  id: Scheme
  parent: CoreWCF.Channels.TransportBindingElement
  langs:
  - csharp
  - vb
  name: Scheme
  summary: Gets the URI scheme for the transport.
  nameWithType: TransportBindingElement.Scheme
  fullName: CoreWCF.Channels.TransportBindingElement.Scheme
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  syntax:
    content: public abstract string Scheme { get; }
    parameters: []
    return:
      type: System.String
      description: Returns the URI scheme for the transport, which varies depending on what derived class implements this method.
    content.vb: Public MustOverride ReadOnly Property Scheme As String
  overload: CoreWCF.Channels.TransportBindingElement.Scheme*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  remarks: This is overridden by each concrete transport implementation and is provided to validate bindings against base addresses.
references:
- uid: CoreWCF.Channels
  commentId: N:CoreWCF.Channels
  isExternal: true
  name: CoreWCF.Channels
  nameWithType: CoreWCF.Channels
  fullName: CoreWCF.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CoreWCF.Channels.BindingElement
  commentId: T:CoreWCF.Channels.BindingElement
  parent: CoreWCF.Channels
  isExternal: true
  name: BindingElement
  nameWithType: BindingElement
  fullName: CoreWCF.Channels.BindingElement
- uid: CoreWCF.Channels.BindingElement.Clone
  commentId: M:CoreWCF.Channels.BindingElement.Clone
  parent: CoreWCF.Channels.BindingElement
  isExternal: true
  name: Clone()
  nameWithType: BindingElement.Clone()
  fullName: CoreWCF.Channels.BindingElement.Clone()
  spec.csharp:
  - uid: CoreWCF.Channels.BindingElement.Clone
    name: Clone
    nameWithType: BindingElement.Clone
    fullName: CoreWCF.Channels.BindingElement.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.BindingElement.Clone
    name: Clone
    nameWithType: BindingElement.Clone
    fullName: CoreWCF.Channels.BindingElement.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.BindingElement.BuildServiceDispatcher``1(CoreWCF.Channels.BindingContext,CoreWCF.Configuration.IServiceDispatcher)
  commentId: M:CoreWCF.Channels.BindingElement.BuildServiceDispatcher``1(CoreWCF.Channels.BindingContext,CoreWCF.Configuration.IServiceDispatcher)
  parent: CoreWCF.Channels.BindingElement
  isExternal: true
  name: BuildServiceDispatcher<TChannel>(BindingContext, IServiceDispatcher)
  nameWithType: BindingElement.BuildServiceDispatcher<TChannel>(BindingContext, IServiceDispatcher)
  fullName: CoreWCF.Channels.BindingElement.BuildServiceDispatcher<TChannel>(CoreWCF.Channels.BindingContext, CoreWCF.Configuration.IServiceDispatcher)
  nameWithType.vb: BindingElement.BuildServiceDispatcher(Of TChannel)(BindingContext, IServiceDispatcher)
  fullName.vb: CoreWCF.Channels.BindingElement.BuildServiceDispatcher(Of TChannel)(CoreWCF.Channels.BindingContext, CoreWCF.Configuration.IServiceDispatcher)
  name.vb: BuildServiceDispatcher(Of TChannel)(BindingContext, IServiceDispatcher)
  spec.csharp:
  - uid: CoreWCF.Channels.BindingElement.BuildServiceDispatcher``1(CoreWCF.Channels.BindingContext,CoreWCF.Configuration.IServiceDispatcher)
    name: BuildServiceDispatcher<TChannel>
    nameWithType: BindingElement.BuildServiceDispatcher<TChannel>
    fullName: CoreWCF.Channels.BindingElement.BuildServiceDispatcher<TChannel>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: CoreWCF.Channels.BindingContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.Configuration.IServiceDispatcher
    name: IServiceDispatcher
    nameWithType: IServiceDispatcher
    fullName: CoreWCF.Configuration.IServiceDispatcher
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.BindingElement.BuildServiceDispatcher``1(CoreWCF.Channels.BindingContext,CoreWCF.Configuration.IServiceDispatcher)
    name: BuildServiceDispatcher(Of TChannel)
    nameWithType: BindingElement.BuildServiceDispatcher(Of TChannel)
    fullName: CoreWCF.Channels.BindingElement.BuildServiceDispatcher(Of TChannel)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: CoreWCF.Channels.BindingContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.Configuration.IServiceDispatcher
    name: IServiceDispatcher
    nameWithType: IServiceDispatcher
    fullName: CoreWCF.Configuration.IServiceDispatcher
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher``1(CoreWCF.Channels.BindingContext)
  commentId: M:CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher``1(CoreWCF.Channels.BindingContext)
  parent: CoreWCF.Channels.BindingElement
  isExternal: true
  name: CanBuildServiceDispatcher<TChannel>(BindingContext)
  nameWithType: BindingElement.CanBuildServiceDispatcher<TChannel>(BindingContext)
  fullName: CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher<TChannel>(CoreWCF.Channels.BindingContext)
  nameWithType.vb: BindingElement.CanBuildServiceDispatcher(Of TChannel)(BindingContext)
  fullName.vb: CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher(Of TChannel)(CoreWCF.Channels.BindingContext)
  name.vb: CanBuildServiceDispatcher(Of TChannel)(BindingContext)
  spec.csharp:
  - uid: CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher``1(CoreWCF.Channels.BindingContext)
    name: CanBuildServiceDispatcher<TChannel>
    nameWithType: BindingElement.CanBuildServiceDispatcher<TChannel>
    fullName: CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher<TChannel>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: CoreWCF.Channels.BindingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher``1(CoreWCF.Channels.BindingContext)
    name: CanBuildServiceDispatcher(Of TChannel)
    nameWithType: BindingElement.CanBuildServiceDispatcher(Of TChannel)
    fullName: CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher(Of TChannel)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: CoreWCF.Channels.BindingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Channels.TransportBindingElement.#ctor*
  commentId: Overload:CoreWCF.Channels.TransportBindingElement.#ctor
  isExternal: true
  name: TransportBindingElement
  nameWithType: TransportBindingElement.TransportBindingElement
  fullName: CoreWCF.Channels.TransportBindingElement.TransportBindingElement
- uid: CoreWCF.Channels.TransportBindingElement
  commentId: T:CoreWCF.Channels.TransportBindingElement
  parent: CoreWCF.Channels
  isExternal: true
  name: TransportBindingElement
  nameWithType: TransportBindingElement
  fullName: CoreWCF.Channels.TransportBindingElement
- uid: CoreWCF.Channels.BindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
  commentId: M:CoreWCF.Channels.BindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
  parent: CoreWCF.Channels.BindingElement
  isExternal: true
  name: GetProperty<T>(BindingContext)
  nameWithType: BindingElement.GetProperty<T>(BindingContext)
  fullName: CoreWCF.Channels.BindingElement.GetProperty<T>(CoreWCF.Channels.BindingContext)
  nameWithType.vb: BindingElement.GetProperty(Of T)(BindingContext)
  fullName.vb: CoreWCF.Channels.BindingElement.GetProperty(Of T)(CoreWCF.Channels.BindingContext)
  name.vb: GetProperty(Of T)(BindingContext)
  spec.csharp:
  - uid: CoreWCF.Channels.BindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
    name: GetProperty<T>
    nameWithType: BindingElement.GetProperty<T>
    fullName: CoreWCF.Channels.BindingElement.GetProperty<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: CoreWCF.Channels.BindingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.BindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
    name: GetProperty(Of T)
    nameWithType: BindingElement.GetProperty(Of T)
    fullName: CoreWCF.Channels.BindingElement.GetProperty(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: CoreWCF.Channels.BindingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.TransportBindingElement.GetProperty*
  commentId: Overload:CoreWCF.Channels.TransportBindingElement.GetProperty
  isExternal: true
  name: GetProperty
  nameWithType: TransportBindingElement.GetProperty
  fullName: CoreWCF.Channels.TransportBindingElement.GetProperty
- uid: CoreWCF.Channels.BindingContext
  commentId: T:CoreWCF.Channels.BindingContext
  parent: CoreWCF.Channels
  isExternal: true
  name: BindingContext
  nameWithType: BindingContext
  fullName: CoreWCF.Channels.BindingContext
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: CoreWCF.Channels.TransportBindingElement.ExportWsdlEndpoint*
  commentId: Overload:CoreWCF.Channels.TransportBindingElement.ExportWsdlEndpoint
  isExternal: true
  name: ExportWsdlEndpoint
  nameWithType: TransportBindingElement.ExportWsdlEndpoint
  fullName: CoreWCF.Channels.TransportBindingElement.ExportWsdlEndpoint
- uid: CoreWCF.Description.WsdlExporter
  commentId: T:CoreWCF.Description.WsdlExporter
  parent: CoreWCF.Description
  isExternal: true
  name: WsdlExporter
  nameWithType: WsdlExporter
  fullName: CoreWCF.Description.WsdlExporter
- uid: CoreWCF.Description.WsdlEndpointConversionContext
  commentId: T:CoreWCF.Description.WsdlEndpointConversionContext
  parent: CoreWCF.Description
  isExternal: true
  name: WsdlEndpointConversionContext
  nameWithType: WsdlEndpointConversionContext
  fullName: CoreWCF.Description.WsdlEndpointConversionContext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CoreWCF.EndpointAddress
  commentId: T:CoreWCF.EndpointAddress
  parent: CoreWCF
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: CoreWCF.EndpointAddress
- uid: CoreWCF.Channels.AddressingVersion
  commentId: T:CoreWCF.Channels.AddressingVersion
  parent: CoreWCF.Channels
  isExternal: true
  name: AddressingVersion
  nameWithType: AddressingVersion
  fullName: CoreWCF.Channels.AddressingVersion
- uid: CoreWCF.Description
  commentId: N:CoreWCF.Description
  isExternal: true
  name: CoreWCF.Description
  nameWithType: CoreWCF.Description
  fullName: CoreWCF.Description
- uid: CoreWCF
  commentId: N:CoreWCF
  isExternal: true
  name: CoreWCF
  nameWithType: CoreWCF
  fullName: CoreWCF
- uid: CoreWCF.Channels.BindingElement.IsMatch(CoreWCF.Channels.BindingElement)
  commentId: M:CoreWCF.Channels.BindingElement.IsMatch(CoreWCF.Channels.BindingElement)
  parent: CoreWCF.Channels.BindingElement
  isExternal: true
  name: IsMatch(BindingElement)
  nameWithType: BindingElement.IsMatch(BindingElement)
  fullName: CoreWCF.Channels.BindingElement.IsMatch(CoreWCF.Channels.BindingElement)
  spec.csharp:
  - uid: CoreWCF.Channels.BindingElement.IsMatch(CoreWCF.Channels.BindingElement)
    name: IsMatch
    nameWithType: BindingElement.IsMatch
    fullName: CoreWCF.Channels.BindingElement.IsMatch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingElement
    name: BindingElement
    nameWithType: BindingElement
    fullName: CoreWCF.Channels.BindingElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.BindingElement.IsMatch(CoreWCF.Channels.BindingElement)
    name: IsMatch
    nameWithType: BindingElement.IsMatch
    fullName: CoreWCF.Channels.BindingElement.IsMatch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingElement
    name: BindingElement
    nameWithType: BindingElement
    fullName: CoreWCF.Channels.BindingElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.TransportBindingElement.IsMatch*
  commentId: Overload:CoreWCF.Channels.TransportBindingElement.IsMatch
  isExternal: true
  name: IsMatch
  nameWithType: TransportBindingElement.IsMatch
  fullName: CoreWCF.Channels.TransportBindingElement.IsMatch
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.Channels.TransportBindingElement.ManualAddressing*
  commentId: Overload:CoreWCF.Channels.TransportBindingElement.ManualAddressing
  isExternal: true
  name: ManualAddressing
  nameWithType: TransportBindingElement.ManualAddressing
  fullName: CoreWCF.Channels.TransportBindingElement.ManualAddressing
- uid: CoreWCF.Channels.TransportBindingElement.MaxBufferPoolSize*
  commentId: Overload:CoreWCF.Channels.TransportBindingElement.MaxBufferPoolSize
  isExternal: true
  name: MaxBufferPoolSize
  nameWithType: TransportBindingElement.MaxBufferPoolSize
  fullName: CoreWCF.Channels.TransportBindingElement.MaxBufferPoolSize
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: CoreWCF.Channels.TransportBindingElement.MaxReceivedMessageSize*
  commentId: Overload:CoreWCF.Channels.TransportBindingElement.MaxReceivedMessageSize
  isExternal: true
  name: MaxReceivedMessageSize
  nameWithType: TransportBindingElement.MaxReceivedMessageSize
  fullName: CoreWCF.Channels.TransportBindingElement.MaxReceivedMessageSize
- uid: CoreWCF.Channels.TransportBindingElement.Scheme*
  commentId: Overload:CoreWCF.Channels.TransportBindingElement.Scheme
  isExternal: true
  name: Scheme
  nameWithType: TransportBindingElement.Scheme
  fullName: CoreWCF.Channels.TransportBindingElement.Scheme
