### YamlMime:ManagedReference
items:
- uid: CoreWCF.Security.IssuedTokenServiceCredential
  commentId: T:CoreWCF.Security.IssuedTokenServiceCredential
  id: IssuedTokenServiceCredential
  parent: CoreWCF.Security
  children:
  - CoreWCF.Security.IssuedTokenServiceCredential.AllowedAudienceUris
  - CoreWCF.Security.IssuedTokenServiceCredential.AllowUntrustedRsaIssuers
  - CoreWCF.Security.IssuedTokenServiceCredential.AudienceUriMode
  - CoreWCF.Security.IssuedTokenServiceCredential.CertificateValidationMode
  - CoreWCF.Security.IssuedTokenServiceCredential.CustomCertificateValidator
  - CoreWCF.Security.IssuedTokenServiceCredential.KnownCertificates
  - CoreWCF.Security.IssuedTokenServiceCredential.RevocationMode
  - CoreWCF.Security.IssuedTokenServiceCredential.SamlSerializer
  - CoreWCF.Security.IssuedTokenServiceCredential.TrustedStoreLocation
  langs:
  - csharp
  - vb
  name: IssuedTokenServiceCredential
  nameWithType: IssuedTokenServiceCredential
  fullName: CoreWCF.Security.IssuedTokenServiceCredential
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  summary: Allows a service to configure properties associated with the federated credential presented by the client.
  remarks: "This class allows the user to control how SAML tokens presented to the service get authenticated.  \n\n"
  syntax:
    content: 'public class IssuedTokenServiceCredential : Object'
    content.vb: >-
      Public Class IssuedTokenServiceCredential
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.Security.IssuedTokenServiceCredential.AllowedAudienceUris
  commentId: P:CoreWCF.Security.IssuedTokenServiceCredential.AllowedAudienceUris
  id: AllowedAudienceUris
  parent: CoreWCF.Security.IssuedTokenServiceCredential
  langs:
  - csharp
  - vb
  name: AllowedAudienceUris
  nameWithType: IssuedTokenServiceCredential.AllowedAudienceUris
  fullName: CoreWCF.Security.IssuedTokenServiceCredential.AllowedAudienceUris
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public IList<string> AllowedAudienceUris { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public ReadOnly Property AllowedAudienceUris As IList(Of String)
  overload: CoreWCF.Security.IssuedTokenServiceCredential.AllowedAudienceUris*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.IssuedTokenServiceCredential.AudienceUriMode
  commentId: P:CoreWCF.Security.IssuedTokenServiceCredential.AudienceUriMode
  id: AudienceUriMode
  parent: CoreWCF.Security.IssuedTokenServiceCredential
  langs:
  - csharp
  - vb
  name: AudienceUriMode
  nameWithType: IssuedTokenServiceCredential.AudienceUriMode
  fullName: CoreWCF.Security.IssuedTokenServiceCredential.AudienceUriMode
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public AudienceUriMode AudienceUriMode { get; set; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Selectors.AudienceUriMode
    content.vb: Public Property AudienceUriMode As AudienceUriMode
  overload: CoreWCF.Security.IssuedTokenServiceCredential.AudienceUriMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.IssuedTokenServiceCredential.KnownCertificates
  commentId: P:CoreWCF.Security.IssuedTokenServiceCredential.KnownCertificates
  id: KnownCertificates
  parent: CoreWCF.Security.IssuedTokenServiceCredential
  langs:
  - csharp
  - vb
  name: KnownCertificates
  nameWithType: IssuedTokenServiceCredential.KnownCertificates
  fullName: CoreWCF.Security.IssuedTokenServiceCredential.KnownCertificates
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public IList<X509Certificate2> KnownCertificates { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Security.Cryptography.X509Certificates.X509Certificate2}
    content.vb: Public ReadOnly Property KnownCertificates As IList(Of X509Certificate2)
  overload: CoreWCF.Security.IssuedTokenServiceCredential.KnownCertificates*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.IssuedTokenServiceCredential.SamlSerializer
  commentId: P:CoreWCF.Security.IssuedTokenServiceCredential.SamlSerializer
  id: SamlSerializer
  parent: CoreWCF.Security.IssuedTokenServiceCredential
  langs:
  - csharp
  - vb
  name: SamlSerializer
  nameWithType: IssuedTokenServiceCredential.SamlSerializer
  fullName: CoreWCF.Security.IssuedTokenServiceCredential.SamlSerializer
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public SamlSerializer SamlSerializer { get; set; }
    parameters: []
    return:
      type: CoreWCF.Security.SamlSerializer
    content.vb: Public Property SamlSerializer As SamlSerializer
  overload: CoreWCF.Security.IssuedTokenServiceCredential.SamlSerializer*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.IssuedTokenServiceCredential.CertificateValidationMode
  commentId: P:CoreWCF.Security.IssuedTokenServiceCredential.CertificateValidationMode
  id: CertificateValidationMode
  parent: CoreWCF.Security.IssuedTokenServiceCredential
  langs:
  - csharp
  - vb
  name: CertificateValidationMode
  nameWithType: IssuedTokenServiceCredential.CertificateValidationMode
  fullName: CoreWCF.Security.IssuedTokenServiceCredential.CertificateValidationMode
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public X509CertificateValidationMode CertificateValidationMode { get; set; }
    parameters: []
    return:
      type: CoreWCF.Security.X509CertificateValidationMode
    content.vb: Public Property CertificateValidationMode As X509CertificateValidationMode
  overload: CoreWCF.Security.IssuedTokenServiceCredential.CertificateValidationMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.IssuedTokenServiceCredential.RevocationMode
  commentId: P:CoreWCF.Security.IssuedTokenServiceCredential.RevocationMode
  id: RevocationMode
  parent: CoreWCF.Security.IssuedTokenServiceCredential
  langs:
  - csharp
  - vb
  name: RevocationMode
  nameWithType: IssuedTokenServiceCredential.RevocationMode
  fullName: CoreWCF.Security.IssuedTokenServiceCredential.RevocationMode
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public X509RevocationMode RevocationMode { get; set; }
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509RevocationMode
    content.vb: Public Property RevocationMode As X509RevocationMode
  overload: CoreWCF.Security.IssuedTokenServiceCredential.RevocationMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.IssuedTokenServiceCredential.TrustedStoreLocation
  commentId: P:CoreWCF.Security.IssuedTokenServiceCredential.TrustedStoreLocation
  id: TrustedStoreLocation
  parent: CoreWCF.Security.IssuedTokenServiceCredential
  langs:
  - csharp
  - vb
  name: TrustedStoreLocation
  nameWithType: IssuedTokenServiceCredential.TrustedStoreLocation
  fullName: CoreWCF.Security.IssuedTokenServiceCredential.TrustedStoreLocation
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public StoreLocation TrustedStoreLocation { get; set; }
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.StoreLocation
    content.vb: Public Property TrustedStoreLocation As StoreLocation
  overload: CoreWCF.Security.IssuedTokenServiceCredential.TrustedStoreLocation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.IssuedTokenServiceCredential.CustomCertificateValidator
  commentId: P:CoreWCF.Security.IssuedTokenServiceCredential.CustomCertificateValidator
  id: CustomCertificateValidator
  parent: CoreWCF.Security.IssuedTokenServiceCredential
  langs:
  - csharp
  - vb
  name: CustomCertificateValidator
  nameWithType: IssuedTokenServiceCredential.CustomCertificateValidator
  fullName: CoreWCF.Security.IssuedTokenServiceCredential.CustomCertificateValidator
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public X509CertificateValidator CustomCertificateValidator { get; set; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Selectors.X509CertificateValidator
    content.vb: Public Property CustomCertificateValidator As X509CertificateValidator
  overload: CoreWCF.Security.IssuedTokenServiceCredential.CustomCertificateValidator*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.IssuedTokenServiceCredential.AllowUntrustedRsaIssuers
  commentId: P:CoreWCF.Security.IssuedTokenServiceCredential.AllowUntrustedRsaIssuers
  id: AllowUntrustedRsaIssuers
  parent: CoreWCF.Security.IssuedTokenServiceCredential
  langs:
  - csharp
  - vb
  name: AllowUntrustedRsaIssuers
  nameWithType: IssuedTokenServiceCredential.AllowUntrustedRsaIssuers
  fullName: CoreWCF.Security.IssuedTokenServiceCredential.AllowUntrustedRsaIssuers
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public bool AllowUntrustedRsaIssuers { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowUntrustedRsaIssuers As Boolean
  overload: CoreWCF.Security.IssuedTokenServiceCredential.AllowUntrustedRsaIssuers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: CoreWCF.Security
  commentId: N:CoreWCF.Security
  isExternal: true
  name: CoreWCF.Security
  nameWithType: CoreWCF.Security
  fullName: CoreWCF.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Security.IssuedTokenServiceCredential.AllowedAudienceUris*
  commentId: Overload:CoreWCF.Security.IssuedTokenServiceCredential.AllowedAudienceUris
  isExternal: true
  name: AllowedAudienceUris
  nameWithType: IssuedTokenServiceCredential.AllowedAudienceUris
  fullName: CoreWCF.Security.IssuedTokenServiceCredential.AllowedAudienceUris
- uid: System.Collections.Generic.IList{System.String}
  commentId: '!:System.Collections.Generic.IList{System.String}'
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: System.Collections.Generic.IList<>
  nameWithType.vb: IList(Of )
  fullName.vb: System.Collections.Generic.IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Security.IssuedTokenServiceCredential.AudienceUriMode*
  commentId: Overload:CoreWCF.Security.IssuedTokenServiceCredential.AudienceUriMode
  isExternal: true
  name: AudienceUriMode
  nameWithType: IssuedTokenServiceCredential.AudienceUriMode
  fullName: CoreWCF.Security.IssuedTokenServiceCredential.AudienceUriMode
- uid: CoreWCF.IdentityModel.Selectors.AudienceUriMode
  commentId: T:CoreWCF.IdentityModel.Selectors.AudienceUriMode
  parent: CoreWCF.IdentityModel.Selectors
  isExternal: true
  name: AudienceUriMode
  nameWithType: AudienceUriMode
  fullName: CoreWCF.IdentityModel.Selectors.AudienceUriMode
- uid: CoreWCF.IdentityModel.Selectors
  commentId: N:CoreWCF.IdentityModel.Selectors
  isExternal: true
  name: CoreWCF.IdentityModel.Selectors
  nameWithType: CoreWCF.IdentityModel.Selectors
  fullName: CoreWCF.IdentityModel.Selectors
- uid: CoreWCF.Security.IssuedTokenServiceCredential.KnownCertificates*
  commentId: Overload:CoreWCF.Security.IssuedTokenServiceCredential.KnownCertificates
  isExternal: true
  name: KnownCertificates
  nameWithType: IssuedTokenServiceCredential.KnownCertificates
  fullName: CoreWCF.Security.IssuedTokenServiceCredential.KnownCertificates
- uid: System.Collections.Generic.IList{System.Security.Cryptography.X509Certificates.X509Certificate2}
  commentId: '!:System.Collections.Generic.IList{System.Security.Cryptography.X509Certificates.X509Certificate2}'
  definition: System.Collections.Generic.IList`1
  name: IList<X509Certificate2>
  nameWithType: IList<X509Certificate2>
  fullName: System.Collections.Generic.IList<System.Security.Cryptography.X509Certificates.X509Certificate2>
  nameWithType.vb: IList(Of X509Certificate2)
  fullName.vb: System.Collections.Generic.IList(Of System.Security.Cryptography.X509Certificates.X509Certificate2)
  name.vb: IList(Of X509Certificate2)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Security.IssuedTokenServiceCredential.SamlSerializer*
  commentId: Overload:CoreWCF.Security.IssuedTokenServiceCredential.SamlSerializer
  isExternal: true
  name: SamlSerializer
  nameWithType: IssuedTokenServiceCredential.SamlSerializer
  fullName: CoreWCF.Security.IssuedTokenServiceCredential.SamlSerializer
- uid: CoreWCF.Security.SamlSerializer
  commentId: T:CoreWCF.Security.SamlSerializer
  parent: CoreWCF.Security
  isExternal: true
  name: SamlSerializer
  nameWithType: SamlSerializer
  fullName: CoreWCF.Security.SamlSerializer
- uid: CoreWCF.Security.IssuedTokenServiceCredential.CertificateValidationMode*
  commentId: Overload:CoreWCF.Security.IssuedTokenServiceCredential.CertificateValidationMode
  isExternal: true
  name: CertificateValidationMode
  nameWithType: IssuedTokenServiceCredential.CertificateValidationMode
  fullName: CoreWCF.Security.IssuedTokenServiceCredential.CertificateValidationMode
- uid: CoreWCF.Security.X509CertificateValidationMode
  commentId: T:CoreWCF.Security.X509CertificateValidationMode
  parent: CoreWCF.Security
  isExternal: true
  name: X509CertificateValidationMode
  nameWithType: X509CertificateValidationMode
  fullName: CoreWCF.Security.X509CertificateValidationMode
- uid: CoreWCF.Security.IssuedTokenServiceCredential.RevocationMode*
  commentId: Overload:CoreWCF.Security.IssuedTokenServiceCredential.RevocationMode
  isExternal: true
  name: RevocationMode
  nameWithType: IssuedTokenServiceCredential.RevocationMode
  fullName: CoreWCF.Security.IssuedTokenServiceCredential.RevocationMode
- uid: System.Security.Cryptography.X509Certificates.X509RevocationMode
  isExternal: true
  name: X509RevocationMode
  nameWithType: X509RevocationMode
  fullName: System.Security.Cryptography.X509Certificates.X509RevocationMode
- uid: CoreWCF.Security.IssuedTokenServiceCredential.TrustedStoreLocation*
  commentId: Overload:CoreWCF.Security.IssuedTokenServiceCredential.TrustedStoreLocation
  isExternal: true
  name: TrustedStoreLocation
  nameWithType: IssuedTokenServiceCredential.TrustedStoreLocation
  fullName: CoreWCF.Security.IssuedTokenServiceCredential.TrustedStoreLocation
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  isExternal: true
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: CoreWCF.Security.IssuedTokenServiceCredential.CustomCertificateValidator*
  commentId: Overload:CoreWCF.Security.IssuedTokenServiceCredential.CustomCertificateValidator
  isExternal: true
  name: CustomCertificateValidator
  nameWithType: IssuedTokenServiceCredential.CustomCertificateValidator
  fullName: CoreWCF.Security.IssuedTokenServiceCredential.CustomCertificateValidator
- uid: CoreWCF.IdentityModel.Selectors.X509CertificateValidator
  commentId: T:CoreWCF.IdentityModel.Selectors.X509CertificateValidator
  parent: CoreWCF.IdentityModel.Selectors
  isExternal: true
  name: X509CertificateValidator
  nameWithType: X509CertificateValidator
  fullName: CoreWCF.IdentityModel.Selectors.X509CertificateValidator
- uid: CoreWCF.Security.IssuedTokenServiceCredential.AllowUntrustedRsaIssuers*
  commentId: Overload:CoreWCF.Security.IssuedTokenServiceCredential.AllowUntrustedRsaIssuers
  isExternal: true
  name: AllowUntrustedRsaIssuers
  nameWithType: IssuedTokenServiceCredential.AllowUntrustedRsaIssuers
  fullName: CoreWCF.Security.IssuedTokenServiceCredential.AllowUntrustedRsaIssuers
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
