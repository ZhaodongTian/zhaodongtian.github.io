### YamlMime:ManagedReference
items:
- uid: CoreWCF.IdentityModel.Tokens.AudienceRestriction
  commentId: T:CoreWCF.IdentityModel.Tokens.AudienceRestriction
  id: AudienceRestriction
  parent: CoreWCF.IdentityModel.Tokens
  children:
  - CoreWCF.IdentityModel.Tokens.AudienceRestriction.#ctor
  - CoreWCF.IdentityModel.Tokens.AudienceRestriction.#ctor(CoreWCF.IdentityModel.Selectors.AudienceUriMode)
  - CoreWCF.IdentityModel.Tokens.AudienceRestriction.AllowedAudienceUris
  - CoreWCF.IdentityModel.Tokens.AudienceRestriction.AudienceMode
  langs:
  - csharp
  - vb
  name: AudienceRestriction
  nameWithType: AudienceRestriction
  fullName: CoreWCF.IdentityModel.Tokens.AudienceRestriction
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nDefines settings for a AudienceRestriction verification.\n"
  syntax:
    content: 'public class AudienceRestriction : Object'
    content.vb: >-
      Public Class AudienceRestriction
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.IdentityModel.Tokens.AudienceRestriction.#ctor
  commentId: M:CoreWCF.IdentityModel.Tokens.AudienceRestriction.#ctor
  id: '#ctor'
  parent: CoreWCF.IdentityModel.Tokens.AudienceRestriction
  langs:
  - csharp
  - vb
  name: AudienceRestriction()
  nameWithType: AudienceRestriction.AudienceRestriction()
  fullName: CoreWCF.IdentityModel.Tokens.AudienceRestriction.AudienceRestriction()
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nCreates an instance of <xref href=\"CoreWCF.IdentityModel.Tokens.AudienceRestriction\" data-throw-if-not-resolved=\"false\"></xref>"
  syntax:
    content: public AudienceRestriction()
    content.vb: Public Sub New
  overload: CoreWCF.IdentityModel.Tokens.AudienceRestriction.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.AudienceRestriction.#ctor(CoreWCF.IdentityModel.Selectors.AudienceUriMode)
  commentId: M:CoreWCF.IdentityModel.Tokens.AudienceRestriction.#ctor(CoreWCF.IdentityModel.Selectors.AudienceUriMode)
  id: '#ctor(CoreWCF.IdentityModel.Selectors.AudienceUriMode)'
  parent: CoreWCF.IdentityModel.Tokens.AudienceRestriction
  langs:
  - csharp
  - vb
  name: AudienceRestriction(AudienceUriMode)
  nameWithType: AudienceRestriction.AudienceRestriction(AudienceUriMode)
  fullName: CoreWCF.IdentityModel.Tokens.AudienceRestriction.AudienceRestriction(CoreWCF.IdentityModel.Selectors.AudienceUriMode)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nCreates an instance of <xref href=\"CoreWCF.IdentityModel.Tokens.AudienceRestriction\" data-throw-if-not-resolved=\"false\"></xref>"
  syntax:
    content: public AudienceRestriction(AudienceUriMode audienceMode)
    parameters:
    - id: audienceMode
      type: CoreWCF.IdentityModel.Selectors.AudienceUriMode
      description: Specifies the mode in which AudienceUri restriction is applied.
    content.vb: Public Sub New(audienceMode As AudienceUriMode)
  overload: CoreWCF.IdentityModel.Tokens.AudienceRestriction.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.AudienceRestriction.AudienceMode
  commentId: P:CoreWCF.IdentityModel.Tokens.AudienceRestriction.AudienceMode
  id: AudienceMode
  parent: CoreWCF.IdentityModel.Tokens.AudienceRestriction
  langs:
  - csharp
  - vb
  name: AudienceMode
  nameWithType: AudienceRestriction.AudienceMode
  fullName: CoreWCF.IdentityModel.Tokens.AudienceRestriction.AudienceMode
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets/Sets the mode in which Audience URI restriction is applied.\n"
  syntax:
    content: public AudienceUriMode AudienceMode { get; set; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Selectors.AudienceUriMode
    content.vb: Public Property AudienceMode As AudienceUriMode
  overload: CoreWCF.IdentityModel.Tokens.AudienceRestriction.AudienceMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.AudienceRestriction.AllowedAudienceUris
  commentId: P:CoreWCF.IdentityModel.Tokens.AudienceRestriction.AllowedAudienceUris
  id: AllowedAudienceUris
  parent: CoreWCF.IdentityModel.Tokens.AudienceRestriction
  langs:
  - csharp
  - vb
  name: AllowedAudienceUris
  nameWithType: AudienceRestriction.AllowedAudienceUris
  fullName: CoreWCF.IdentityModel.Tokens.AudienceRestriction.AllowedAudienceUris
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets the list of Allowed Audience URIs.\n"
  syntax:
    content: public Collection<Uri> AllowedAudienceUris { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Uri}
    content.vb: Public ReadOnly Property AllowedAudienceUris As Collection(Of Uri)
  overload: CoreWCF.IdentityModel.Tokens.AudienceRestriction.AllowedAudienceUris*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CoreWCF.IdentityModel.Tokens
  commentId: N:CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: CoreWCF.IdentityModel.Tokens
  nameWithType: CoreWCF.IdentityModel.Tokens
  fullName: CoreWCF.IdentityModel.Tokens
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.IdentityModel.Tokens.AudienceRestriction.#ctor*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.AudienceRestriction.#ctor
  isExternal: true
  name: AudienceRestriction
  nameWithType: AudienceRestriction.AudienceRestriction
  fullName: CoreWCF.IdentityModel.Tokens.AudienceRestriction.AudienceRestriction
- uid: CoreWCF.IdentityModel.Selectors.AudienceUriMode
  commentId: T:CoreWCF.IdentityModel.Selectors.AudienceUriMode
  parent: CoreWCF.IdentityModel.Selectors
  isExternal: true
  name: AudienceUriMode
  nameWithType: AudienceUriMode
  fullName: CoreWCF.IdentityModel.Selectors.AudienceUriMode
- uid: CoreWCF.IdentityModel.Selectors
  commentId: N:CoreWCF.IdentityModel.Selectors
  isExternal: true
  name: CoreWCF.IdentityModel.Selectors
  nameWithType: CoreWCF.IdentityModel.Selectors
  fullName: CoreWCF.IdentityModel.Selectors
- uid: CoreWCF.IdentityModel.Tokens.AudienceRestriction.AudienceMode*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.AudienceRestriction.AudienceMode
  isExternal: true
  name: AudienceMode
  nameWithType: AudienceRestriction.AudienceMode
  fullName: CoreWCF.IdentityModel.Tokens.AudienceRestriction.AudienceMode
- uid: CoreWCF.IdentityModel.Tokens.AudienceRestriction.AllowedAudienceUris*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.AudienceRestriction.AllowedAudienceUris
  isExternal: true
  name: AllowedAudienceUris
  nameWithType: AudienceRestriction.AllowedAudienceUris
  fullName: CoreWCF.IdentityModel.Tokens.AudienceRestriction.AllowedAudienceUris
- uid: System.Collections.ObjectModel.Collection{System.Uri}
  commentId: '!:System.Collections.ObjectModel.Collection{System.Uri}'
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<Uri>
  nameWithType: Collection<Uri>
  fullName: System.Collections.ObjectModel.Collection<System.Uri>
  nameWithType.vb: Collection(Of Uri)
  fullName.vb: System.Collections.ObjectModel.Collection(Of System.Uri)
  name.vb: Collection(Of Uri)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<>
  nameWithType: Collection<>
  fullName: System.Collections.ObjectModel.Collection<>
  nameWithType.vb: Collection(Of )
  fullName.vb: System.Collections.ObjectModel.Collection(Of )
  name.vb: Collection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
