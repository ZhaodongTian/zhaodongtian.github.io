### YamlMime:ManagedReference
items:
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler
  commentId: T:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler
  id: Saml2SecurityTokenHandler
  parent: CoreWCF.IdentityModel.Tokens
  children:
  - CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor
  - CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor(CoreWCF.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  - CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor(Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler)
  - CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor(Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler,CoreWCF.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  - CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  - CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken
  - CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken
  - CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers
  - CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer
  - CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  - CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys(Microsoft.IdentityModel.Tokens.Saml2.Saml2Assertion,CoreWCF.IdentityModel.Selectors.SecurityTokenResolver)
  - CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenProfile11ValueType
  - CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType
  - CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken(Microsoft.IdentityModel.Tokens.Saml2.Saml2Assertion,CoreWCF.IdentityModel.Selectors.SecurityTokenResolver,CoreWCF.IdentityModel.Tokens.SecurityToken@)
  - CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  - CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,CoreWCF.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  - vb
  name: Saml2SecurityTokenHandler
  nameWithType: Saml2SecurityTokenHandler
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nCreates SAML2 assertion-based security tokens\n"
  syntax:
    content: 'public class Saml2SecurityTokenHandler : SecurityTokenHandler'
    content.vb: >-
      Public Class Saml2SecurityTokenHandler
          Inherits SecurityTokenHandler
  inheritance:
  - System.Object
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  inheritedMembers:
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,CoreWCF.IdentityModel.Selectors.SecurityTokenResolver)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(CoreWCF.IdentityModel.Tokens.SecurityToken,System.Boolean)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.Configuration
  - CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenProfile11ValueType
  commentId: F:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenProfile11ValueType
  id: TokenProfile11ValueType
  parent: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  - vb
  name: TokenProfile11ValueType
  nameWithType: Saml2SecurityTokenHandler.TokenProfile11ValueType
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenProfile11ValueType
  type: Field
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nThe key identifier value type for SAML 2.0 assertion IDs, as defined\nby the OASIS Web Services Security SAML Token Profile 1.1. \n"
  syntax:
    content: public const string TokenProfile11ValueType = "http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLID"
    return:
      type: System.String
    content.vb: Public Const TokenProfile11ValueType As String = "http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLID"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor
  commentId: M:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor
  id: '#ctor'
  parent: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  - vb
  name: Saml2SecurityTokenHandler()
  nameWithType: Saml2SecurityTokenHandler.Saml2SecurityTokenHandler()
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.Saml2SecurityTokenHandler()
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nCreates an instance of <xref href=\"CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler\" data-throw-if-not-resolved=\"false\"></xref>"
  syntax:
    content: public Saml2SecurityTokenHandler()
    content.vb: Public Sub New
  overload: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor(CoreWCF.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  commentId: M:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor(CoreWCF.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  id: '#ctor(CoreWCF.IdentityModel.Tokens.SamlSecurityTokenRequirement)'
  parent: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  - vb
  name: Saml2SecurityTokenHandler(SamlSecurityTokenRequirement)
  nameWithType: Saml2SecurityTokenHandler.Saml2SecurityTokenHandler(SamlSecurityTokenRequirement)
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.Saml2SecurityTokenHandler(CoreWCF.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nCreates an instance of <xref href=\"CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler\" data-throw-if-not-resolved=\"false\"></xref>"
  syntax:
    content: public Saml2SecurityTokenHandler(SamlSecurityTokenRequirement samlSecurityTokenRequirement)
    parameters:
    - id: samlSecurityTokenRequirement
      type: CoreWCF.IdentityModel.Tokens.SamlSecurityTokenRequirement
      description: The SamlSecurityTokenRequirement to be used by the Saml2SecurityTokenHandler instance when validating tokens.
    content.vb: Public Sub New(samlSecurityTokenRequirement As SamlSecurityTokenRequirement)
  overload: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor(Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler)
  commentId: M:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor(Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler)
  id: '#ctor(Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler)'
  parent: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  - vb
  name: Saml2SecurityTokenHandler(Saml2SecurityTokenHandler)
  nameWithType: Saml2SecurityTokenHandler.Saml2SecurityTokenHandler(Saml2SecurityTokenHandler)
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.Saml2SecurityTokenHandler(Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nMethod exposed for extensibility\n"
  syntax:
    content: public Saml2SecurityTokenHandler(Saml2SecurityTokenHandler saml2SecurityTokenHandler)
    parameters:
    - id: saml2SecurityTokenHandler
      type: Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler
      description: "\n"
    content.vb: Public Sub New(saml2SecurityTokenHandler As Saml2SecurityTokenHandler)
  overload: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor(Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler,CoreWCF.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  commentId: M:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor(Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler,CoreWCF.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  id: '#ctor(Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler,CoreWCF.IdentityModel.Tokens.SamlSecurityTokenRequirement)'
  parent: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  - vb
  name: Saml2SecurityTokenHandler(Saml2SecurityTokenHandler, SamlSecurityTokenRequirement)
  nameWithType: Saml2SecurityTokenHandler.Saml2SecurityTokenHandler(Saml2SecurityTokenHandler, SamlSecurityTokenRequirement)
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.Saml2SecurityTokenHandler(Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler, CoreWCF.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: public Saml2SecurityTokenHandler(Saml2SecurityTokenHandler saml2SecurityTokenHandler, SamlSecurityTokenRequirement samlSecurityTokenRequirement)
    parameters:
    - id: saml2SecurityTokenHandler
      type: Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler
    - id: samlSecurityTokenRequirement
      type: CoreWCF.IdentityModel.Tokens.SamlSecurityTokenRequirement
    content.vb: Public Sub New(saml2SecurityTokenHandler As Saml2SecurityTokenHandler, samlSecurityTokenRequirement As SamlSecurityTokenRequirement)
  overload: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  commentId: M:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  id: ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  parent: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  - vb
  name: ValidateToken(SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nValidates a <xref href=\"CoreWCF.IdentityModel.Tokens.Saml2SecurityToken\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public override ReadOnlyCollection<ClaimsIdentity> ValidateToken(SecurityToken token)
    parameters:
    - id: token
      type: CoreWCF.IdentityModel.Tokens.SecurityToken
      description: The <xref href="CoreWCF.IdentityModel.Tokens.Saml2SecurityToken" data-throw-if-not-resolved="false"></xref> to validate.
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
      description: The <xref href="System.Collections.ObjectModel.ReadOnlyCollection%601" data-throw-if-not-resolved="false"></xref> of <xref href="System.Security.Claims.ClaimsIdentity" data-throw-if-not-resolved="false"></xref> representing the identities contained in the token.
    content.vb: Public Overrides Function ValidateToken(token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)
  overridden: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  overload: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The parameter &apos;token&apos; is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The token is not assignable from <xref href="CoreWCF.IdentityModel.Tokens.Saml2SecurityToken" data-throw-if-not-resolved="false"></xref>.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Configuration <xref href="CoreWCF.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" data-throw-if-not-resolved="false"></xref>is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Saml2SecurityToken.Assertion is null.
  - type: CoreWCF.IdentityModel.Tokens.SecurityTokenValidationException
    commentId: T:CoreWCF.IdentityModel.Tokens.SecurityTokenValidationException
    description: Thrown if Saml2SecurityToken.Assertion.SigningToken is null.
  - type: CoreWCF.IdentityModel.Tokens.SecurityTokenValidationException
    commentId: T:CoreWCF.IdentityModel.Tokens.SecurityTokenValidationException
    description: Thrown if the certificate associated with the token issuer does not pass validation.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  commentId: M:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  id: CanReadToken(System.Xml.XmlReader)
  parent: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  - vb
  name: CanReadToken(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.CanReadToken(XmlReader)
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nIndicates whether the current XML element can be read as a token \nof the type handled by this instance.\n"
  syntax:
    content: public override bool CanReadToken(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "An XML reader positioned at a start \n      element. The reader should not be advanced."
    return:
      type: System.Boolean
      description: '&apos;True&apos; if the ReadToken method can the element.'
    content.vb: Public Overrides Function CanReadToken(reader As XmlReader) As Boolean
  overridden: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  overload: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  commentId: M:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  id: ReadToken(System.Xml.XmlReader)
  parent: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  - vb
  name: ReadToken(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadToken(XmlReader)
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nDeserializes from XML a token of the type handled by this instance.\n"
  syntax:
    content: public override SecurityToken ReadToken(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "An XML reader positioned at the token&apos;s start \n      element."
    return:
      type: CoreWCF.IdentityModel.Tokens.SecurityToken
      description: An instance of <xref href="CoreWCF.IdentityModel.Tokens.Saml2SecurityToken" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function ReadToken(reader As XmlReader) As SecurityToken
  overridden: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  overload: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Is thrown if &apos;Configuration&apos; or &apos;Configruation.IssuerTokenResolver&apos; is null.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken(Microsoft.IdentityModel.Tokens.Saml2.Saml2Assertion,CoreWCF.IdentityModel.Selectors.SecurityTokenResolver,CoreWCF.IdentityModel.Tokens.SecurityToken@)
  commentId: M:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken(Microsoft.IdentityModel.Tokens.Saml2.Saml2Assertion,CoreWCF.IdentityModel.Selectors.SecurityTokenResolver,CoreWCF.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveIssuerToken(Microsoft.IdentityModel.Tokens.Saml2.Saml2Assertion,CoreWCF.IdentityModel.Selectors.SecurityTokenResolver,CoreWCF.IdentityModel.Tokens.SecurityToken@)
  parent: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  - vb
  name: TryResolveIssuerToken(Saml2Assertion, SecurityTokenResolver, out SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.TryResolveIssuerToken(Saml2Assertion, SecurityTokenResolver, out SecurityToken)
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken(Microsoft.IdentityModel.Tokens.Saml2.Saml2Assertion, CoreWCF.IdentityModel.Selectors.SecurityTokenResolver, out CoreWCF.IdentityModel.Tokens.SecurityToken)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  syntax:
    content: protected virtual bool TryResolveIssuerToken(Saml2Assertion assertion, SecurityTokenResolver issuerResolver, out SecurityToken token)
    parameters:
    - id: assertion
      type: Microsoft.IdentityModel.Tokens.Saml2.Saml2Assertion
    - id: issuerResolver
      type: CoreWCF.IdentityModel.Selectors.SecurityTokenResolver
    - id: token
      type: CoreWCF.IdentityModel.Tokens.SecurityToken
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function TryResolveIssuerToken(assertion As Saml2Assertion, issuerResolver As SecurityTokenResolver, ByRef token As SecurityToken) As Boolean
  overload: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken*
  nameWithType.vb: Saml2SecurityTokenHandler.TryResolveIssuerToken(Saml2Assertion, SecurityTokenResolver, ByRef SecurityToken)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken(Microsoft.IdentityModel.Tokens.Saml2.Saml2Assertion, CoreWCF.IdentityModel.Selectors.SecurityTokenResolver, ByRef CoreWCF.IdentityModel.Tokens.SecurityToken)
  name.vb: TryResolveIssuerToken(Saml2Assertion, SecurityTokenResolver, ByRef SecurityToken)
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys(Microsoft.IdentityModel.Tokens.Saml2.Saml2Assertion,CoreWCF.IdentityModel.Selectors.SecurityTokenResolver)
  commentId: M:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys(Microsoft.IdentityModel.Tokens.Saml2.Saml2Assertion,CoreWCF.IdentityModel.Selectors.SecurityTokenResolver)
  id: ResolveSecurityKeys(Microsoft.IdentityModel.Tokens.Saml2.Saml2Assertion,CoreWCF.IdentityModel.Selectors.SecurityTokenResolver)
  parent: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  - vb
  name: ResolveSecurityKeys(Saml2Assertion, SecurityTokenResolver)
  nameWithType: Saml2SecurityTokenHandler.ResolveSecurityKeys(Saml2Assertion, SecurityTokenResolver)
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys(Microsoft.IdentityModel.Tokens.Saml2.Saml2Assertion, CoreWCF.IdentityModel.Selectors.SecurityTokenResolver)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nResolves the collection of <xref href=\"CoreWCF.IdentityModel.Tokens.SecurityKey\" data-throw-if-not-resolved=\"false\"></xref> referenced in a <xref href=\"Microsoft.IdentityModel.Tokens.Saml2.Saml2Assertion\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected virtual ReadOnlyCollection<SecurityKey> ResolveSecurityKeys(Saml2Assertion assertion, SecurityTokenResolver resolver)
    parameters:
    - id: assertion
      type: Microsoft.IdentityModel.Tokens.Saml2.Saml2Assertion
      description: "\n<xref href=\"Microsoft.IdentityModel.Tokens.Saml2.Saml2Assertion\" data-throw-if-not-resolved=\"false\"></xref> to process."
    - id: resolver
      type: CoreWCF.IdentityModel.Selectors.SecurityTokenResolver
      description: "\n<xref href=\"CoreWCF.IdentityModel.Selectors.SecurityTokenResolver\" data-throw-if-not-resolved=\"false\"></xref> to use in resolving the <xref href=\"CoreWCF.IdentityModel.Tokens.SecurityKey\" data-throw-if-not-resolved=\"false\"></xref>."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Tokens.SecurityKey}
      description: A read only collection of <xref href="CoreWCF.IdentityModel.Tokens.SecurityKey" data-throw-if-not-resolved="false"></xref> contained in the assertion.
    content.vb: Protected Overridable Function ResolveSecurityKeys(assertion As Saml2Assertion, resolver As SecurityTokenResolver) As ReadOnlyCollection(Of SecurityKey)
  overload: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,CoreWCF.IdentityModel.Tokens.SecurityToken)
  commentId: M:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,CoreWCF.IdentityModel.Tokens.SecurityToken)
  id: WriteToken(System.Xml.XmlWriter,CoreWCF.IdentityModel.Tokens.SecurityToken)
  parent: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  - vb
  name: WriteToken(XmlWriter, SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.WriteToken(XmlWriter, SecurityToken)
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken(System.Xml.XmlWriter, CoreWCF.IdentityModel.Tokens.SecurityToken)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nSerializes the given SecurityToken to the XmlWriter.\n"
  syntax:
    content: public override void WriteToken(XmlWriter writer, SecurityToken token)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: XmlWriter into which the token is serialized.
    - id: token
      type: CoreWCF.IdentityModel.Tokens.SecurityToken
      description: SecurityToken to be serialized.
    content.vb: Public Overrides Sub WriteToken(writer As XmlWriter, token As SecurityToken)
  overridden: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,CoreWCF.IdentityModel.Tokens.SecurityToken)
  overload: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Input parameter &apos;writer&apos; or &apos;token&apos; is null.
  - type: CoreWCF.IdentityModel.Tokens.SecurityTokenException
    commentId: T:CoreWCF.IdentityModel.Tokens.SecurityTokenException
    description: The given &apos;token&apos; is not a Saml2SecurityToken.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers
  commentId: M:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers
  id: GetTokenTypeIdentifiers
  parent: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  - vb
  name: GetTokenTypeIdentifiers()
  nameWithType: Saml2SecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nReturns the saml token&apos;s token type that is supported by this handler.\n"
  syntax:
    content: public override string[] GetTokenTypeIdentifiers()
    return:
      type: System.String[]
    content.vb: Public Overrides Function GetTokenTypeIdentifiers As String()
  overridden: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers
  overload: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken
  commentId: P:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken
  id: CanValidateToken
  parent: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  - vb
  name: CanValidateToken
  nameWithType: Saml2SecurityTokenHandler.CanValidateToken
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nReturns value indicates if this handler can validate tokens of type\nSaml2SecurityToken.\n"
  syntax:
    content: public override bool CanValidateToken { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property CanValidateToken As Boolean
  overridden: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken
  overload: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken
  commentId: P:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken
  id: CanWriteToken
  parent: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  - vb
  name: CanWriteToken
  nameWithType: Saml2SecurityTokenHandler.CanWriteToken
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets a boolean indicating if the SecurityTokenHandler can Serialize Tokens. Return true by default.\n"
  syntax:
    content: public override bool CanWriteToken { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property CanWriteToken As Boolean
  overridden: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken
  overload: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer
  commentId: P:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer
  id: KeyInfoSerializer
  parent: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  - vb
  name: KeyInfoSerializer
  nameWithType: Saml2SecurityTokenHandler.KeyInfoSerializer
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets or Sets a SecurityTokenSerializers that will be used to serialize and deserializer\nSecurtyKeyIdentifier. For example, SamlSubject SecurityKeyIdentifier or Signature \nSecurityKeyIdentifier.\n"
  syntax:
    content: public SecurityTokenSerializer KeyInfoSerializer { get; set; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Selectors.SecurityTokenSerializer
    content.vb: Public Property KeyInfoSerializer As SecurityTokenSerializer
  overload: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType
  commentId: P:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType
  id: TokenType
  parent: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  - vb
  name: TokenType
  nameWithType: Saml2SecurityTokenHandler.TokenType
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Tokens
  summary: "\nGets the System.Type of the SecurityToken is supported by ththis handler.\n"
  syntax:
    content: public override Type TokenType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Overrides ReadOnly Property TokenType As Type
  overridden: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.TokenType
  overload: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: CoreWCF.IdentityModel.Tokens
  commentId: N:CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: CoreWCF.IdentityModel.Tokens
  nameWithType: CoreWCF.IdentityModel.Tokens
  fullName: CoreWCF.IdentityModel.Tokens
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SecurityTokenHandler
  nameWithType: SecurityTokenHandler
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: CanReadToken(String)
  nameWithType: SecurityTokenHandler.CanReadToken(String)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
    name: CanReadToken
    nameWithType: SecurityTokenHandler.CanReadToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
    name: CanReadToken
    nameWithType: SecurityTokenHandler.CanReadToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,CoreWCF.IdentityModel.Selectors.SecurityTokenResolver)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,CoreWCF.IdentityModel.Selectors.SecurityTokenResolver)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: ReadToken(XmlReader, SecurityTokenResolver)
  nameWithType: SecurityTokenHandler.ReadToken(XmlReader, SecurityTokenResolver)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader, CoreWCF.IdentityModel.Selectors.SecurityTokenResolver)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,CoreWCF.IdentityModel.Selectors.SecurityTokenResolver)
    name: ReadToken
    nameWithType: SecurityTokenHandler.ReadToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.IdentityModel.Selectors.SecurityTokenResolver
    name: SecurityTokenResolver
    nameWithType: SecurityTokenResolver
    fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenResolver
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,CoreWCF.IdentityModel.Selectors.SecurityTokenResolver)
    name: ReadToken
    nameWithType: SecurityTokenHandler.ReadToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.IdentityModel.Selectors.SecurityTokenResolver
    name: SecurityTokenResolver
    nameWithType: SecurityTokenResolver
    fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenResolver
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: ReadToken(String)
  nameWithType: SecurityTokenHandler.ReadToken(String)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
    name: ReadToken
    nameWithType: SecurityTokenHandler.ReadToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
    name: ReadToken
    nameWithType: SecurityTokenHandler.ReadToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: WriteToken(SecurityToken)
  nameWithType: SecurityTokenHandler.WriteToken(SecurityToken)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: WriteToken
    nameWithType: SecurityTokenHandler.WriteToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: WriteToken
    nameWithType: SecurityTokenHandler.WriteToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
    name: CanReadKeyIdentifierClause
    nameWithType: SecurityTokenHandler.CanReadKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
    name: CanReadKeyIdentifierClause
    nameWithType: SecurityTokenHandler.CanReadKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
    name: ReadKeyIdentifierClause
    nameWithType: SecurityTokenHandler.ReadKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
    name: ReadKeyIdentifierClause
    nameWithType: SecurityTokenHandler.ReadKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
    name: CanWriteKeyIdentifierClause
    nameWithType: SecurityTokenHandler.CanWriteKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
    name: CanWriteKeyIdentifierClause
    nameWithType: SecurityTokenHandler.CanWriteKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: WriteKeyIdentifierClause(XmlWriter, SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter, SecurityKeyIdentifierClause)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter, CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
    name: WriteKeyIdentifierClause
    nameWithType: SecurityTokenHandler.WriteKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,CoreWCF.IdentityModel.SecurityKeyIdentifierClause)
    name: WriteKeyIdentifierClause
    nameWithType: SecurityTokenHandler.WriteKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: CoreWCF.IdentityModel.SecurityKeyIdentifierClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: CreateToken(SecurityTokenDescriptor)
  nameWithType: SecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor)
    name: CreateToken
    nameWithType: SecurityTokenHandler.CreateToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
    name: SecurityTokenDescriptor
    nameWithType: SecurityTokenDescriptor
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor)
    name: CreateToken
    nameWithType: SecurityTokenHandler.CreateToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
    name: SecurityTokenDescriptor
    nameWithType: SecurityTokenDescriptor
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenDescriptor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(CoreWCF.IdentityModel.Tokens.SecurityToken,System.Boolean)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(CoreWCF.IdentityModel.Tokens.SecurityToken,System.Boolean)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: CreateSecurityTokenReference(SecurityToken, Boolean)
  nameWithType: SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken, Boolean)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(CoreWCF.IdentityModel.Tokens.SecurityToken, System.Boolean)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(CoreWCF.IdentityModel.Tokens.SecurityToken,System.Boolean)
    name: CreateSecurityTokenReference
    nameWithType: SecurityTokenHandler.CreateSecurityTokenReference
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(CoreWCF.IdentityModel.Tokens.SecurityToken,System.Boolean)
    name: CreateSecurityTokenReference
    nameWithType: SecurityTokenHandler.CreateSecurityTokenReference
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: DetectReplayedToken(SecurityToken)
  nameWithType: SecurityTokenHandler.DetectReplayedToken(SecurityToken)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: DetectReplayedToken
    nameWithType: SecurityTokenHandler.DetectReplayedToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: DetectReplayedToken
    nameWithType: SecurityTokenHandler.DetectReplayedToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.Configuration
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.Configuration
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: Configuration
  nameWithType: SecurityTokenHandler.Configuration
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.Configuration
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: ContainingCollection
  nameWithType: SecurityTokenHandler.ContainingCollection
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor
  isExternal: true
  name: Saml2SecurityTokenHandler
  nameWithType: Saml2SecurityTokenHandler.Saml2SecurityTokenHandler
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.Saml2SecurityTokenHandler
- uid: CoreWCF.IdentityModel.Tokens.SamlSecurityTokenRequirement
  commentId: T:CoreWCF.IdentityModel.Tokens.SamlSecurityTokenRequirement
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SamlSecurityTokenRequirement
  nameWithType: SamlSecurityTokenRequirement
  fullName: CoreWCF.IdentityModel.Tokens.SamlSecurityTokenRequirement
- uid: Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler
  isExternal: true
  name: Saml2SecurityTokenHandler
  nameWithType: Saml2SecurityTokenHandler
  fullName: Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: ValidateToken(SecurityToken)
  nameWithType: SecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: ValidateToken
    nameWithType: SecurityTokenHandler.ValidateToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: ValidateToken
    nameWithType: SecurityTokenHandler.ValidateToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken
  isExternal: true
  name: ValidateToken
  nameWithType: Saml2SecurityTokenHandler.ValidateToken
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenValidationException
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityTokenValidationException
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SecurityTokenValidationException
  nameWithType: SecurityTokenValidationException
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenValidationException
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityToken
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
  commentId: '!:System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}'
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<ClaimsIdentity>
  nameWithType: ReadOnlyCollection<ClaimsIdentity>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  nameWithType.vb: ReadOnlyCollection(Of ClaimsIdentity)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Security.Claims.ClaimsIdentity)
  name.vb: ReadOnlyCollection(Of ClaimsIdentity)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: System.Security.Claims.ClaimsIdentity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: System.Security.Claims.ClaimsIdentity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<>
  nameWithType: ReadOnlyCollection<>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<>
  nameWithType.vb: ReadOnlyCollection(Of )
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of )
  name.vb: ReadOnlyCollection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: CanReadToken(XmlReader)
  nameWithType: SecurityTokenHandler.CanReadToken(XmlReader)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
    name: CanReadToken
    nameWithType: SecurityTokenHandler.CanReadToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
    name: CanReadToken
    nameWithType: SecurityTokenHandler.CanReadToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken
  isExternal: true
  name: CanReadToken
  nameWithType: Saml2SecurityTokenHandler.CanReadToken
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken
- uid: System.Xml.XmlReader
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: ReadToken(XmlReader)
  nameWithType: SecurityTokenHandler.ReadToken(XmlReader)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
    name: ReadToken
    nameWithType: SecurityTokenHandler.ReadToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
    name: ReadToken
    nameWithType: SecurityTokenHandler.ReadToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.ReadToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken
  isExternal: true
  name: ReadToken
  nameWithType: Saml2SecurityTokenHandler.ReadToken
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken
  isExternal: true
  name: TryResolveIssuerToken
  nameWithType: Saml2SecurityTokenHandler.TryResolveIssuerToken
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken
- uid: Microsoft.IdentityModel.Tokens.Saml2.Saml2Assertion
  isExternal: true
  name: Saml2Assertion
  nameWithType: Saml2Assertion
  fullName: Microsoft.IdentityModel.Tokens.Saml2.Saml2Assertion
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenResolver
  commentId: T:CoreWCF.IdentityModel.Selectors.SecurityTokenResolver
  parent: CoreWCF.IdentityModel.Selectors
  isExternal: true
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenResolver
- uid: CoreWCF.IdentityModel.Selectors
  commentId: N:CoreWCF.IdentityModel.Selectors
  isExternal: true
  name: CoreWCF.IdentityModel.Selectors
  nameWithType: CoreWCF.IdentityModel.Selectors
  fullName: CoreWCF.IdentityModel.Selectors
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys
  isExternal: true
  name: ResolveSecurityKeys
  nameWithType: Saml2SecurityTokenHandler.ResolveSecurityKeys
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys
- uid: System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Tokens.SecurityKey}
  commentId: '!:System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Tokens.SecurityKey}'
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<SecurityKey>
  nameWithType: ReadOnlyCollection<SecurityKey>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<CoreWCF.IdentityModel.Tokens.SecurityKey>
  nameWithType.vb: ReadOnlyCollection(Of SecurityKey)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of CoreWCF.IdentityModel.Tokens.SecurityKey)
  name.vb: ReadOnlyCollection(Of SecurityKey)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: CoreWCF.IdentityModel.Tokens.SecurityKey
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: CoreWCF.IdentityModel.Tokens.SecurityKey
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,CoreWCF.IdentityModel.Tokens.SecurityToken)
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,CoreWCF.IdentityModel.Tokens.SecurityToken)
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: WriteToken(XmlWriter, SecurityToken)
  nameWithType: SecurityTokenHandler.WriteToken(XmlWriter, SecurityToken)
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter, CoreWCF.IdentityModel.Tokens.SecurityToken)
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: WriteToken
    nameWithType: SecurityTokenHandler.WriteToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,CoreWCF.IdentityModel.Tokens.SecurityToken)
    name: WriteToken
    nameWithType: SecurityTokenHandler.WriteToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.WriteToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken
  isExternal: true
  name: WriteToken
  nameWithType: Saml2SecurityTokenHandler.WriteToken
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenException
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityTokenException
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SecurityTokenException
  nameWithType: SecurityTokenException
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenException
- uid: System.Xml.XmlWriter
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers
  commentId: M:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: GetTokenTypeIdentifiers()
  nameWithType: SecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers()
  spec.csharp:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers
    name: GetTokenTypeIdentifiers
    nameWithType: SecurityTokenHandler.GetTokenTypeIdentifiers
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers
    name: GetTokenTypeIdentifiers
    nameWithType: SecurityTokenHandler.GetTokenTypeIdentifiers
    fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers
  isExternal: true
  name: GetTokenTypeIdentifiers
  nameWithType: Saml2SecurityTokenHandler.GetTokenTypeIdentifiers
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: CanValidateToken
  nameWithType: SecurityTokenHandler.CanValidateToken
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken
  isExternal: true
  name: CanValidateToken
  nameWithType: Saml2SecurityTokenHandler.CanValidateToken
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: CanWriteToken
  nameWithType: SecurityTokenHandler.CanWriteToken
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken
  isExternal: true
  name: CanWriteToken
  nameWithType: Saml2SecurityTokenHandler.CanWriteToken
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer
  isExternal: true
  name: KeyInfoSerializer
  nameWithType: Saml2SecurityTokenHandler.KeyInfoSerializer
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer
- uid: CoreWCF.IdentityModel.Selectors.SecurityTokenSerializer
  commentId: T:CoreWCF.IdentityModel.Selectors.SecurityTokenSerializer
  parent: CoreWCF.IdentityModel.Selectors
  isExternal: true
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: CoreWCF.IdentityModel.Selectors.SecurityTokenSerializer
- uid: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.TokenType
  commentId: P:CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.TokenType
  parent: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: true
  name: TokenType
  nameWithType: SecurityTokenHandler.TokenType
  fullName: CoreWCF.IdentityModel.Tokens.SecurityTokenHandler.TokenType
- uid: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType*
  commentId: Overload:CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType
  isExternal: true
  name: TokenType
  nameWithType: Saml2SecurityTokenHandler.TokenType
  fullName: CoreWCF.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType
- uid: System.Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
