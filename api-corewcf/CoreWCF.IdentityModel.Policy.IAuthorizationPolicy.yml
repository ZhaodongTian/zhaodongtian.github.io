### YamlMime:ManagedReference
items:
- uid: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
  commentId: T:CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
  id: IAuthorizationPolicy
  parent: CoreWCF.IdentityModel.Policy
  children:
  - CoreWCF.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(CoreWCF.IdentityModel.Policy.EvaluationContext,System.Object@)
  - CoreWCF.IdentityModel.Policy.IAuthorizationPolicy.Issuer
  langs:
  - csharp
  - vb
  name: IAuthorizationPolicy
  nameWithType: IAuthorizationPolicy
  fullName: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
  type: Interface
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Policy
  summary: Defines a set of rules for authorizing a user, given a set of claims.
  remarks: "Implement the &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface to add or map one set of claims to another. An authorization policy examines a set of claims and adds additional claims based on the current set. For example, an authorization policy might evaluate a claim that contains the date of birth and add a claim that asserts that the user is over 21 years old and add an Over21 claim to the &lt;xref:System.IdentityModel.Policy.EvaluationContext>.  \n\nClasses that implement the &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface do not authorize users, but they enable the &lt;xref:CoreWCF.ServiceAuthorizationManager> class to do so. The &lt;xref:CoreWCF.ServiceAuthorizationManager> calls the &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method for each authorization policy in effect. The &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method determines whether additional claims should be added for the user, based on the current context. An authorization policy&apos;s &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method may be called multiple times, as claims are added to the &lt;xref:System.IdentityModel.Policy.EvaluationContext> by other authorization policies. When all authorization policies in effect are done, the &lt;xref:CoreWCF.ServiceAuthorizationManager> class makes authorization decisions based upon the final set of claims. The &lt;xref:CoreWCF.ServiceAuthorizationManager> class then creates an &lt;xref:System.IdentityModel.Policy.AuthorizationContext> that contains an immutable set of claims that reflects these authorization decisions.  \n\n\n\n"
  syntax:
    content: 'public interface IAuthorizationPolicy : IAuthorizationComponent'
    content.vb: >-
      Public Interface IAuthorizationPolicy
          Inherits IAuthorizationComponent
  inheritedMembers:
  - CoreWCF.IdentityModel.Policy.IAuthorizationComponent.Id
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(CoreWCF.IdentityModel.Policy.EvaluationContext,System.Object@)
  commentId: M:CoreWCF.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(CoreWCF.IdentityModel.Policy.EvaluationContext,System.Object@)
  id: Evaluate(CoreWCF.IdentityModel.Policy.EvaluationContext,System.Object@)
  parent: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
  langs:
  - csharp
  - vb
  name: Evaluate(EvaluationContext, ref Object)
  nameWithType: IAuthorizationPolicy.Evaluate(EvaluationContext, ref Object)
  fullName: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(CoreWCF.IdentityModel.Policy.EvaluationContext, ref System.Object)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Policy
  syntax:
    content: bool Evaluate(EvaluationContext evaluationContext, ref object state)
    parameters:
    - id: evaluationContext
      type: CoreWCF.IdentityModel.Policy.EvaluationContext
    - id: state
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Function Evaluate(evaluationContext As EvaluationContext, ByRef state As Object) As Boolean
  overload: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy.Evaluate*
  nameWithType.vb: IAuthorizationPolicy.Evaluate(EvaluationContext, ByRef Object)
  fullName.vb: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(CoreWCF.IdentityModel.Policy.EvaluationContext, ByRef System.Object)
  name.vb: Evaluate(EvaluationContext, ByRef Object)
- uid: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy.Issuer
  commentId: P:CoreWCF.IdentityModel.Policy.IAuthorizationPolicy.Issuer
  id: Issuer
  parent: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
  langs:
  - csharp
  - vb
  name: Issuer
  nameWithType: IAuthorizationPolicy.Issuer
  fullName: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy.Issuer
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.IdentityModel.Policy
  syntax:
    content: ClaimSet Issuer { get; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Claims.ClaimSet
    content.vb: ReadOnly Property Issuer As ClaimSet
  overload: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy.Issuer*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: CoreWCF.IdentityModel.Policy
  commentId: N:CoreWCF.IdentityModel.Policy
  isExternal: true
  name: CoreWCF.IdentityModel.Policy
  nameWithType: CoreWCF.IdentityModel.Policy
  fullName: CoreWCF.IdentityModel.Policy
- uid: CoreWCF.IdentityModel.Policy.IAuthorizationComponent.Id
  commentId: P:CoreWCF.IdentityModel.Policy.IAuthorizationComponent.Id
  parent: CoreWCF.IdentityModel.Policy.IAuthorizationComponent
  isExternal: true
  name: Id
  nameWithType: IAuthorizationComponent.Id
  fullName: CoreWCF.IdentityModel.Policy.IAuthorizationComponent.Id
- uid: CoreWCF.IdentityModel.Policy.IAuthorizationComponent
  commentId: T:CoreWCF.IdentityModel.Policy.IAuthorizationComponent
  parent: CoreWCF.IdentityModel.Policy
  isExternal: true
  name: IAuthorizationComponent
  nameWithType: IAuthorizationComponent
  fullName: CoreWCF.IdentityModel.Policy.IAuthorizationComponent
- uid: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy.Evaluate*
  commentId: Overload:CoreWCF.IdentityModel.Policy.IAuthorizationPolicy.Evaluate
  isExternal: true
  name: Evaluate
  nameWithType: IAuthorizationPolicy.Evaluate
  fullName: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy.Evaluate
- uid: CoreWCF.IdentityModel.Policy.EvaluationContext
  commentId: T:CoreWCF.IdentityModel.Policy.EvaluationContext
  parent: CoreWCF.IdentityModel.Policy
  isExternal: true
  name: EvaluationContext
  nameWithType: EvaluationContext
  fullName: CoreWCF.IdentityModel.Policy.EvaluationContext
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy.Issuer*
  commentId: Overload:CoreWCF.IdentityModel.Policy.IAuthorizationPolicy.Issuer
  isExternal: true
  name: Issuer
  nameWithType: IAuthorizationPolicy.Issuer
  fullName: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy.Issuer
- uid: CoreWCF.IdentityModel.Claims.ClaimSet
  commentId: T:CoreWCF.IdentityModel.Claims.ClaimSet
  parent: CoreWCF.IdentityModel.Claims
  isExternal: true
  name: ClaimSet
  nameWithType: ClaimSet
  fullName: CoreWCF.IdentityModel.Claims.ClaimSet
- uid: CoreWCF.IdentityModel.Claims
  commentId: N:CoreWCF.IdentityModel.Claims
  isExternal: true
  name: CoreWCF.IdentityModel.Claims
  nameWithType: CoreWCF.IdentityModel.Claims
  fullName: CoreWCF.IdentityModel.Claims
