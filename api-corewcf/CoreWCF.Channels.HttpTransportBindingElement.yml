### YamlMime:ManagedReference
items:
- uid: CoreWCF.Channels.HttpTransportBindingElement
  commentId: T:CoreWCF.Channels.HttpTransportBindingElement
  id: HttpTransportBindingElement
  parent: CoreWCF.Channels
  children:
  - CoreWCF.Channels.HttpTransportBindingElement.#ctor
  - CoreWCF.Channels.HttpTransportBindingElement.#ctor(CoreWCF.Channels.HttpTransportBindingElement)
  - CoreWCF.Channels.HttpTransportBindingElement.AuthenticationScheme
  - CoreWCF.Channels.HttpTransportBindingElement.BuildServiceDispatcher``1(CoreWCF.Channels.BindingContext,CoreWCF.Configuration.IServiceDispatcher)
  - CoreWCF.Channels.HttpTransportBindingElement.CanBuildServiceDispatcher``1(CoreWCF.Channels.BindingContext)
  - CoreWCF.Channels.HttpTransportBindingElement.Clone
  - CoreWCF.Channels.HttpTransportBindingElement.CoreWCF#Description#IPolicyExportExtension#ExportPolicy(CoreWCF.Description.MetadataExporter,CoreWCF.Description.PolicyConversionContext)
  - CoreWCF.Channels.HttpTransportBindingElement.CoreWCF#Description#IWsdlExportExtension#ExportContract(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlContractConversionContext)
  - CoreWCF.Channels.HttpTransportBindingElement.CoreWCF#Description#IWsdlExportExtension#ExportEndpoint(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlEndpointConversionContext)
  - CoreWCF.Channels.HttpTransportBindingElement.ExtendedProtectionPolicy
  - CoreWCF.Channels.HttpTransportBindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
  - CoreWCF.Channels.HttpTransportBindingElement.KeepAliveEnabled
  - CoreWCF.Channels.HttpTransportBindingElement.MaxBufferSize
  - CoreWCF.Channels.HttpTransportBindingElement.Realm
  - CoreWCF.Channels.HttpTransportBindingElement.Scheme
  - CoreWCF.Channels.HttpTransportBindingElement.TransferMode
  - CoreWCF.Channels.HttpTransportBindingElement.WebSocketSettings
  langs:
  - csharp
  - vb
  name: HttpTransportBindingElement
  nameWithType: HttpTransportBindingElement
  fullName: CoreWCF.Channels.HttpTransportBindingElement
  type: Class
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: Represents the binding element used to specify an HTTP transport for transmitting messages.
  remarks: "\nThe <xref:CoreWCF.Channels.HttpTransportBindingElement> class is the starting point for creating a custom binding that implements the HTTP transport protocol. HTTP is the primary transport used for interoperability purposes. This transport is supported by Windows Communication Foundation (WCF) to ensure interoperability with other non-WCF Web services stacks.<br /><br />The WCF service model uses this class to create factory objects that implement the [IChannelFactory](https://learn.microsoft.com/en-us/dotnet/api/system.servicemodel.channels.ichannelfactory?view=dotnet-plat-ext-7.0) and [IChannelListener](https://learn.microsoft.com/en-us/dotnet/api/system.servicemodel.channels.ichannellistener?view=netframework-4.8.1&viewFallbackFrom=dotnet-plat-ext-7.0) interfaces. These factory objects, in turn, create the channels and listeners that transmit SOAP messages using the HTTP protocol.<br /><br />You configure the factories that this class creates by setting its properties, such as <xref:CoreWCF.Channels.HttpTransportBindingElement.AuthenticationScheme>, [HostNameComparisonMode](https://learn.microsoft.com/en-us/dotnet/api/system.servicemodel.channels.httptransportbindingelement.hostnamecomparisonmode?view=netframework-4.8.1&viewFallbackFrom=dotnet-plat-ext-7.0), and <xref:CoreWCF.Channels.HttpTransportBindingElement.MaxBufferSize>.<br /><br />You can also set properties on the base class, <xref:CoreWCF.Channels.TransportBindingElement>, such as <xref:CoreWCF.Channels.TransportBindingElement.ManualAddressing>, <xref:CoreWCF.Channels.TransportBindingElement.MaxReceivedMessageSize>, and <xref:CoreWCF.Channels.TransportBindingElement.MaxBufferPoolSize>. For a complete list of properties, see <xref:CoreWCF.Channels.TransportBindingElement>.\n"
  syntax:
    content: 'public class HttpTransportBindingElement : TransportBindingElement, IWsdlExportExtension, IPolicyExportExtension'
    content.vb: >-
      Public Class HttpTransportBindingElement
          Inherits TransportBindingElement
          Implements IWsdlExportExtension, IPolicyExportExtension
  inheritance:
  - System.Object
  - CoreWCF.Channels.BindingElement
  - CoreWCF.Channels.TransportBindingElement
  derivedClasses:
  - CoreWCF.Channels.HttpsTransportBindingElement
  implements:
  - CoreWCF.Description.IWsdlExportExtension
  - CoreWCF.Description.IPolicyExportExtension
  inheritedMembers:
  - CoreWCF.Channels.TransportBindingElement.ExportWsdlEndpoint(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlEndpointConversionContext,System.String,CoreWCF.EndpointAddress,CoreWCF.Channels.AddressingVersion)
  - CoreWCF.Channels.TransportBindingElement.IsMatch(CoreWCF.Channels.BindingElement)
  - CoreWCF.Channels.TransportBindingElement.ManualAddressing
  - CoreWCF.Channels.TransportBindingElement.MaxBufferPoolSize
  - CoreWCF.Channels.TransportBindingElement.MaxReceivedMessageSize
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.Channels.HttpTransportBindingElement.#ctor
  commentId: M:CoreWCF.Channels.HttpTransportBindingElement.#ctor
  id: '#ctor'
  parent: CoreWCF.Channels.HttpTransportBindingElement
  langs:
  - csharp
  - vb
  name: HttpTransportBindingElement()
  nameWithType: HttpTransportBindingElement.HttpTransportBindingElement()
  fullName: CoreWCF.Channels.HttpTransportBindingElement.HttpTransportBindingElement()
  type: Constructor
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: "\nInitializes a new instance of the <xref:CoreWCF.Channels.HttpTransportBindingElement> class.\n"
  remarks: This method is a copy constructor used to clone the binding.
  syntax:
    content: public HttpTransportBindingElement()
    content.vb: Public Sub New
  overload: CoreWCF.Channels.HttpTransportBindingElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Channels.HttpTransportBindingElement.#ctor(CoreWCF.Channels.HttpTransportBindingElement)
  commentId: M:CoreWCF.Channels.HttpTransportBindingElement.#ctor(CoreWCF.Channels.HttpTransportBindingElement)
  id: '#ctor(CoreWCF.Channels.HttpTransportBindingElement)'
  parent: CoreWCF.Channels.HttpTransportBindingElement
  langs:
  - csharp
  - vb
  name: HttpTransportBindingElement(HttpTransportBindingElement)
  nameWithType: HttpTransportBindingElement.HttpTransportBindingElement(HttpTransportBindingElement)
  fullName: CoreWCF.Channels.HttpTransportBindingElement.HttpTransportBindingElement(CoreWCF.Channels.HttpTransportBindingElement)
  type: Constructor
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: "Initializes a new instance of the <xref:CoreWCF.Channels.HttpTransportBindingElement> class using another binding element."
  syntax:
    content: protected HttpTransportBindingElement(HttpTransportBindingElement elementToBeCloned)
    parameters:
    - id: elementToBeCloned
      type: CoreWCF.Channels.HttpTransportBindingElement
      description: "An <xref:CoreWCF.Channels.HttpTransportBindingElement> object used to initialize this instance."
    content.vb: Protected Sub New(elementToBeCloned As HttpTransportBindingElement)
  overload: CoreWCF.Channels.HttpTransportBindingElement.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  remarks: This method is a copy constructor used to clone the binding.
- uid: CoreWCF.Channels.HttpTransportBindingElement.Clone
  commentId: M:CoreWCF.Channels.HttpTransportBindingElement.Clone
  id: Clone
  parent: CoreWCF.Channels.HttpTransportBindingElement
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: HttpTransportBindingElement.Clone()
  fullName: CoreWCF.Channels.HttpTransportBindingElement.Clone()
  type: Method
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: "\nCreates a new instance that is a copy of the current binding element.\n"
  syntax:
    content: public override BindingElement Clone()
    return:
      type: CoreWCF.Channels.BindingElement
      description: A new instance that is a copy of the current binding element.
    content.vb: Public Overrides Function Clone As BindingElement
  overridden: CoreWCF.Channels.BindingElement.Clone
  overload: CoreWCF.Channels.HttpTransportBindingElement.Clone*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CoreWCF.Channels.HttpTransportBindingElement.BuildServiceDispatcher``1(CoreWCF.Channels.BindingContext,CoreWCF.Configuration.IServiceDispatcher)
  commentId: M:CoreWCF.Channels.HttpTransportBindingElement.BuildServiceDispatcher``1(CoreWCF.Channels.BindingContext,CoreWCF.Configuration.IServiceDispatcher)
  id: BuildServiceDispatcher``1(CoreWCF.Channels.BindingContext,CoreWCF.Configuration.IServiceDispatcher)
  parent: CoreWCF.Channels.HttpTransportBindingElement
  langs:
  - csharp
  - vb
  name: BuildServiceDispatcher<TChannel>(BindingContext, IServiceDispatcher)
  nameWithType: HttpTransportBindingElement.BuildServiceDispatcher<TChannel>(BindingContext, IServiceDispatcher)
  fullName: CoreWCF.Channels.HttpTransportBindingElement.BuildServiceDispatcher<TChannel>(CoreWCF.Channels.BindingContext, CoreWCF.Configuration.IServiceDispatcher)
  type: Method
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  syntax:
    content: >-
      public override IServiceDispatcher BuildServiceDispatcher<TChannel>(BindingContext context, IServiceDispatcher innerDispatcher)
          where TChannel : class, IChannel
    parameters:
    - id: context
      type: CoreWCF.Channels.BindingContext
    - id: innerDispatcher
      type: CoreWCF.Configuration.IServiceDispatcher
    typeParameters:
    - id: TChannel
    return:
      type: CoreWCF.Configuration.IServiceDispatcher
    content.vb: Public Overrides Function BuildServiceDispatcher(Of TChannel As {Class, IChannel})(context As BindingContext, innerDispatcher As IServiceDispatcher) As IServiceDispatcher
  overridden: CoreWCF.Channels.BindingElement.BuildServiceDispatcher``1(CoreWCF.Channels.BindingContext,CoreWCF.Configuration.IServiceDispatcher)
  overload: CoreWCF.Channels.HttpTransportBindingElement.BuildServiceDispatcher*
  nameWithType.vb: HttpTransportBindingElement.BuildServiceDispatcher(Of TChannel)(BindingContext, IServiceDispatcher)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: CoreWCF.Channels.HttpTransportBindingElement.BuildServiceDispatcher(Of TChannel)(CoreWCF.Channels.BindingContext, CoreWCF.Configuration.IServiceDispatcher)
  name.vb: BuildServiceDispatcher(Of TChannel)(BindingContext, IServiceDispatcher)
- uid: CoreWCF.Channels.HttpTransportBindingElement.CanBuildServiceDispatcher``1(CoreWCF.Channels.BindingContext)
  commentId: M:CoreWCF.Channels.HttpTransportBindingElement.CanBuildServiceDispatcher``1(CoreWCF.Channels.BindingContext)
  id: CanBuildServiceDispatcher``1(CoreWCF.Channels.BindingContext)
  parent: CoreWCF.Channels.HttpTransportBindingElement
  langs:
  - csharp
  - vb
  name: CanBuildServiceDispatcher<TChannel>(BindingContext)
  nameWithType: HttpTransportBindingElement.CanBuildServiceDispatcher<TChannel>(BindingContext)
  fullName: CoreWCF.Channels.HttpTransportBindingElement.CanBuildServiceDispatcher<TChannel>(CoreWCF.Channels.BindingContext)
  type: Method
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  syntax:
    content: >-
      public override bool CanBuildServiceDispatcher<TChannel>(BindingContext context)
          where TChannel : class, IChannel
    parameters:
    - id: context
      type: CoreWCF.Channels.BindingContext
    typeParameters:
    - id: TChannel
    return:
      type: System.Boolean
    content.vb: Public Overrides Function CanBuildServiceDispatcher(Of TChannel As {Class, IChannel})(context As BindingContext) As Boolean
  overridden: CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher``1(CoreWCF.Channels.BindingContext)
  overload: CoreWCF.Channels.HttpTransportBindingElement.CanBuildServiceDispatcher*
  nameWithType.vb: HttpTransportBindingElement.CanBuildServiceDispatcher(Of TChannel)(BindingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: CoreWCF.Channels.HttpTransportBindingElement.CanBuildServiceDispatcher(Of TChannel)(CoreWCF.Channels.BindingContext)
  name.vb: CanBuildServiceDispatcher(Of TChannel)(BindingContext)
- uid: CoreWCF.Channels.HttpTransportBindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
  commentId: M:CoreWCF.Channels.HttpTransportBindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
  id: GetProperty``1(CoreWCF.Channels.BindingContext)
  parent: CoreWCF.Channels.HttpTransportBindingElement
  langs:
  - csharp
  - vb
  name: GetProperty<T>(BindingContext)
  nameWithType: HttpTransportBindingElement.GetProperty<T>(BindingContext)
  fullName: CoreWCF.Channels.HttpTransportBindingElement.GetProperty<T>(CoreWCF.Channels.BindingContext)
  type: Method
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: "Gets a property from the specified <xref:CoreWCF.Channels.BindingContext>."
  syntax:
    content: >-
      public override T GetProperty<T>(BindingContext context)
          where T : class
    parameters:
    - id: context
      type: CoreWCF.Channels.BindingContext
      description: "A <xref:CoreWCF.Channels.BindingContext>."
    typeParameters:
    - id: T
      description: The type of the property to get.
    return:
      type: '{T}'
      description: "The property from the specified <xref:CoreWCF.Channels.BindingContext>."
    content.vb: Public Overrides Function GetProperty(Of T As Class)(context As BindingContext) As T
  overridden: CoreWCF.Channels.TransportBindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
  overload: CoreWCF.Channels.HttpTransportBindingElement.GetProperty*
  nameWithType.vb: HttpTransportBindingElement.GetProperty(Of T)(BindingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: CoreWCF.Channels.HttpTransportBindingElement.GetProperty(Of T)(CoreWCF.Channels.BindingContext)
  name.vb: GetProperty(Of T)(BindingContext)
- uid: CoreWCF.Channels.HttpTransportBindingElement.CoreWCF#Description#IPolicyExportExtension#ExportPolicy(CoreWCF.Description.MetadataExporter,CoreWCF.Description.PolicyConversionContext)
  commentId: M:CoreWCF.Channels.HttpTransportBindingElement.CoreWCF#Description#IPolicyExportExtension#ExportPolicy(CoreWCF.Description.MetadataExporter,CoreWCF.Description.PolicyConversionContext)
  id: CoreWCF#Description#IPolicyExportExtension#ExportPolicy(CoreWCF.Description.MetadataExporter,CoreWCF.Description.PolicyConversionContext)
  isEii: true
  parent: CoreWCF.Channels.HttpTransportBindingElement
  langs:
  - csharp
  - vb
  name: IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)
  nameWithType: HttpTransportBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)
  fullName: CoreWCF.Channels.HttpTransportBindingElement.CoreWCF.Description.IPolicyExportExtension.ExportPolicy(CoreWCF.Description.MetadataExporter, CoreWCF.Description.PolicyConversionContext)
  type: Method
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  syntax:
    content: void IPolicyExportExtension.ExportPolicy(MetadataExporter exporter, PolicyConversionContext context)
    parameters:
    - id: exporter
      type: CoreWCF.Description.MetadataExporter
    - id: context
      type: CoreWCF.Description.PolicyConversionContext
    content.vb: Sub CoreWCF.Description.IPolicyExportExtension.ExportPolicy(exporter As MetadataExporter, context As PolicyConversionContext) Implements IPolicyExportExtension.ExportPolicy
  overload: CoreWCF.Channels.HttpTransportBindingElement.CoreWCF#Description#IPolicyExportExtension#ExportPolicy*
  implements:
  - CoreWCF.Description.IPolicyExportExtension.ExportPolicy(CoreWCF.Description.MetadataExporter,CoreWCF.Description.PolicyConversionContext)
  nameWithType.vb: HttpTransportBindingElement.CoreWCF.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)
  name.vb: CoreWCF.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)
- uid: CoreWCF.Channels.HttpTransportBindingElement.CoreWCF#Description#IWsdlExportExtension#ExportContract(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlContractConversionContext)
  commentId: M:CoreWCF.Channels.HttpTransportBindingElement.CoreWCF#Description#IWsdlExportExtension#ExportContract(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlContractConversionContext)
  id: CoreWCF#Description#IWsdlExportExtension#ExportContract(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlContractConversionContext)
  isEii: true
  parent: CoreWCF.Channels.HttpTransportBindingElement
  langs:
  - csharp
  - vb
  name: IWsdlExportExtension.ExportContract(WsdlExporter, WsdlContractConversionContext)
  nameWithType: HttpTransportBindingElement.IWsdlExportExtension.ExportContract(WsdlExporter, WsdlContractConversionContext)
  fullName: CoreWCF.Channels.HttpTransportBindingElement.CoreWCF.Description.IWsdlExportExtension.ExportContract(CoreWCF.Description.WsdlExporter, CoreWCF.Description.WsdlContractConversionContext)
  type: Method
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  syntax:
    content: void IWsdlExportExtension.ExportContract(WsdlExporter exporter, WsdlContractConversionContext context)
    parameters:
    - id: exporter
      type: CoreWCF.Description.WsdlExporter
    - id: context
      type: CoreWCF.Description.WsdlContractConversionContext
    content.vb: Sub CoreWCF.Description.IWsdlExportExtension.ExportContract(exporter As WsdlExporter, context As WsdlContractConversionContext) Implements IWsdlExportExtension.ExportContract
  overload: CoreWCF.Channels.HttpTransportBindingElement.CoreWCF#Description#IWsdlExportExtension#ExportContract*
  implements:
  - CoreWCF.Description.IWsdlExportExtension.ExportContract(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlContractConversionContext)
  nameWithType.vb: HttpTransportBindingElement.CoreWCF.Description.IWsdlExportExtension.ExportContract(WsdlExporter, WsdlContractConversionContext)
  name.vb: CoreWCF.Description.IWsdlExportExtension.ExportContract(WsdlExporter, WsdlContractConversionContext)
- uid: CoreWCF.Channels.HttpTransportBindingElement.CoreWCF#Description#IWsdlExportExtension#ExportEndpoint(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlEndpointConversionContext)
  commentId: M:CoreWCF.Channels.HttpTransportBindingElement.CoreWCF#Description#IWsdlExportExtension#ExportEndpoint(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlEndpointConversionContext)
  id: CoreWCF#Description#IWsdlExportExtension#ExportEndpoint(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlEndpointConversionContext)
  isEii: true
  parent: CoreWCF.Channels.HttpTransportBindingElement
  langs:
  - csharp
  - vb
  name: IWsdlExportExtension.ExportEndpoint(WsdlExporter, WsdlEndpointConversionContext)
  nameWithType: HttpTransportBindingElement.IWsdlExportExtension.ExportEndpoint(WsdlExporter, WsdlEndpointConversionContext)
  fullName: CoreWCF.Channels.HttpTransportBindingElement.CoreWCF.Description.IWsdlExportExtension.ExportEndpoint(CoreWCF.Description.WsdlExporter, CoreWCF.Description.WsdlEndpointConversionContext)
  type: Method
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  syntax:
    content: void IWsdlExportExtension.ExportEndpoint(WsdlExporter exporter, WsdlEndpointConversionContext endpointContext)
    parameters:
    - id: exporter
      type: CoreWCF.Description.WsdlExporter
    - id: endpointContext
      type: CoreWCF.Description.WsdlEndpointConversionContext
    content.vb: Sub CoreWCF.Description.IWsdlExportExtension.ExportEndpoint(exporter As WsdlExporter, endpointContext As WsdlEndpointConversionContext) Implements IWsdlExportExtension.ExportEndpoint
  overload: CoreWCF.Channels.HttpTransportBindingElement.CoreWCF#Description#IWsdlExportExtension#ExportEndpoint*
  implements:
  - CoreWCF.Description.IWsdlExportExtension.ExportEndpoint(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlEndpointConversionContext)
  nameWithType.vb: HttpTransportBindingElement.CoreWCF.Description.IWsdlExportExtension.ExportEndpoint(WsdlExporter, WsdlEndpointConversionContext)
  name.vb: CoreWCF.Description.IWsdlExportExtension.ExportEndpoint(WsdlExporter, WsdlEndpointConversionContext)
- uid: CoreWCF.Channels.HttpTransportBindingElement.AuthenticationScheme
  commentId: P:CoreWCF.Channels.HttpTransportBindingElement.AuthenticationScheme
  id: AuthenticationScheme
  parent: CoreWCF.Channels.HttpTransportBindingElement
  langs:
  - csharp
  - vb
  name: AuthenticationScheme
  nameWithType: HttpTransportBindingElement.AuthenticationScheme
  fullName: CoreWCF.Channels.HttpTransportBindingElement.AuthenticationScheme
  type: Property
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: "\nGets or sets the authentication scheme used to authenticate client requests being processed by an HTTP listener.\n"
  syntax:
    content: public AuthenticationSchemes AuthenticationScheme { get; set; }
    parameters: []
    return:
      type: System.Net.AuthenticationSchemes
      description: "One of the enumeration values of the [AuthenticationSchemes](https://learn.microsoft.com/en-us/dotnet/api/system.net.authenticationschemes?view=net-7.0&viewFallbackFrom=dotnet-plat-ext-7.0) enumeration that specifies the protocols used for client authentication. The default is [Anonymous](https://learn.microsoft.com/en-us/dotnet/api/system.net.authenticationschemes?view=net-7.0&viewFallbackFrom=dotnet-plat-ext-7.0#system-net-authenticationschemes-anonymous)."
    content.vb: Public Property AuthenticationScheme As AuthenticationSchemes
  overload: CoreWCF.Channels.HttpTransportBindingElement.AuthenticationScheme*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  remarks: The authentication scheme can only be set once.
- uid: CoreWCF.Channels.HttpTransportBindingElement.MaxBufferSize
  commentId: P:CoreWCF.Channels.HttpTransportBindingElement.MaxBufferSize
  id: MaxBufferSize
  parent: CoreWCF.Channels.HttpTransportBindingElement
  langs:
  - csharp
  - vb
  name: MaxBufferSize
  nameWithType: HttpTransportBindingElement.MaxBufferSize
  fullName: CoreWCF.Channels.HttpTransportBindingElement.MaxBufferSize
  type: Property
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: "\nGets or sets the maximum size of the buffer to use. For buffered messages this value is the same as <xref:CoreWCF.Channels.TransportBindingElement.MaxReceivedMessageSize>. For streamed messages, this value is the maximum size of the SOAP headers, which must be read in buffered mode.\n"
  remarks: "For streamed messages, if the size of the message headers is greater than this property, then a [QuotaExceededException](https://learn.microsoft.com/en-us/dotnet/api/system.servicemodel.quotaexceededexception?view=dotnet-plat-ext-7.0) is thrown. For a non-streamed message, if the message size is greater than this property, then the message is dropped.<br /><br />If not specified, this defaults to 65536."
  syntax:
    content: public int MaxBufferSize { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: The maximum size, in bytes, of the buffer.
    content.vb: Public Property MaxBufferSize As Integer
  overload: CoreWCF.Channels.HttpTransportBindingElement.MaxBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value is less than or equal to 0.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Channels.HttpTransportBindingElement.KeepAliveEnabled
  commentId: P:CoreWCF.Channels.HttpTransportBindingElement.KeepAliveEnabled
  id: KeepAliveEnabled
  parent: CoreWCF.Channels.HttpTransportBindingElement
  langs:
  - csharp
  - vb
  name: KeepAliveEnabled
  nameWithType: HttpTransportBindingElement.KeepAliveEnabled
  fullName: CoreWCF.Channels.HttpTransportBindingElement.KeepAliveEnabled
  type: Property
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: Gets or sets a value that indicates whether to make a persistent connection to a service endpoint.
  syntax:
    content: public bool KeepAliveEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: true if the request to the service endpoint should contain a Connection HTTP header with the value Keep-alive; otherwise, false. The default is true
    content.vb: Public Property KeepAliveEnabled As Boolean
  overload: CoreWCF.Channels.HttpTransportBindingElement.KeepAliveEnabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  remarks: Set this property to true to send a Connection HTTP header with the value Keep-alive. A client uses this property to indicate a preference for persistent connections. When this property is true, the connection that the client makes to a service endpoint is persistent if the service endpoint supports that.
- uid: CoreWCF.Channels.HttpTransportBindingElement.Realm
  commentId: P:CoreWCF.Channels.HttpTransportBindingElement.Realm
  id: Realm
  parent: CoreWCF.Channels.HttpTransportBindingElement
  langs:
  - csharp
  - vb
  name: Realm
  nameWithType: HttpTransportBindingElement.Realm
  fullName: CoreWCF.Channels.HttpTransportBindingElement.Realm
  type: Property
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  syntax:
    content: public string Realm { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Realm As String
  overload: CoreWCF.Channels.HttpTransportBindingElement.Realm*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Channels.HttpTransportBindingElement.Scheme
  commentId: P:CoreWCF.Channels.HttpTransportBindingElement.Scheme
  id: Scheme
  parent: CoreWCF.Channels.HttpTransportBindingElement
  langs:
  - csharp
  - vb
  name: Scheme
  nameWithType: HttpTransportBindingElement.Scheme
  fullName: CoreWCF.Channels.HttpTransportBindingElement.Scheme
  type: Property
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: "\nGets the URI scheme for the transport.\n"
  remarks: This property is used to validate bindings against base addresses.
  syntax:
    content: public override string Scheme { get; }
    parameters: []
    return:
      type: System.String
      description: "A [UriSchemeHttp](https://learn.microsoft.com/en-us/dotnet/api/system.uri.urischemehttp?view=net-7.0&viewFallbackFrom=dotnet-plat-ext-7.0) object that represents the URI scheme for the transport."
    content.vb: Public Overrides ReadOnly Property Scheme As String
  overridden: CoreWCF.Channels.TransportBindingElement.Scheme
  overload: CoreWCF.Channels.HttpTransportBindingElement.Scheme*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: CoreWCF.Channels.HttpTransportBindingElement.TransferMode
  commentId: P:CoreWCF.Channels.HttpTransportBindingElement.TransferMode
  id: TransferMode
  parent: CoreWCF.Channels.HttpTransportBindingElement
  langs:
  - csharp
  - vb
  name: TransferMode
  nameWithType: HttpTransportBindingElement.TransferMode
  fullName: CoreWCF.Channels.HttpTransportBindingElement.TransferMode
  type: Property
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: "\nGets or sets the transfer mode.\n"
  syntax:
    content: public TransferMode TransferMode { get; set; }
    parameters: []
    return:
      type: CoreWCF.TransferMode
      description: "One of the following member values of <xref:CoreWCF.Channels.HttpTransportBindingElement.TransferMode>:\n* Buffered\n \n* Streamed\n \n* StreamedRequest\n \n* StreamedResponse.\n"
    content.vb: Public Property TransferMode As TransferMode
  overload: CoreWCF.Channels.HttpTransportBindingElement.TransferMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  remarks: "Specifying <xref:CoreWCF.Channels.HttpTransportBindingElement.TransferMode> = Streamed implies both StreamedRequest and StreamedResponse."
- uid: CoreWCF.Channels.HttpTransportBindingElement.WebSocketSettings
  commentId: P:CoreWCF.Channels.HttpTransportBindingElement.WebSocketSettings
  id: WebSocketSettings
  parent: CoreWCF.Channels.HttpTransportBindingElement
  langs:
  - csharp
  - vb
  name: WebSocketSettings
  nameWithType: HttpTransportBindingElement.WebSocketSettings
  fullName: CoreWCF.Channels.HttpTransportBindingElement.WebSocketSettings
  type: Property
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: "\nGets or sets the web socket configuration of the binding element.\n"
  syntax:
    content: public WebSocketTransportSettings WebSocketSettings { get; set; }
    parameters: []
    return:
      type: CoreWCF.Channels.WebSocketTransportSettings
      description: The web socket settings.
    content.vb: Public Property WebSocketSettings As WebSocketTransportSettings
  overload: CoreWCF.Channels.HttpTransportBindingElement.WebSocketSettings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Channels.HttpTransportBindingElement.ExtendedProtectionPolicy
  commentId: P:CoreWCF.Channels.HttpTransportBindingElement.ExtendedProtectionPolicy
  id: ExtendedProtectionPolicy
  parent: CoreWCF.Channels.HttpTransportBindingElement
  langs:
  - csharp
  - vb
  name: ExtendedProtectionPolicy
  nameWithType: HttpTransportBindingElement.ExtendedProtectionPolicy
  fullName: CoreWCF.Channels.HttpTransportBindingElement.ExtendedProtectionPolicy
  type: Property
  source:
    path: CoreWCF.Http
    isExternal: true
  assemblies:
  - CoreWCF.Http
  namespace: CoreWCF.Channels
  summary: Gets or sets the value of the extended security policy used by the server to validate incoming client connections.
  syntax:
    content: public ExtendedProtectionPolicy ExtendedProtectionPolicy { get; set; }
    parameters: []
    return:
      type: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
      description: The value of the extended security policy used by the server to validate incoming client connections.
    content.vb: Public Property ExtendedProtectionPolicy As ExtendedProtectionPolicy
  overload: CoreWCF.Channels.HttpTransportBindingElement.ExtendedProtectionPolicy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: CoreWCF.Channels
  commentId: N:CoreWCF.Channels
  isExternal: true
  name: CoreWCF.Channels
  nameWithType: CoreWCF.Channels
  fullName: CoreWCF.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CoreWCF.Channels.BindingElement
  commentId: T:CoreWCF.Channels.BindingElement
  parent: CoreWCF.Channels
  isExternal: true
  name: BindingElement
  nameWithType: BindingElement
  fullName: CoreWCF.Channels.BindingElement
- uid: CoreWCF.Channels.TransportBindingElement
  commentId: T:CoreWCF.Channels.TransportBindingElement
  parent: CoreWCF.Channels
  isExternal: true
  name: TransportBindingElement
  nameWithType: TransportBindingElement
  fullName: CoreWCF.Channels.TransportBindingElement
- uid: CoreWCF.Description.IWsdlExportExtension
  commentId: T:CoreWCF.Description.IWsdlExportExtension
  parent: CoreWCF.Description
  isExternal: true
  name: IWsdlExportExtension
  nameWithType: IWsdlExportExtension
  fullName: CoreWCF.Description.IWsdlExportExtension
- uid: CoreWCF.Description.IPolicyExportExtension
  commentId: T:CoreWCF.Description.IPolicyExportExtension
  parent: CoreWCF.Description
  isExternal: true
  name: IPolicyExportExtension
  nameWithType: IPolicyExportExtension
  fullName: CoreWCF.Description.IPolicyExportExtension
- uid: CoreWCF.Channels.TransportBindingElement.ExportWsdlEndpoint(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlEndpointConversionContext,System.String,CoreWCF.EndpointAddress,CoreWCF.Channels.AddressingVersion)
  commentId: M:CoreWCF.Channels.TransportBindingElement.ExportWsdlEndpoint(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlEndpointConversionContext,System.String,CoreWCF.EndpointAddress,CoreWCF.Channels.AddressingVersion)
  parent: CoreWCF.Channels.TransportBindingElement
  isExternal: true
  name: ExportWsdlEndpoint(WsdlExporter, WsdlEndpointConversionContext, String, EndpointAddress, AddressingVersion)
  nameWithType: TransportBindingElement.ExportWsdlEndpoint(WsdlExporter, WsdlEndpointConversionContext, String, EndpointAddress, AddressingVersion)
  fullName: CoreWCF.Channels.TransportBindingElement.ExportWsdlEndpoint(CoreWCF.Description.WsdlExporter, CoreWCF.Description.WsdlEndpointConversionContext, System.String, CoreWCF.EndpointAddress, CoreWCF.Channels.AddressingVersion)
  spec.csharp:
  - uid: CoreWCF.Channels.TransportBindingElement.ExportWsdlEndpoint(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlEndpointConversionContext,System.String,CoreWCF.EndpointAddress,CoreWCF.Channels.AddressingVersion)
    name: ExportWsdlEndpoint
    nameWithType: TransportBindingElement.ExportWsdlEndpoint
    fullName: CoreWCF.Channels.TransportBindingElement.ExportWsdlEndpoint
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Description.WsdlExporter
    name: WsdlExporter
    nameWithType: WsdlExporter
    fullName: CoreWCF.Description.WsdlExporter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.Description.WsdlEndpointConversionContext
    name: WsdlEndpointConversionContext
    nameWithType: WsdlEndpointConversionContext
    fullName: CoreWCF.Description.WsdlEndpointConversionContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: CoreWCF.EndpointAddress
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.Channels.AddressingVersion
    name: AddressingVersion
    nameWithType: AddressingVersion
    fullName: CoreWCF.Channels.AddressingVersion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.TransportBindingElement.ExportWsdlEndpoint(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlEndpointConversionContext,System.String,CoreWCF.EndpointAddress,CoreWCF.Channels.AddressingVersion)
    name: ExportWsdlEndpoint
    nameWithType: TransportBindingElement.ExportWsdlEndpoint
    fullName: CoreWCF.Channels.TransportBindingElement.ExportWsdlEndpoint
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Description.WsdlExporter
    name: WsdlExporter
    nameWithType: WsdlExporter
    fullName: CoreWCF.Description.WsdlExporter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.Description.WsdlEndpointConversionContext
    name: WsdlEndpointConversionContext
    nameWithType: WsdlEndpointConversionContext
    fullName: CoreWCF.Description.WsdlEndpointConversionContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: CoreWCF.EndpointAddress
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.Channels.AddressingVersion
    name: AddressingVersion
    nameWithType: AddressingVersion
    fullName: CoreWCF.Channels.AddressingVersion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.TransportBindingElement.IsMatch(CoreWCF.Channels.BindingElement)
  commentId: M:CoreWCF.Channels.TransportBindingElement.IsMatch(CoreWCF.Channels.BindingElement)
  parent: CoreWCF.Channels.TransportBindingElement
  isExternal: true
  name: IsMatch(BindingElement)
  nameWithType: TransportBindingElement.IsMatch(BindingElement)
  fullName: CoreWCF.Channels.TransportBindingElement.IsMatch(CoreWCF.Channels.BindingElement)
  spec.csharp:
  - uid: CoreWCF.Channels.TransportBindingElement.IsMatch(CoreWCF.Channels.BindingElement)
    name: IsMatch
    nameWithType: TransportBindingElement.IsMatch
    fullName: CoreWCF.Channels.TransportBindingElement.IsMatch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingElement
    name: BindingElement
    nameWithType: BindingElement
    fullName: CoreWCF.Channels.BindingElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.TransportBindingElement.IsMatch(CoreWCF.Channels.BindingElement)
    name: IsMatch
    nameWithType: TransportBindingElement.IsMatch
    fullName: CoreWCF.Channels.TransportBindingElement.IsMatch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingElement
    name: BindingElement
    nameWithType: BindingElement
    fullName: CoreWCF.Channels.BindingElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.TransportBindingElement.ManualAddressing
  commentId: P:CoreWCF.Channels.TransportBindingElement.ManualAddressing
  parent: CoreWCF.Channels.TransportBindingElement
  isExternal: true
  name: ManualAddressing
  nameWithType: TransportBindingElement.ManualAddressing
  fullName: CoreWCF.Channels.TransportBindingElement.ManualAddressing
- uid: CoreWCF.Channels.TransportBindingElement.MaxBufferPoolSize
  commentId: P:CoreWCF.Channels.TransportBindingElement.MaxBufferPoolSize
  parent: CoreWCF.Channels.TransportBindingElement
  isExternal: true
  name: MaxBufferPoolSize
  nameWithType: TransportBindingElement.MaxBufferPoolSize
  fullName: CoreWCF.Channels.TransportBindingElement.MaxBufferPoolSize
- uid: CoreWCF.Channels.TransportBindingElement.MaxReceivedMessageSize
  commentId: P:CoreWCF.Channels.TransportBindingElement.MaxReceivedMessageSize
  parent: CoreWCF.Channels.TransportBindingElement
  isExternal: true
  name: MaxReceivedMessageSize
  nameWithType: TransportBindingElement.MaxReceivedMessageSize
  fullName: CoreWCF.Channels.TransportBindingElement.MaxReceivedMessageSize
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Description
  commentId: N:CoreWCF.Description
  isExternal: true
  name: CoreWCF.Description
  nameWithType: CoreWCF.Description
  fullName: CoreWCF.Description
- uid: CoreWCF.Channels.HttpTransportBindingElement.#ctor*
  commentId: Overload:CoreWCF.Channels.HttpTransportBindingElement.#ctor
  isExternal: true
  name: HttpTransportBindingElement
  nameWithType: HttpTransportBindingElement.HttpTransportBindingElement
  fullName: CoreWCF.Channels.HttpTransportBindingElement.HttpTransportBindingElement
- uid: CoreWCF.Channels.HttpTransportBindingElement
  commentId: T:CoreWCF.Channels.HttpTransportBindingElement
  parent: CoreWCF.Channels
  isExternal: true
  name: HttpTransportBindingElement
  nameWithType: HttpTransportBindingElement
  fullName: CoreWCF.Channels.HttpTransportBindingElement
- uid: CoreWCF.Channels.BindingElement.Clone
  commentId: M:CoreWCF.Channels.BindingElement.Clone
  parent: CoreWCF.Channels.BindingElement
  isExternal: true
  name: Clone()
  nameWithType: BindingElement.Clone()
  fullName: CoreWCF.Channels.BindingElement.Clone()
  spec.csharp:
  - uid: CoreWCF.Channels.BindingElement.Clone
    name: Clone
    nameWithType: BindingElement.Clone
    fullName: CoreWCF.Channels.BindingElement.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.BindingElement.Clone
    name: Clone
    nameWithType: BindingElement.Clone
    fullName: CoreWCF.Channels.BindingElement.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.HttpTransportBindingElement.Clone*
  commentId: Overload:CoreWCF.Channels.HttpTransportBindingElement.Clone
  isExternal: true
  name: Clone
  nameWithType: HttpTransportBindingElement.Clone
  fullName: CoreWCF.Channels.HttpTransportBindingElement.Clone
- uid: CoreWCF.Channels.BindingElement.BuildServiceDispatcher``1(CoreWCF.Channels.BindingContext,CoreWCF.Configuration.IServiceDispatcher)
  commentId: M:CoreWCF.Channels.BindingElement.BuildServiceDispatcher``1(CoreWCF.Channels.BindingContext,CoreWCF.Configuration.IServiceDispatcher)
  parent: CoreWCF.Channels.BindingElement
  isExternal: true
  name: BuildServiceDispatcher<TChannel>(BindingContext, IServiceDispatcher)
  nameWithType: BindingElement.BuildServiceDispatcher<TChannel>(BindingContext, IServiceDispatcher)
  fullName: CoreWCF.Channels.BindingElement.BuildServiceDispatcher<TChannel>(CoreWCF.Channels.BindingContext, CoreWCF.Configuration.IServiceDispatcher)
  nameWithType.vb: BindingElement.BuildServiceDispatcher(Of TChannel)(BindingContext, IServiceDispatcher)
  fullName.vb: CoreWCF.Channels.BindingElement.BuildServiceDispatcher(Of TChannel)(CoreWCF.Channels.BindingContext, CoreWCF.Configuration.IServiceDispatcher)
  name.vb: BuildServiceDispatcher(Of TChannel)(BindingContext, IServiceDispatcher)
  spec.csharp:
  - uid: CoreWCF.Channels.BindingElement.BuildServiceDispatcher``1(CoreWCF.Channels.BindingContext,CoreWCF.Configuration.IServiceDispatcher)
    name: BuildServiceDispatcher<TChannel>
    nameWithType: BindingElement.BuildServiceDispatcher<TChannel>
    fullName: CoreWCF.Channels.BindingElement.BuildServiceDispatcher<TChannel>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: CoreWCF.Channels.BindingContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.Configuration.IServiceDispatcher
    name: IServiceDispatcher
    nameWithType: IServiceDispatcher
    fullName: CoreWCF.Configuration.IServiceDispatcher
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.BindingElement.BuildServiceDispatcher``1(CoreWCF.Channels.BindingContext,CoreWCF.Configuration.IServiceDispatcher)
    name: BuildServiceDispatcher(Of TChannel)
    nameWithType: BindingElement.BuildServiceDispatcher(Of TChannel)
    fullName: CoreWCF.Channels.BindingElement.BuildServiceDispatcher(Of TChannel)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: CoreWCF.Channels.BindingContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.Configuration.IServiceDispatcher
    name: IServiceDispatcher
    nameWithType: IServiceDispatcher
    fullName: CoreWCF.Configuration.IServiceDispatcher
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.HttpTransportBindingElement.BuildServiceDispatcher*
  commentId: Overload:CoreWCF.Channels.HttpTransportBindingElement.BuildServiceDispatcher
  isExternal: true
  name: BuildServiceDispatcher
  nameWithType: HttpTransportBindingElement.BuildServiceDispatcher
  fullName: CoreWCF.Channels.HttpTransportBindingElement.BuildServiceDispatcher
- uid: CoreWCF.Channels.BindingContext
  commentId: T:CoreWCF.Channels.BindingContext
  parent: CoreWCF.Channels
  isExternal: true
  name: BindingContext
  nameWithType: BindingContext
  fullName: CoreWCF.Channels.BindingContext
- uid: CoreWCF.Configuration.IServiceDispatcher
  commentId: T:CoreWCF.Configuration.IServiceDispatcher
  parent: CoreWCF.Configuration
  isExternal: true
  name: IServiceDispatcher
  nameWithType: IServiceDispatcher
  fullName: CoreWCF.Configuration.IServiceDispatcher
- uid: CoreWCF.Configuration
  commentId: N:CoreWCF.Configuration
  isExternal: true
  name: CoreWCF.Configuration
  nameWithType: CoreWCF.Configuration
  fullName: CoreWCF.Configuration
- uid: CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher``1(CoreWCF.Channels.BindingContext)
  commentId: M:CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher``1(CoreWCF.Channels.BindingContext)
  parent: CoreWCF.Channels.BindingElement
  isExternal: true
  name: CanBuildServiceDispatcher<TChannel>(BindingContext)
  nameWithType: BindingElement.CanBuildServiceDispatcher<TChannel>(BindingContext)
  fullName: CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher<TChannel>(CoreWCF.Channels.BindingContext)
  nameWithType.vb: BindingElement.CanBuildServiceDispatcher(Of TChannel)(BindingContext)
  fullName.vb: CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher(Of TChannel)(CoreWCF.Channels.BindingContext)
  name.vb: CanBuildServiceDispatcher(Of TChannel)(BindingContext)
  spec.csharp:
  - uid: CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher``1(CoreWCF.Channels.BindingContext)
    name: CanBuildServiceDispatcher<TChannel>
    nameWithType: BindingElement.CanBuildServiceDispatcher<TChannel>
    fullName: CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher<TChannel>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: CoreWCF.Channels.BindingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher``1(CoreWCF.Channels.BindingContext)
    name: CanBuildServiceDispatcher(Of TChannel)
    nameWithType: BindingElement.CanBuildServiceDispatcher(Of TChannel)
    fullName: CoreWCF.Channels.BindingElement.CanBuildServiceDispatcher(Of TChannel)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: CoreWCF.Channels.BindingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.HttpTransportBindingElement.CanBuildServiceDispatcher*
  commentId: Overload:CoreWCF.Channels.HttpTransportBindingElement.CanBuildServiceDispatcher
  isExternal: true
  name: CanBuildServiceDispatcher
  nameWithType: HttpTransportBindingElement.CanBuildServiceDispatcher
  fullName: CoreWCF.Channels.HttpTransportBindingElement.CanBuildServiceDispatcher
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.Channels.TransportBindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
  commentId: M:CoreWCF.Channels.TransportBindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
  parent: CoreWCF.Channels.TransportBindingElement
  isExternal: true
  name: GetProperty<T>(BindingContext)
  nameWithType: TransportBindingElement.GetProperty<T>(BindingContext)
  fullName: CoreWCF.Channels.TransportBindingElement.GetProperty<T>(CoreWCF.Channels.BindingContext)
  nameWithType.vb: TransportBindingElement.GetProperty(Of T)(BindingContext)
  fullName.vb: CoreWCF.Channels.TransportBindingElement.GetProperty(Of T)(CoreWCF.Channels.BindingContext)
  name.vb: GetProperty(Of T)(BindingContext)
  spec.csharp:
  - uid: CoreWCF.Channels.TransportBindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
    name: GetProperty<T>
    nameWithType: TransportBindingElement.GetProperty<T>
    fullName: CoreWCF.Channels.TransportBindingElement.GetProperty<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: CoreWCF.Channels.BindingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.TransportBindingElement.GetProperty``1(CoreWCF.Channels.BindingContext)
    name: GetProperty(Of T)
    nameWithType: TransportBindingElement.GetProperty(Of T)
    fullName: CoreWCF.Channels.TransportBindingElement.GetProperty(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: CoreWCF.Channels.BindingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.HttpTransportBindingElement.GetProperty*
  commentId: Overload:CoreWCF.Channels.HttpTransportBindingElement.GetProperty
  isExternal: true
  name: GetProperty
  nameWithType: HttpTransportBindingElement.GetProperty
  fullName: CoreWCF.Channels.HttpTransportBindingElement.GetProperty
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: CoreWCF.Channels.HttpTransportBindingElement.CoreWCF#Description#IPolicyExportExtension#ExportPolicy*
  commentId: Overload:CoreWCF.Channels.HttpTransportBindingElement.CoreWCF#Description#IPolicyExportExtension#ExportPolicy
  isExternal: true
  name: IPolicyExportExtension.ExportPolicy
  nameWithType: HttpTransportBindingElement.IPolicyExportExtension.ExportPolicy
  fullName: CoreWCF.Channels.HttpTransportBindingElement.CoreWCF.Description.IPolicyExportExtension.ExportPolicy
  nameWithType.vb: HttpTransportBindingElement.CoreWCF.Description.IPolicyExportExtension.ExportPolicy
  name.vb: CoreWCF.Description.IPolicyExportExtension.ExportPolicy
- uid: CoreWCF.Description.IPolicyExportExtension.ExportPolicy(CoreWCF.Description.MetadataExporter,CoreWCF.Description.PolicyConversionContext)
  commentId: M:CoreWCF.Description.IPolicyExportExtension.ExportPolicy(CoreWCF.Description.MetadataExporter,CoreWCF.Description.PolicyConversionContext)
  parent: CoreWCF.Description.IPolicyExportExtension
  isExternal: true
  name: ExportPolicy(MetadataExporter, PolicyConversionContext)
  nameWithType: IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)
  fullName: CoreWCF.Description.IPolicyExportExtension.ExportPolicy(CoreWCF.Description.MetadataExporter, CoreWCF.Description.PolicyConversionContext)
  spec.csharp:
  - uid: CoreWCF.Description.IPolicyExportExtension.ExportPolicy(CoreWCF.Description.MetadataExporter,CoreWCF.Description.PolicyConversionContext)
    name: ExportPolicy
    nameWithType: IPolicyExportExtension.ExportPolicy
    fullName: CoreWCF.Description.IPolicyExportExtension.ExportPolicy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Description.MetadataExporter
    name: MetadataExporter
    nameWithType: MetadataExporter
    fullName: CoreWCF.Description.MetadataExporter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.Description.PolicyConversionContext
    name: PolicyConversionContext
    nameWithType: PolicyConversionContext
    fullName: CoreWCF.Description.PolicyConversionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Description.IPolicyExportExtension.ExportPolicy(CoreWCF.Description.MetadataExporter,CoreWCF.Description.PolicyConversionContext)
    name: ExportPolicy
    nameWithType: IPolicyExportExtension.ExportPolicy
    fullName: CoreWCF.Description.IPolicyExportExtension.ExportPolicy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Description.MetadataExporter
    name: MetadataExporter
    nameWithType: MetadataExporter
    fullName: CoreWCF.Description.MetadataExporter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.Description.PolicyConversionContext
    name: PolicyConversionContext
    nameWithType: PolicyConversionContext
    fullName: CoreWCF.Description.PolicyConversionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Description.MetadataExporter
  commentId: T:CoreWCF.Description.MetadataExporter
  parent: CoreWCF.Description
  isExternal: true
  name: MetadataExporter
  nameWithType: MetadataExporter
  fullName: CoreWCF.Description.MetadataExporter
- uid: CoreWCF.Description.PolicyConversionContext
  commentId: T:CoreWCF.Description.PolicyConversionContext
  parent: CoreWCF.Description
  isExternal: true
  name: PolicyConversionContext
  nameWithType: PolicyConversionContext
  fullName: CoreWCF.Description.PolicyConversionContext
- uid: CoreWCF.Channels.HttpTransportBindingElement.CoreWCF#Description#IWsdlExportExtension#ExportContract*
  commentId: Overload:CoreWCF.Channels.HttpTransportBindingElement.CoreWCF#Description#IWsdlExportExtension#ExportContract
  isExternal: true
  name: IWsdlExportExtension.ExportContract
  nameWithType: HttpTransportBindingElement.IWsdlExportExtension.ExportContract
  fullName: CoreWCF.Channels.HttpTransportBindingElement.CoreWCF.Description.IWsdlExportExtension.ExportContract
  nameWithType.vb: HttpTransportBindingElement.CoreWCF.Description.IWsdlExportExtension.ExportContract
  name.vb: CoreWCF.Description.IWsdlExportExtension.ExportContract
- uid: CoreWCF.Description.IWsdlExportExtension.ExportContract(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlContractConversionContext)
  commentId: M:CoreWCF.Description.IWsdlExportExtension.ExportContract(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlContractConversionContext)
  parent: CoreWCF.Description.IWsdlExportExtension
  isExternal: true
  name: ExportContract(WsdlExporter, WsdlContractConversionContext)
  nameWithType: IWsdlExportExtension.ExportContract(WsdlExporter, WsdlContractConversionContext)
  fullName: CoreWCF.Description.IWsdlExportExtension.ExportContract(CoreWCF.Description.WsdlExporter, CoreWCF.Description.WsdlContractConversionContext)
  spec.csharp:
  - uid: CoreWCF.Description.IWsdlExportExtension.ExportContract(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlContractConversionContext)
    name: ExportContract
    nameWithType: IWsdlExportExtension.ExportContract
    fullName: CoreWCF.Description.IWsdlExportExtension.ExportContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Description.WsdlExporter
    name: WsdlExporter
    nameWithType: WsdlExporter
    fullName: CoreWCF.Description.WsdlExporter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.Description.WsdlContractConversionContext
    name: WsdlContractConversionContext
    nameWithType: WsdlContractConversionContext
    fullName: CoreWCF.Description.WsdlContractConversionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Description.IWsdlExportExtension.ExportContract(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlContractConversionContext)
    name: ExportContract
    nameWithType: IWsdlExportExtension.ExportContract
    fullName: CoreWCF.Description.IWsdlExportExtension.ExportContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Description.WsdlExporter
    name: WsdlExporter
    nameWithType: WsdlExporter
    fullName: CoreWCF.Description.WsdlExporter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.Description.WsdlContractConversionContext
    name: WsdlContractConversionContext
    nameWithType: WsdlContractConversionContext
    fullName: CoreWCF.Description.WsdlContractConversionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Description.WsdlExporter
  commentId: T:CoreWCF.Description.WsdlExporter
  parent: CoreWCF.Description
  isExternal: true
  name: WsdlExporter
  nameWithType: WsdlExporter
  fullName: CoreWCF.Description.WsdlExporter
- uid: CoreWCF.Description.WsdlContractConversionContext
  commentId: T:CoreWCF.Description.WsdlContractConversionContext
  parent: CoreWCF.Description
  isExternal: true
  name: WsdlContractConversionContext
  nameWithType: WsdlContractConversionContext
  fullName: CoreWCF.Description.WsdlContractConversionContext
- uid: CoreWCF.Channels.HttpTransportBindingElement.CoreWCF#Description#IWsdlExportExtension#ExportEndpoint*
  commentId: Overload:CoreWCF.Channels.HttpTransportBindingElement.CoreWCF#Description#IWsdlExportExtension#ExportEndpoint
  isExternal: true
  name: IWsdlExportExtension.ExportEndpoint
  nameWithType: HttpTransportBindingElement.IWsdlExportExtension.ExportEndpoint
  fullName: CoreWCF.Channels.HttpTransportBindingElement.CoreWCF.Description.IWsdlExportExtension.ExportEndpoint
  nameWithType.vb: HttpTransportBindingElement.CoreWCF.Description.IWsdlExportExtension.ExportEndpoint
  name.vb: CoreWCF.Description.IWsdlExportExtension.ExportEndpoint
- uid: CoreWCF.Description.IWsdlExportExtension.ExportEndpoint(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlEndpointConversionContext)
  commentId: M:CoreWCF.Description.IWsdlExportExtension.ExportEndpoint(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlEndpointConversionContext)
  parent: CoreWCF.Description.IWsdlExportExtension
  isExternal: true
  name: ExportEndpoint(WsdlExporter, WsdlEndpointConversionContext)
  nameWithType: IWsdlExportExtension.ExportEndpoint(WsdlExporter, WsdlEndpointConversionContext)
  fullName: CoreWCF.Description.IWsdlExportExtension.ExportEndpoint(CoreWCF.Description.WsdlExporter, CoreWCF.Description.WsdlEndpointConversionContext)
  spec.csharp:
  - uid: CoreWCF.Description.IWsdlExportExtension.ExportEndpoint(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlEndpointConversionContext)
    name: ExportEndpoint
    nameWithType: IWsdlExportExtension.ExportEndpoint
    fullName: CoreWCF.Description.IWsdlExportExtension.ExportEndpoint
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Description.WsdlExporter
    name: WsdlExporter
    nameWithType: WsdlExporter
    fullName: CoreWCF.Description.WsdlExporter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.Description.WsdlEndpointConversionContext
    name: WsdlEndpointConversionContext
    nameWithType: WsdlEndpointConversionContext
    fullName: CoreWCF.Description.WsdlEndpointConversionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Description.IWsdlExportExtension.ExportEndpoint(CoreWCF.Description.WsdlExporter,CoreWCF.Description.WsdlEndpointConversionContext)
    name: ExportEndpoint
    nameWithType: IWsdlExportExtension.ExportEndpoint
    fullName: CoreWCF.Description.IWsdlExportExtension.ExportEndpoint
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Description.WsdlExporter
    name: WsdlExporter
    nameWithType: WsdlExporter
    fullName: CoreWCF.Description.WsdlExporter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.Description.WsdlEndpointConversionContext
    name: WsdlEndpointConversionContext
    nameWithType: WsdlEndpointConversionContext
    fullName: CoreWCF.Description.WsdlEndpointConversionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Description.WsdlEndpointConversionContext
  commentId: T:CoreWCF.Description.WsdlEndpointConversionContext
  parent: CoreWCF.Description
  isExternal: true
  name: WsdlEndpointConversionContext
  nameWithType: WsdlEndpointConversionContext
  fullName: CoreWCF.Description.WsdlEndpointConversionContext
- uid: CoreWCF.Channels.HttpTransportBindingElement.AuthenticationScheme*
  commentId: Overload:CoreWCF.Channels.HttpTransportBindingElement.AuthenticationScheme
  isExternal: true
  name: AuthenticationScheme
  nameWithType: HttpTransportBindingElement.AuthenticationScheme
  fullName: CoreWCF.Channels.HttpTransportBindingElement.AuthenticationScheme
- uid: System.Net.AuthenticationSchemes
  isExternal: true
  name: AuthenticationSchemes
  nameWithType: AuthenticationSchemes
  fullName: System.Net.AuthenticationSchemes
- uid: CoreWCF.Channels.HttpTransportBindingElement.MaxBufferSize*
  commentId: Overload:CoreWCF.Channels.HttpTransportBindingElement.MaxBufferSize
  isExternal: true
  name: MaxBufferSize
  nameWithType: HttpTransportBindingElement.MaxBufferSize
  fullName: CoreWCF.Channels.HttpTransportBindingElement.MaxBufferSize
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: CoreWCF.Channels.HttpTransportBindingElement.KeepAliveEnabled*
  commentId: Overload:CoreWCF.Channels.HttpTransportBindingElement.KeepAliveEnabled
  isExternal: true
  name: KeepAliveEnabled
  nameWithType: HttpTransportBindingElement.KeepAliveEnabled
  fullName: CoreWCF.Channels.HttpTransportBindingElement.KeepAliveEnabled
- uid: CoreWCF.Channels.HttpTransportBindingElement.Realm*
  commentId: Overload:CoreWCF.Channels.HttpTransportBindingElement.Realm
  isExternal: true
  name: Realm
  nameWithType: HttpTransportBindingElement.Realm
  fullName: CoreWCF.Channels.HttpTransportBindingElement.Realm
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CoreWCF.Channels.TransportBindingElement.Scheme
  commentId: P:CoreWCF.Channels.TransportBindingElement.Scheme
  parent: CoreWCF.Channels.TransportBindingElement
  isExternal: true
  name: Scheme
  nameWithType: TransportBindingElement.Scheme
  fullName: CoreWCF.Channels.TransportBindingElement.Scheme
- uid: CoreWCF.Channels.HttpTransportBindingElement.Scheme*
  commentId: Overload:CoreWCF.Channels.HttpTransportBindingElement.Scheme
  isExternal: true
  name: Scheme
  nameWithType: HttpTransportBindingElement.Scheme
  fullName: CoreWCF.Channels.HttpTransportBindingElement.Scheme
- uid: CoreWCF.Channels.HttpTransportBindingElement.TransferMode*
  commentId: Overload:CoreWCF.Channels.HttpTransportBindingElement.TransferMode
  isExternal: true
  name: TransferMode
  nameWithType: HttpTransportBindingElement.TransferMode
  fullName: CoreWCF.Channels.HttpTransportBindingElement.TransferMode
- uid: CoreWCF.TransferMode
  commentId: T:CoreWCF.TransferMode
  parent: CoreWCF
  isExternal: true
  name: TransferMode
  nameWithType: TransferMode
  fullName: CoreWCF.TransferMode
- uid: CoreWCF
  commentId: N:CoreWCF
  isExternal: true
  name: CoreWCF
  nameWithType: CoreWCF
  fullName: CoreWCF
- uid: CoreWCF.Channels.HttpTransportBindingElement.WebSocketSettings*
  commentId: Overload:CoreWCF.Channels.HttpTransportBindingElement.WebSocketSettings
  isExternal: true
  name: WebSocketSettings
  nameWithType: HttpTransportBindingElement.WebSocketSettings
  fullName: CoreWCF.Channels.HttpTransportBindingElement.WebSocketSettings
- uid: CoreWCF.Channels.WebSocketTransportSettings
  commentId: T:CoreWCF.Channels.WebSocketTransportSettings
  parent: CoreWCF.Channels
  isExternal: true
  name: WebSocketTransportSettings
  nameWithType: WebSocketTransportSettings
  fullName: CoreWCF.Channels.WebSocketTransportSettings
- uid: CoreWCF.Channels.HttpTransportBindingElement.ExtendedProtectionPolicy*
  commentId: Overload:CoreWCF.Channels.HttpTransportBindingElement.ExtendedProtectionPolicy
  isExternal: true
  name: ExtendedProtectionPolicy
  nameWithType: HttpTransportBindingElement.ExtendedProtectionPolicy
  fullName: CoreWCF.Channels.HttpTransportBindingElement.ExtendedProtectionPolicy
- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  isExternal: true
  name: ExtendedProtectionPolicy
  nameWithType: ExtendedProtectionPolicy
  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
