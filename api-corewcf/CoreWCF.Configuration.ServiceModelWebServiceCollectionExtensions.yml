### YamlMime:ManagedReference
items:
- uid: CoreWCF.Configuration.ServiceModelWebServiceCollectionExtensions
  commentId: T:CoreWCF.Configuration.ServiceModelWebServiceCollectionExtensions
  id: ServiceModelWebServiceCollectionExtensions
  parent: CoreWCF.Configuration
  children:
  - CoreWCF.Configuration.ServiceModelWebServiceCollectionExtensions.AddServiceModelWebServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{CoreWCF.OpenApi.OpenApiOptions})
  langs:
  - csharp
  - vb
  name: ServiceModelWebServiceCollectionExtensions
  nameWithType: ServiceModelWebServiceCollectionExtensions
  fullName: CoreWCF.Configuration.ServiceModelWebServiceCollectionExtensions
  type: Class
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Configuration
  syntax:
    content: 'public static class ServiceModelWebServiceCollectionExtensions : Object'
    content.vb: >-
      Public Module ServiceModelWebServiceCollectionExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: CoreWCF.Configuration.ServiceModelWebServiceCollectionExtensions.AddServiceModelWebServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{CoreWCF.OpenApi.OpenApiOptions})
  commentId: M:CoreWCF.Configuration.ServiceModelWebServiceCollectionExtensions.AddServiceModelWebServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{CoreWCF.OpenApi.OpenApiOptions})
  id: AddServiceModelWebServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{CoreWCF.OpenApi.OpenApiOptions})
  isExtensionMethod: true
  parent: CoreWCF.Configuration.ServiceModelWebServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddServiceModelWebServices(IServiceCollection, Action<OpenApiOptions>)
  nameWithType: ServiceModelWebServiceCollectionExtensions.AddServiceModelWebServices(IServiceCollection, Action<OpenApiOptions>)
  fullName: CoreWCF.Configuration.ServiceModelWebServiceCollectionExtensions.AddServiceModelWebServices(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<CoreWCF.OpenApi.OpenApiOptions>)
  type: Method
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.Configuration
  syntax:
    content: public static IServiceCollection AddServiceModelWebServices(this IServiceCollection services, Action<OpenApiOptions> configure = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: configure
      type: System.Action{CoreWCF.OpenApi.OpenApiOptions}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddServiceModelWebServices(services As IServiceCollection, configure As Action(Of OpenApiOptions) = Nothing) As IServiceCollection
  overload: CoreWCF.Configuration.ServiceModelWebServiceCollectionExtensions.AddServiceModelWebServices*
  nameWithType.vb: ServiceModelWebServiceCollectionExtensions.AddServiceModelWebServices(IServiceCollection, Action(Of OpenApiOptions))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CoreWCF.Configuration.ServiceModelWebServiceCollectionExtensions.AddServiceModelWebServices(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of CoreWCF.OpenApi.OpenApiOptions))
  name.vb: AddServiceModelWebServices(IServiceCollection, Action(Of OpenApiOptions))
references:
- uid: CoreWCF.Configuration
  commentId: N:CoreWCF.Configuration
  isExternal: true
  name: CoreWCF.Configuration
  nameWithType: CoreWCF.Configuration
  fullName: CoreWCF.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Configuration.ServiceModelWebServiceCollectionExtensions.AddServiceModelWebServices*
  commentId: Overload:CoreWCF.Configuration.ServiceModelWebServiceCollectionExtensions.AddServiceModelWebServices
  isExternal: true
  name: AddServiceModelWebServices
  nameWithType: ServiceModelWebServiceCollectionExtensions.AddServiceModelWebServices
  fullName: CoreWCF.Configuration.ServiceModelWebServiceCollectionExtensions.AddServiceModelWebServices
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: System.Action{CoreWCF.OpenApi.OpenApiOptions}
  commentId: '!:System.Action{CoreWCF.OpenApi.OpenApiOptions}'
  definition: System.Action`1
  name: Action<OpenApiOptions>
  nameWithType: Action<OpenApiOptions>
  fullName: System.Action<CoreWCF.OpenApi.OpenApiOptions>
  nameWithType.vb: Action(Of OpenApiOptions)
  fullName.vb: System.Action(Of CoreWCF.OpenApi.OpenApiOptions)
  name.vb: Action(Of OpenApiOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.OpenApi.OpenApiOptions
    name: OpenApiOptions
    nameWithType: OpenApiOptions
    fullName: CoreWCF.OpenApi.OpenApiOptions
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.OpenApi.OpenApiOptions
    name: OpenApiOptions
    nameWithType: OpenApiOptions
    fullName: CoreWCF.OpenApi.OpenApiOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: System.Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: System.Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
