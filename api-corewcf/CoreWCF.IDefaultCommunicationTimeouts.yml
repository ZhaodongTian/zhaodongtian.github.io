### YamlMime:ManagedReference
items:
- uid: CoreWCF.IDefaultCommunicationTimeouts
  commentId: T:CoreWCF.IDefaultCommunicationTimeouts
  summary: Defines the interface for specifying communication timeouts used by channels, channel managers such as channel listeners and channel factories, and service hosts
  id: IDefaultCommunicationTimeouts
  parent: CoreWCF
  children:
  - CoreWCF.IDefaultCommunicationTimeouts.CloseTimeout
  - CoreWCF.IDefaultCommunicationTimeouts.OpenTimeout
  - CoreWCF.IDefaultCommunicationTimeouts.ReceiveTimeout
  - CoreWCF.IDefaultCommunicationTimeouts.SendTimeout
  langs:
  - csharp
  - vb
  name: IDefaultCommunicationTimeouts
  nameWithType: IDefaultCommunicationTimeouts
  fullName: CoreWCF.IDefaultCommunicationTimeouts
  type: Interface
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF
  remarks:  "\nThis interface has four read-only properties that provide default timeout values for the open, send, receive, and close methods that can be called on a communication object. Each implementation is responsible for obtaining the default values in whatever manner is appropriate for the implementation. This interface is implemented by **ChannelBase**, the base implementation for writing custom channels, and the <xref:CoreWCF.Channels.ChannelManagerBase>, the base implementation for writing custom channel managers which derive from **ChannelFactoryBase** and **ChannelListenerBase**. The interface is also implemented by the <xref:CoreWCF.Channels.Binding> class and then inherited from there by <xref:CoreWCF.Channels.CustomBinding> and the system-provided bindings, such as <xref:CoreWCF.BasicHttpBinding>.

\nWhen you use channels directly, you have the ability to explicitly specify timeouts on a per-channel or per-operation-basis, or on any other custom basis. When using the channel model, timeouts are quite accessible when you want to control them.

\nWhen using the service model, on the other hand, you program against services and contracts, and timeouts are more in the background. They are controlled by the infrastructure machinery which flows timeouts from place to place on your behalf. **IDefaultCommunicationTimeouts** is one mechanism for providing that flow\n"
  syntax:
    content: public interface IDefaultCommunicationTimeouts
    content.vb: Public Interface IDefaultCommunicationTimeouts
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: CoreWCF.IDefaultCommunicationTimeouts.CloseTimeout
  commentId: P:CoreWCF.IDefaultCommunicationTimeouts.CloseTimeout
  summary: Gets the interval of time after which the close method, invoked by a communication object, times out
  id: CloseTimeout
  parent: CoreWCF.IDefaultCommunicationTimeouts
  langs:
  - csharp
  - vb
  name: CloseTimeout
  nameWithType: IDefaultCommunicationTimeouts.CloseTimeout
  fullName: CoreWCF.IDefaultCommunicationTimeouts.CloseTimeout
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF
  syntax:
    content: TimeSpan CloseTimeout { get; }
    parameters: []
    return:
      type: System.TimeSpan
      description: The [TimeSpan](xref:System.TimeSpan) that specifies the interval of time to wait for the close method to time out.
    content.vb: ReadOnly Property CloseTimeout As TimeSpan
  overload: CoreWCF.IDefaultCommunicationTimeouts.CloseTimeout*
  remarks: All operations that are potentially lengthy must have a timeout. Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: CoreWCF.IDefaultCommunicationTimeouts.OpenTimeout
  commentId: P:CoreWCF.IDefaultCommunicationTimeouts.OpenTimeout
  summary: Gets the interval of time after which the open method, invoked by a communication object, times out.
  id: OpenTimeout
  parent: CoreWCF.IDefaultCommunicationTimeouts
  langs:
  - csharp
  - vb
  name: OpenTimeout
  nameWithType: IDefaultCommunicationTimeouts.OpenTimeout
  fullName: CoreWCF.IDefaultCommunicationTimeouts.OpenTimeout
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF
  syntax:
    content: TimeSpan OpenTimeout { get; }
    parameters: []
    return:
      type: System.TimeSpan
      description: The [TimeSpan](xref:System.TimeSpan) that specifies the interval of time to wait for the open method to time out.
    content.vb: ReadOnly Property OpenTimeout As TimeSpan
  overload: CoreWCF.IDefaultCommunicationTimeouts.OpenTimeout*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: CoreWCF.IDefaultCommunicationTimeouts.ReceiveTimeout
  commentId: P:CoreWCF.IDefaultCommunicationTimeouts.ReceiveTimeout
  summary: Gets the interval of time after which the receive method, invoked by a communication object, times out
  id: ReceiveTimeout
  parent: CoreWCF.IDefaultCommunicationTimeouts
  langs:
  - csharp
  - vb
  name: ReceiveTimeout
  nameWithType: IDefaultCommunicationTimeouts.ReceiveTimeout
  fullName: CoreWCF.IDefaultCommunicationTimeouts.ReceiveTimeout
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF
  syntax:
    content: TimeSpan ReceiveTimeout { get; }
    parameters: []
    return:
      type: System.TimeSpan
      description: The [TimeSpan](xref:System.TimeSpan) that specifies the interval of time to wait for the receive method to time out
    content.vb: ReadOnly Property ReceiveTimeout As TimeSpan
  overload: CoreWCF.IDefaultCommunicationTimeouts.ReceiveTimeout*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: CoreWCF.IDefaultCommunicationTimeouts.SendTimeout
  commentId: P:CoreWCF.IDefaultCommunicationTimeouts.SendTimeout
  summary: Gets the interval of time after which the send method, invoked by a communication object, times out
  id: SendTimeout
  parent: CoreWCF.IDefaultCommunicationTimeouts
  langs:
  - csharp
  - vb
  name: SendTimeout
  nameWithType: IDefaultCommunicationTimeouts.SendTimeout
  fullName: CoreWCF.IDefaultCommunicationTimeouts.SendTimeout
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF
  syntax:
    content: TimeSpan SendTimeout { get; }
    parameters: []
    return:
      type: System.TimeSpan
      description: The [TimeSpan](xref:System.TimeSpan) that specifies the interval of time to wait for the send method to time out.
    content.vb: ReadOnly Property SendTimeout As TimeSpan
  overload: CoreWCF.IDefaultCommunicationTimeouts.SendTimeout*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: CoreWCF
  commentId: N:CoreWCF
  isExternal: true
  name: CoreWCF
  nameWithType: CoreWCF
  fullName: CoreWCF
- uid: CoreWCF.IDefaultCommunicationTimeouts.CloseTimeout*
  commentId: Overload:CoreWCF.IDefaultCommunicationTimeouts.CloseTimeout
  isExternal: true
  name: CloseTimeout
  nameWithType: IDefaultCommunicationTimeouts.CloseTimeout
  fullName: CoreWCF.IDefaultCommunicationTimeouts.CloseTimeout
- uid: System.TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: CoreWCF.IDefaultCommunicationTimeouts.OpenTimeout*
  commentId: Overload:CoreWCF.IDefaultCommunicationTimeouts.OpenTimeout
  isExternal: true
  name: OpenTimeout
  nameWithType: IDefaultCommunicationTimeouts.OpenTimeout
  fullName: CoreWCF.IDefaultCommunicationTimeouts.OpenTimeout
- uid: CoreWCF.IDefaultCommunicationTimeouts.ReceiveTimeout*
  commentId: Overload:CoreWCF.IDefaultCommunicationTimeouts.ReceiveTimeout
  isExternal: true
  name: ReceiveTimeout
  nameWithType: IDefaultCommunicationTimeouts.ReceiveTimeout
  fullName: CoreWCF.IDefaultCommunicationTimeouts.ReceiveTimeout
- uid: CoreWCF.IDefaultCommunicationTimeouts.SendTimeout*
  commentId: Overload:CoreWCF.IDefaultCommunicationTimeouts.SendTimeout
  isExternal: true
  name: SendTimeout
  nameWithType: IDefaultCommunicationTimeouts.SendTimeout
  fullName: CoreWCF.IDefaultCommunicationTimeouts.SendTimeout
