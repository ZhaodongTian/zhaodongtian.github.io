### YamlMime:ManagedReference
items:
- uid: CoreWCF.Channels.IRequestSessionChannel
  commentId: T:CoreWCF.Channels.IRequestSessionChannel
  id: IRequestSessionChannel
  parent: CoreWCF.Channels
  children: []
  langs:
  - csharp
  - vb
  name: IRequestSessionChannel
  nameWithType: IRequestSessionChannel
  fullName: CoreWCF.Channels.IRequestSessionChannel
  type: Interface
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Channels
  summary: Defines the interface to associate a request channel with a session.
  remarks: "\n\n\nThe <xref:CoreWCF.Channels.IRequestSessionChannel> interface indicates that an <xref:CoreWCF.Channels.IRequestChannel> implements <xref:CoreWCF.Channels.IOutputSession> semantics.  \n\nThe <xref:CoreWCF.Channels.IOutputSession> associated with its <xref:CoreWCF.Channels.IReplySessionChannel> can be retrieved through the <xref:CoreWCF.Channels.ISessionChannel%601.Session%2A> property.  \n\n"
  syntax:
    content: 'public interface IRequestSessionChannel : IRequestChannel, IChannel, ICommunicationObject, ISessionChannel<IOutputSession>'
    content.vb: >-
      Public Interface IRequestSessionChannel
          Inherits IChannel, ICommunicationObject, IRequestChannel, ISessionChannel(Of IOutputSession)
  inheritedMembers:
  - CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message)
  - CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
  - CoreWCF.Channels.IRequestChannel.RemoteAddress
  - CoreWCF.Channels.IRequestChannel.Via
  - CoreWCF.Channels.IChannel.GetProperty``1
  - CoreWCF.Channels.IChannel.ChannelDispatcher
  - CoreWCF.ICommunicationObject.Abort
  - CoreWCF.ICommunicationObject.CloseAsync
  - CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
  - CoreWCF.ICommunicationObject.OpenAsync
  - CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
  - CoreWCF.ICommunicationObject.State
  - CoreWCF.ICommunicationObject.Closed
  - CoreWCF.ICommunicationObject.Closing
  - CoreWCF.ICommunicationObject.Faulted
  - CoreWCF.ICommunicationObject.Opened
  - CoreWCF.ICommunicationObject.Opening
  - CoreWCF.Channels.ISessionChannel{CoreWCF.Channels.IOutputSession}.Session
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: CoreWCF.Channels
  commentId: N:CoreWCF.Channels
  isExternal: true
  name: CoreWCF.Channels
  nameWithType: CoreWCF.Channels
  fullName: CoreWCF.Channels
- uid: CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message)
  commentId: M:CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message)
  parent: CoreWCF.Channels.IRequestChannel
  isExternal: true
  name: RequestAsync(Message)
  nameWithType: IRequestChannel.RequestAsync(Message)
  fullName: CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message)
  spec.csharp:
  - uid: CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message)
    name: RequestAsync
    nameWithType: IRequestChannel.RequestAsync
    fullName: CoreWCF.Channels.IRequestChannel.RequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.Message
    name: Message
    nameWithType: Message
    fullName: CoreWCF.Channels.Message
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message)
    name: RequestAsync
    nameWithType: IRequestChannel.RequestAsync
    fullName: CoreWCF.Channels.IRequestChannel.RequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.Message
    name: Message
    nameWithType: Message
    fullName: CoreWCF.Channels.Message
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
  commentId: M:CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
  parent: CoreWCF.Channels.IRequestChannel
  isExternal: true
  name: RequestAsync(Message, CancellationToken)
  nameWithType: IRequestChannel.RequestAsync(Message, CancellationToken)
  fullName: CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message, System.Threading.CancellationToken)
  spec.csharp:
  - uid: CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
    name: RequestAsync
    nameWithType: IRequestChannel.RequestAsync
    fullName: CoreWCF.Channels.IRequestChannel.RequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.Message
    name: Message
    nameWithType: Message
    fullName: CoreWCF.Channels.Message
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.IRequestChannel.RequestAsync(CoreWCF.Channels.Message,System.Threading.CancellationToken)
    name: RequestAsync
    nameWithType: IRequestChannel.RequestAsync
    fullName: CoreWCF.Channels.IRequestChannel.RequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.Message
    name: Message
    nameWithType: Message
    fullName: CoreWCF.Channels.Message
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.IRequestChannel.RemoteAddress
  commentId: P:CoreWCF.Channels.IRequestChannel.RemoteAddress
  parent: CoreWCF.Channels.IRequestChannel
  isExternal: true
  name: RemoteAddress
  nameWithType: IRequestChannel.RemoteAddress
  fullName: CoreWCF.Channels.IRequestChannel.RemoteAddress
- uid: CoreWCF.Channels.IRequestChannel.Via
  commentId: P:CoreWCF.Channels.IRequestChannel.Via
  parent: CoreWCF.Channels.IRequestChannel
  isExternal: true
  name: Via
  nameWithType: IRequestChannel.Via
  fullName: CoreWCF.Channels.IRequestChannel.Via
- uid: CoreWCF.Channels.IChannel.GetProperty``1
  commentId: M:CoreWCF.Channels.IChannel.GetProperty``1
  parent: CoreWCF.Channels.IChannel
  isExternal: true
  name: GetProperty<T>()
  nameWithType: IChannel.GetProperty<T>()
  fullName: CoreWCF.Channels.IChannel.GetProperty<T>()
  nameWithType.vb: IChannel.GetProperty(Of T)()
  fullName.vb: CoreWCF.Channels.IChannel.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
  spec.csharp:
  - uid: CoreWCF.Channels.IChannel.GetProperty``1
    name: GetProperty<T>
    nameWithType: IChannel.GetProperty<T>
    fullName: CoreWCF.Channels.IChannel.GetProperty<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Channels.IChannel.GetProperty``1
    name: GetProperty(Of T)
    nameWithType: IChannel.GetProperty(Of T)
    fullName: CoreWCF.Channels.IChannel.GetProperty(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Channels.IChannel.ChannelDispatcher
  commentId: P:CoreWCF.Channels.IChannel.ChannelDispatcher
  parent: CoreWCF.Channels.IChannel
  isExternal: true
  name: ChannelDispatcher
  nameWithType: IChannel.ChannelDispatcher
  fullName: CoreWCF.Channels.IChannel.ChannelDispatcher
- uid: CoreWCF.ICommunicationObject.Abort
  commentId: M:CoreWCF.ICommunicationObject.Abort
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Abort()
  nameWithType: ICommunicationObject.Abort()
  fullName: CoreWCF.ICommunicationObject.Abort()
  spec.csharp:
  - uid: CoreWCF.ICommunicationObject.Abort
    name: Abort
    nameWithType: ICommunicationObject.Abort
    fullName: CoreWCF.ICommunicationObject.Abort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.ICommunicationObject.Abort
    name: Abort
    nameWithType: ICommunicationObject.Abort
    fullName: CoreWCF.ICommunicationObject.Abort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.ICommunicationObject.CloseAsync
  commentId: M:CoreWCF.ICommunicationObject.CloseAsync
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: CloseAsync()
  nameWithType: ICommunicationObject.CloseAsync()
  fullName: CoreWCF.ICommunicationObject.CloseAsync()
  spec.csharp:
  - uid: CoreWCF.ICommunicationObject.CloseAsync
    name: CloseAsync
    nameWithType: ICommunicationObject.CloseAsync
    fullName: CoreWCF.ICommunicationObject.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.ICommunicationObject.CloseAsync
    name: CloseAsync
    nameWithType: ICommunicationObject.CloseAsync
    fullName: CoreWCF.ICommunicationObject.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
  commentId: M:CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: CloseAsync(CancellationToken)
  nameWithType: ICommunicationObject.CloseAsync(CancellationToken)
  fullName: CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
    name: CloseAsync
    nameWithType: ICommunicationObject.CloseAsync
    fullName: CoreWCF.ICommunicationObject.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.ICommunicationObject.CloseAsync(System.Threading.CancellationToken)
    name: CloseAsync
    nameWithType: ICommunicationObject.CloseAsync
    fullName: CoreWCF.ICommunicationObject.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.ICommunicationObject.OpenAsync
  commentId: M:CoreWCF.ICommunicationObject.OpenAsync
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: OpenAsync()
  nameWithType: ICommunicationObject.OpenAsync()
  fullName: CoreWCF.ICommunicationObject.OpenAsync()
  spec.csharp:
  - uid: CoreWCF.ICommunicationObject.OpenAsync
    name: OpenAsync
    nameWithType: ICommunicationObject.OpenAsync
    fullName: CoreWCF.ICommunicationObject.OpenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.ICommunicationObject.OpenAsync
    name: OpenAsync
    nameWithType: ICommunicationObject.OpenAsync
    fullName: CoreWCF.ICommunicationObject.OpenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
  commentId: M:CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: OpenAsync(CancellationToken)
  nameWithType: ICommunicationObject.OpenAsync(CancellationToken)
  fullName: CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: ICommunicationObject.OpenAsync
    fullName: CoreWCF.ICommunicationObject.OpenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.ICommunicationObject.OpenAsync(System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: ICommunicationObject.OpenAsync
    fullName: CoreWCF.ICommunicationObject.OpenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.ICommunicationObject.State
  commentId: P:CoreWCF.ICommunicationObject.State
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: State
  nameWithType: ICommunicationObject.State
  fullName: CoreWCF.ICommunicationObject.State
- uid: CoreWCF.ICommunicationObject.Closed
  commentId: E:CoreWCF.ICommunicationObject.Closed
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Closed
  nameWithType: ICommunicationObject.Closed
  fullName: CoreWCF.ICommunicationObject.Closed
- uid: CoreWCF.ICommunicationObject.Closing
  commentId: E:CoreWCF.ICommunicationObject.Closing
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Closing
  nameWithType: ICommunicationObject.Closing
  fullName: CoreWCF.ICommunicationObject.Closing
- uid: CoreWCF.ICommunicationObject.Faulted
  commentId: E:CoreWCF.ICommunicationObject.Faulted
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Faulted
  nameWithType: ICommunicationObject.Faulted
  fullName: CoreWCF.ICommunicationObject.Faulted
- uid: CoreWCF.ICommunicationObject.Opened
  commentId: E:CoreWCF.ICommunicationObject.Opened
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Opened
  nameWithType: ICommunicationObject.Opened
  fullName: CoreWCF.ICommunicationObject.Opened
- uid: CoreWCF.ICommunicationObject.Opening
  commentId: E:CoreWCF.ICommunicationObject.Opening
  parent: CoreWCF.ICommunicationObject
  isExternal: true
  name: Opening
  nameWithType: ICommunicationObject.Opening
  fullName: CoreWCF.ICommunicationObject.Opening
- uid: CoreWCF.Channels.ISessionChannel{CoreWCF.Channels.IOutputSession}.Session
  commentId: P:CoreWCF.Channels.ISessionChannel{CoreWCF.Channels.IOutputSession}.Session
  parent: CoreWCF.Channels.ISessionChannel{CoreWCF.Channels.IOutputSession}
  definition: CoreWCF.Channels.ISessionChannel`1.Session
  name: Session
  nameWithType: ISessionChannel<IOutputSession>.Session
  fullName: CoreWCF.Channels.ISessionChannel<CoreWCF.Channels.IOutputSession>.Session
  nameWithType.vb: ISessionChannel(Of IOutputSession).Session
  fullName.vb: CoreWCF.Channels.ISessionChannel(Of CoreWCF.Channels.IOutputSession).Session
- uid: CoreWCF.Channels.IRequestChannel
  commentId: T:CoreWCF.Channels.IRequestChannel
  parent: CoreWCF.Channels
  isExternal: true
  name: IRequestChannel
  nameWithType: IRequestChannel
  fullName: CoreWCF.Channels.IRequestChannel
- uid: CoreWCF.Channels.IChannel
  commentId: T:CoreWCF.Channels.IChannel
  parent: CoreWCF.Channels
  isExternal: true
  name: IChannel
  nameWithType: IChannel
  fullName: CoreWCF.Channels.IChannel
- uid: CoreWCF.ICommunicationObject
  commentId: T:CoreWCF.ICommunicationObject
  parent: CoreWCF
  isExternal: true
  name: ICommunicationObject
  nameWithType: ICommunicationObject
  fullName: CoreWCF.ICommunicationObject
- uid: CoreWCF.Channels.ISessionChannel`1.Session
  commentId: P:CoreWCF.Channels.ISessionChannel`1.Session
  isExternal: true
  name: Session
  nameWithType: ISessionChannel<TSession>.Session
  fullName: CoreWCF.Channels.ISessionChannel<TSession>.Session
  nameWithType.vb: ISessionChannel(Of TSession).Session
  fullName.vb: CoreWCF.Channels.ISessionChannel(Of TSession).Session
- uid: CoreWCF.Channels.ISessionChannel{CoreWCF.Channels.IOutputSession}
  commentId: T:CoreWCF.Channels.ISessionChannel{CoreWCF.Channels.IOutputSession}
  parent: CoreWCF.Channels
  definition: CoreWCF.Channels.ISessionChannel`1
  name: ISessionChannel<IOutputSession>
  nameWithType: ISessionChannel<IOutputSession>
  fullName: CoreWCF.Channels.ISessionChannel<CoreWCF.Channels.IOutputSession>
  nameWithType.vb: ISessionChannel(Of IOutputSession)
  fullName.vb: CoreWCF.Channels.ISessionChannel(Of CoreWCF.Channels.IOutputSession)
  name.vb: ISessionChannel(Of IOutputSession)
  spec.csharp:
  - uid: CoreWCF.Channels.ISessionChannel`1
    name: ISessionChannel
    nameWithType: ISessionChannel
    fullName: CoreWCF.Channels.ISessionChannel
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.Channels.IOutputSession
    name: IOutputSession
    nameWithType: IOutputSession
    fullName: CoreWCF.Channels.IOutputSession
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CoreWCF.Channels.ISessionChannel`1
    name: ISessionChannel
    nameWithType: ISessionChannel
    fullName: CoreWCF.Channels.ISessionChannel
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.Channels.IOutputSession
    name: IOutputSession
    nameWithType: IOutputSession
    fullName: CoreWCF.Channels.IOutputSession
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF
  commentId: N:CoreWCF
  isExternal: true
  name: CoreWCF
  nameWithType: CoreWCF
  fullName: CoreWCF
- uid: CoreWCF.Channels.ISessionChannel`1
  commentId: T:CoreWCF.Channels.ISessionChannel`1
  isExternal: true
  name: ISessionChannel<TSession>
  nameWithType: ISessionChannel<TSession>
  fullName: CoreWCF.Channels.ISessionChannel<TSession>
  nameWithType.vb: ISessionChannel(Of TSession)
  fullName.vb: CoreWCF.Channels.ISessionChannel(Of TSession)
  name.vb: ISessionChannel(Of TSession)
  spec.csharp:
  - uid: CoreWCF.Channels.ISessionChannel`1
    name: ISessionChannel
    nameWithType: ISessionChannel
    fullName: CoreWCF.Channels.ISessionChannel
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSession
    nameWithType: TSession
    fullName: TSession
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CoreWCF.Channels.ISessionChannel`1
    name: ISessionChannel
    nameWithType: ISessionChannel
    fullName: CoreWCF.Channels.ISessionChannel
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSession
    nameWithType: TSession
    fullName: TSession
  - name: )
    nameWithType: )
    fullName: )
