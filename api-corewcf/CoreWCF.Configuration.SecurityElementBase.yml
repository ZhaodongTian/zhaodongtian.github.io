### YamlMime:ManagedReference
items:
- uid: CoreWCF.Configuration.SecurityElementBase
  commentId: T:CoreWCF.Configuration.SecurityElementBase
  id: SecurityElementBase
  parent: CoreWCF.Configuration
  children:
  - CoreWCF.Configuration.SecurityElementBase.AddBindingTemplate(System.Collections.Generic.Dictionary{CoreWCF.Configuration.AuthenticationMode,CoreWCF.Channels.SecurityBindingElement},CoreWCF.Configuration.AuthenticationMode)
  - CoreWCF.Configuration.SecurityElementBase.AddBindingTemplates(System.Collections.Generic.Dictionary{CoreWCF.Configuration.AuthenticationMode,CoreWCF.Channels.SecurityBindingElement})
  - CoreWCF.Configuration.SecurityElementBase.AllowInsecureTransport
  - CoreWCF.Configuration.SecurityElementBase.ApplyConfiguration(CoreWCF.Channels.BindingElement)
  - CoreWCF.Configuration.SecurityElementBase.AuthenticationMode
  - CoreWCF.Configuration.SecurityElementBase.BindingElementType
  - CoreWCF.Configuration.SecurityElementBase.CanRenewSecurityContextToken
  - CoreWCF.Configuration.SecurityElementBase.CopyFrom(CoreWCF.Configuration.ServiceModelExtensionElement)
  - CoreWCF.Configuration.SecurityElementBase.CreateBindingElement
  - CoreWCF.Configuration.SecurityElementBase.CreateBindingElement(System.Boolean)
  - CoreWCF.Configuration.SecurityElementBase.DefaultAlgorithmSuite
  - CoreWCF.Configuration.SecurityElementBase.EnableUnsecuredResponse
  - CoreWCF.Configuration.SecurityElementBase.IncludeTimestamp
  - CoreWCF.Configuration.SecurityElementBase.InitializeFrom(CoreWCF.Channels.BindingElement)
  - CoreWCF.Configuration.SecurityElementBase.InitializeNestedTokenParameterSettings(CoreWCF.Security.Tokens.SecurityTokenParameters,System.Boolean)
  - CoreWCF.Configuration.SecurityElementBase.IssuedTokenParameters
  - CoreWCF.Configuration.SecurityElementBase.KeyEntropyMode
  - CoreWCF.Configuration.SecurityElementBase.LocalServiceSettings
  - CoreWCF.Configuration.SecurityElementBase.MessageProtectionOrder
  - CoreWCF.Configuration.SecurityElementBase.MessageSecurityVersion
  - CoreWCF.Configuration.SecurityElementBase.ProtectTokens
  - CoreWCF.Configuration.SecurityElementBase.RequireDerivedKeys
  - CoreWCF.Configuration.SecurityElementBase.RequireSecurityContextCancellation
  - CoreWCF.Configuration.SecurityElementBase.RequireSignatureConfirmation
  - CoreWCF.Configuration.SecurityElementBase.SecurityHeaderLayout
  - CoreWCF.Configuration.SecurityElementBase.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - CoreWCF.Configuration.SecurityElementBase.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - CoreWCF.Configuration.SecurityElementBase.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  langs:
  - csharp
  - vb
  name: SecurityElementBase
  nameWithType: SecurityElementBase
  fullName: CoreWCF.Configuration.SecurityElementBase
  type: Class
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  summary: Represents a base class with members common to an element that is used to configure security settings.
  remarks: To be added.
  syntax:
    content: 'public class SecurityElementBase : BindingElementExtensionElement'
    content.vb: >-
      Public Class SecurityElementBase
          Inherits BindingElementExtensionElement
  inheritance:
  - System.Object
  - CoreWCF.Configuration.ServiceModelConfigurationElement
  - CoreWCF.Configuration.ServiceModelExtensionElement
  - CoreWCF.Configuration.BindingElementExtensionElement
  derivedClasses:
  - CoreWCF.Configuration.SecurityElement
  inheritedMembers:
  - CoreWCF.Configuration.ServiceModelExtensionElement.ExtensionCollectionName
  - CoreWCF.Configuration.ServiceModelExtensionElement.ConfigurationElementName
  - CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,{T})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.Configuration.SecurityElementBase.ApplyConfiguration(CoreWCF.Channels.BindingElement)
  commentId: M:CoreWCF.Configuration.SecurityElementBase.ApplyConfiguration(CoreWCF.Channels.BindingElement)
  id: ApplyConfiguration(CoreWCF.Channels.BindingElement)
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: ApplyConfiguration(BindingElement)
  nameWithType: SecurityElementBase.ApplyConfiguration(BindingElement)
  fullName: CoreWCF.Configuration.SecurityElementBase.ApplyConfiguration(CoreWCF.Channels.BindingElement)
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public override void ApplyConfiguration(BindingElement bindingElement)
    parameters:
    - id: bindingElement
      type: CoreWCF.Channels.BindingElement
    content.vb: Public Overrides Sub ApplyConfiguration(bindingElement As BindingElement)
  overridden: CoreWCF.Configuration.BindingElementExtensionElement.ApplyConfiguration(CoreWCF.Channels.BindingElement)
  overload: CoreWCF.Configuration.SecurityElementBase.ApplyConfiguration*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CoreWCF.Configuration.SecurityElementBase.CopyFrom(CoreWCF.Configuration.ServiceModelExtensionElement)
  commentId: M:CoreWCF.Configuration.SecurityElementBase.CopyFrom(CoreWCF.Configuration.ServiceModelExtensionElement)
  id: CopyFrom(CoreWCF.Configuration.ServiceModelExtensionElement)
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: CopyFrom(ServiceModelExtensionElement)
  nameWithType: SecurityElementBase.CopyFrom(ServiceModelExtensionElement)
  fullName: CoreWCF.Configuration.SecurityElementBase.CopyFrom(CoreWCF.Configuration.ServiceModelExtensionElement)
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public override void CopyFrom(ServiceModelExtensionElement from)
    parameters:
    - id: from
      type: CoreWCF.Configuration.ServiceModelExtensionElement
    content.vb: Public Overrides Sub CopyFrom(from As ServiceModelExtensionElement)
  overridden: CoreWCF.Configuration.ServiceModelExtensionElement.CopyFrom(CoreWCF.Configuration.ServiceModelExtensionElement)
  overload: CoreWCF.Configuration.SecurityElementBase.CopyFrom*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CoreWCF.Configuration.SecurityElementBase.CreateBindingElement
  commentId: M:CoreWCF.Configuration.SecurityElementBase.CreateBindingElement
  id: CreateBindingElement
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: CreateBindingElement()
  nameWithType: SecurityElementBase.CreateBindingElement()
  fullName: CoreWCF.Configuration.SecurityElementBase.CreateBindingElement()
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: protected override BindingElement CreateBindingElement()
    return:
      type: CoreWCF.Channels.BindingElement
    content.vb: Protected Overrides Function CreateBindingElement As BindingElement
  overridden: CoreWCF.Configuration.BindingElementExtensionElement.CreateBindingElement
  overload: CoreWCF.Configuration.SecurityElementBase.CreateBindingElement*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: CoreWCF.Configuration.SecurityElementBase.CreateBindingElement(System.Boolean)
  commentId: M:CoreWCF.Configuration.SecurityElementBase.CreateBindingElement(System.Boolean)
  id: CreateBindingElement(System.Boolean)
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: CreateBindingElement(Boolean)
  nameWithType: SecurityElementBase.CreateBindingElement(Boolean)
  fullName: CoreWCF.Configuration.SecurityElementBase.CreateBindingElement(System.Boolean)
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: protected virtual BindingElement CreateBindingElement(bool createTemplateOnly)
    parameters:
    - id: createTemplateOnly
      type: System.Boolean
    return:
      type: CoreWCF.Channels.BindingElement
    content.vb: Protected Overridable Function CreateBindingElement(createTemplateOnly As Boolean) As BindingElement
  overload: CoreWCF.Configuration.SecurityElementBase.CreateBindingElement*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: CoreWCF.Configuration.SecurityElementBase.AddBindingTemplate(System.Collections.Generic.Dictionary{CoreWCF.Configuration.AuthenticationMode,CoreWCF.Channels.SecurityBindingElement},CoreWCF.Configuration.AuthenticationMode)
  commentId: M:CoreWCF.Configuration.SecurityElementBase.AddBindingTemplate(System.Collections.Generic.Dictionary{CoreWCF.Configuration.AuthenticationMode,CoreWCF.Channels.SecurityBindingElement},CoreWCF.Configuration.AuthenticationMode)
  id: AddBindingTemplate(System.Collections.Generic.Dictionary{CoreWCF.Configuration.AuthenticationMode,CoreWCF.Channels.SecurityBindingElement},CoreWCF.Configuration.AuthenticationMode)
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: AddBindingTemplate(Dictionary<AuthenticationMode, SecurityBindingElement>, AuthenticationMode)
  nameWithType: SecurityElementBase.AddBindingTemplate(Dictionary<AuthenticationMode, SecurityBindingElement>, AuthenticationMode)
  fullName: CoreWCF.Configuration.SecurityElementBase.AddBindingTemplate(System.Collections.Generic.Dictionary<CoreWCF.Configuration.AuthenticationMode, CoreWCF.Channels.SecurityBindingElement>, CoreWCF.Configuration.AuthenticationMode)
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: protected void AddBindingTemplate(Dictionary<AuthenticationMode, SecurityBindingElement> bindingTemplates, AuthenticationMode mode)
    parameters:
    - id: bindingTemplates
      type: System.Collections.Generic.Dictionary{CoreWCF.Configuration.AuthenticationMode,CoreWCF.Channels.SecurityBindingElement}
    - id: mode
      type: CoreWCF.Configuration.AuthenticationMode
    content.vb: Protected Sub AddBindingTemplate(bindingTemplates As Dictionary(Of AuthenticationMode, SecurityBindingElement), mode As AuthenticationMode)
  overload: CoreWCF.Configuration.SecurityElementBase.AddBindingTemplate*
  nameWithType.vb: SecurityElementBase.AddBindingTemplate(Dictionary(Of AuthenticationMode, SecurityBindingElement), AuthenticationMode)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: CoreWCF.Configuration.SecurityElementBase.AddBindingTemplate(System.Collections.Generic.Dictionary(Of CoreWCF.Configuration.AuthenticationMode, CoreWCF.Channels.SecurityBindingElement), CoreWCF.Configuration.AuthenticationMode)
  name.vb: AddBindingTemplate(Dictionary(Of AuthenticationMode, SecurityBindingElement), AuthenticationMode)
- uid: CoreWCF.Configuration.SecurityElementBase.AddBindingTemplates(System.Collections.Generic.Dictionary{CoreWCF.Configuration.AuthenticationMode,CoreWCF.Channels.SecurityBindingElement})
  commentId: M:CoreWCF.Configuration.SecurityElementBase.AddBindingTemplates(System.Collections.Generic.Dictionary{CoreWCF.Configuration.AuthenticationMode,CoreWCF.Channels.SecurityBindingElement})
  id: AddBindingTemplates(System.Collections.Generic.Dictionary{CoreWCF.Configuration.AuthenticationMode,CoreWCF.Channels.SecurityBindingElement})
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: AddBindingTemplates(Dictionary<AuthenticationMode, SecurityBindingElement>)
  nameWithType: SecurityElementBase.AddBindingTemplates(Dictionary<AuthenticationMode, SecurityBindingElement>)
  fullName: CoreWCF.Configuration.SecurityElementBase.AddBindingTemplates(System.Collections.Generic.Dictionary<CoreWCF.Configuration.AuthenticationMode, CoreWCF.Channels.SecurityBindingElement>)
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: protected virtual void AddBindingTemplates(Dictionary<AuthenticationMode, SecurityBindingElement> bindingTemplates)
    parameters:
    - id: bindingTemplates
      type: System.Collections.Generic.Dictionary{CoreWCF.Configuration.AuthenticationMode,CoreWCF.Channels.SecurityBindingElement}
    content.vb: Protected Overridable Sub AddBindingTemplates(bindingTemplates As Dictionary(Of AuthenticationMode, SecurityBindingElement))
  overload: CoreWCF.Configuration.SecurityElementBase.AddBindingTemplates*
  nameWithType.vb: SecurityElementBase.AddBindingTemplates(Dictionary(Of AuthenticationMode, SecurityBindingElement))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: CoreWCF.Configuration.SecurityElementBase.AddBindingTemplates(System.Collections.Generic.Dictionary(Of CoreWCF.Configuration.AuthenticationMode, CoreWCF.Channels.SecurityBindingElement))
  name.vb: AddBindingTemplates(Dictionary(Of AuthenticationMode, SecurityBindingElement))
- uid: CoreWCF.Configuration.SecurityElementBase.InitializeNestedTokenParameterSettings(CoreWCF.Security.Tokens.SecurityTokenParameters,System.Boolean)
  commentId: M:CoreWCF.Configuration.SecurityElementBase.InitializeNestedTokenParameterSettings(CoreWCF.Security.Tokens.SecurityTokenParameters,System.Boolean)
  id: InitializeNestedTokenParameterSettings(CoreWCF.Security.Tokens.SecurityTokenParameters,System.Boolean)
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: InitializeNestedTokenParameterSettings(SecurityTokenParameters, Boolean)
  nameWithType: SecurityElementBase.InitializeNestedTokenParameterSettings(SecurityTokenParameters, Boolean)
  fullName: CoreWCF.Configuration.SecurityElementBase.InitializeNestedTokenParameterSettings(CoreWCF.Security.Tokens.SecurityTokenParameters, System.Boolean)
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: protected virtual void InitializeNestedTokenParameterSettings(SecurityTokenParameters sp, bool initializeNestedBindings)
    parameters:
    - id: sp
      type: CoreWCF.Security.Tokens.SecurityTokenParameters
    - id: initializeNestedBindings
      type: System.Boolean
    content.vb: Protected Overridable Sub InitializeNestedTokenParameterSettings(sp As SecurityTokenParameters, initializeNestedBindings As Boolean)
  overload: CoreWCF.Configuration.SecurityElementBase.InitializeNestedTokenParameterSettings*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: CoreWCF.Configuration.SecurityElementBase.InitializeFrom(CoreWCF.Channels.BindingElement)
  commentId: M:CoreWCF.Configuration.SecurityElementBase.InitializeFrom(CoreWCF.Channels.BindingElement)
  id: InitializeFrom(CoreWCF.Channels.BindingElement)
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: InitializeFrom(BindingElement)
  nameWithType: SecurityElementBase.InitializeFrom(BindingElement)
  fullName: CoreWCF.Configuration.SecurityElementBase.InitializeFrom(CoreWCF.Channels.BindingElement)
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: protected override void InitializeFrom(BindingElement bindingElement)
    parameters:
    - id: bindingElement
      type: CoreWCF.Channels.BindingElement
    content.vb: Protected Overrides Sub InitializeFrom(bindingElement As BindingElement)
  overridden: CoreWCF.Configuration.BindingElementExtensionElement.InitializeFrom(CoreWCF.Channels.BindingElement)
  overload: CoreWCF.Configuration.SecurityElementBase.InitializeFrom*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: CoreWCF.Configuration.SecurityElementBase.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  commentId: M:CoreWCF.Configuration.SecurityElementBase.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  id: SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: SerializeToXmlElement(XmlWriter, String)
  nameWithType: SecurityElementBase.SerializeToXmlElement(XmlWriter, String)
  fullName: CoreWCF.Configuration.SecurityElementBase.SerializeToXmlElement(System.Xml.XmlWriter, System.String)
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: protected override bool SerializeToXmlElement(XmlWriter writer, string elementName)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
    - id: elementName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function SerializeToXmlElement(writer As XmlWriter, elementName As String) As Boolean
  overload: CoreWCF.Configuration.SecurityElementBase.SerializeToXmlElement*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: CoreWCF.Configuration.SecurityElementBase.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  commentId: M:CoreWCF.Configuration.SecurityElementBase.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  id: SerializeElement(System.Xml.XmlWriter,System.Boolean)
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: SerializeElement(XmlWriter, Boolean)
  nameWithType: SecurityElementBase.SerializeElement(XmlWriter, Boolean)
  fullName: CoreWCF.Configuration.SecurityElementBase.SerializeElement(System.Xml.XmlWriter, System.Boolean)
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: protected override bool SerializeElement(XmlWriter writer, bool serializeCollectionKey)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
    - id: serializeCollectionKey
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function SerializeElement(writer As XmlWriter, serializeCollectionKey As Boolean) As Boolean
  overload: CoreWCF.Configuration.SecurityElementBase.SerializeElement*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: CoreWCF.Configuration.SecurityElementBase.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  commentId: M:CoreWCF.Configuration.SecurityElementBase.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  id: Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)
  nameWithType: SecurityElementBase.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)
  fullName: CoreWCF.Configuration.SecurityElementBase.Unmerge(System.Configuration.ConfigurationElement, System.Configuration.ConfigurationElement, System.Configuration.ConfigurationSaveMode)
  type: Method
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: protected override void Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)
    parameters:
    - id: sourceElement
      type: System.Configuration.ConfigurationElement
    - id: parentElement
      type: System.Configuration.ConfigurationElement
    - id: saveMode
      type: System.Configuration.ConfigurationSaveMode
    content.vb: Protected Overrides Sub Unmerge(sourceElement As ConfigurationElement, parentElement As ConfigurationElement, saveMode As ConfigurationSaveMode)
  overload: CoreWCF.Configuration.SecurityElementBase.Unmerge*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: CoreWCF.Configuration.SecurityElementBase.DefaultAlgorithmSuite
  commentId: P:CoreWCF.Configuration.SecurityElementBase.DefaultAlgorithmSuite
  id: DefaultAlgorithmSuite
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: DefaultAlgorithmSuite
  nameWithType: SecurityElementBase.DefaultAlgorithmSuite
  fullName: CoreWCF.Configuration.SecurityElementBase.DefaultAlgorithmSuite
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public SecurityAlgorithmSuite DefaultAlgorithmSuite { get; set; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityAlgorithmSuite
    content.vb: Public Property DefaultAlgorithmSuite As SecurityAlgorithmSuite
  overload: CoreWCF.Configuration.SecurityElementBase.DefaultAlgorithmSuite*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.SecurityElementBase.EnableUnsecuredResponse
  commentId: P:CoreWCF.Configuration.SecurityElementBase.EnableUnsecuredResponse
  id: EnableUnsecuredResponse
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: EnableUnsecuredResponse
  nameWithType: SecurityElementBase.EnableUnsecuredResponse
  fullName: CoreWCF.Configuration.SecurityElementBase.EnableUnsecuredResponse
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public bool EnableUnsecuredResponse { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property EnableUnsecuredResponse As Boolean
  overload: CoreWCF.Configuration.SecurityElementBase.EnableUnsecuredResponse*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.SecurityElementBase.AuthenticationMode
  commentId: P:CoreWCF.Configuration.SecurityElementBase.AuthenticationMode
  id: AuthenticationMode
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: AuthenticationMode
  nameWithType: SecurityElementBase.AuthenticationMode
  fullName: CoreWCF.Configuration.SecurityElementBase.AuthenticationMode
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public AuthenticationMode AuthenticationMode { get; set; }
    parameters: []
    return:
      type: CoreWCF.Configuration.AuthenticationMode
    content.vb: Public Property AuthenticationMode As AuthenticationMode
  overload: CoreWCF.Configuration.SecurityElementBase.AuthenticationMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.SecurityElementBase.BindingElementType
  commentId: P:CoreWCF.Configuration.SecurityElementBase.BindingElementType
  id: BindingElementType
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: BindingElementType
  nameWithType: SecurityElementBase.BindingElementType
  fullName: CoreWCF.Configuration.SecurityElementBase.BindingElementType
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public override Type BindingElementType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Overrides ReadOnly Property BindingElementType As Type
  overridden: CoreWCF.Configuration.BindingElementExtensionElement.BindingElementType
  overload: CoreWCF.Configuration.SecurityElementBase.BindingElementType*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: CoreWCF.Configuration.SecurityElementBase.RequireDerivedKeys
  commentId: P:CoreWCF.Configuration.SecurityElementBase.RequireDerivedKeys
  id: RequireDerivedKeys
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: RequireDerivedKeys
  nameWithType: SecurityElementBase.RequireDerivedKeys
  fullName: CoreWCF.Configuration.SecurityElementBase.RequireDerivedKeys
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public bool RequireDerivedKeys { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RequireDerivedKeys As Boolean
  overload: CoreWCF.Configuration.SecurityElementBase.RequireDerivedKeys*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.SecurityElementBase.SecurityHeaderLayout
  commentId: P:CoreWCF.Configuration.SecurityElementBase.SecurityHeaderLayout
  id: SecurityHeaderLayout
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: SecurityHeaderLayout
  nameWithType: SecurityElementBase.SecurityHeaderLayout
  fullName: CoreWCF.Configuration.SecurityElementBase.SecurityHeaderLayout
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public SecurityHeaderLayout SecurityHeaderLayout { get; set; }
    parameters: []
    return:
      type: CoreWCF.Channels.SecurityHeaderLayout
    content.vb: Public Property SecurityHeaderLayout As SecurityHeaderLayout
  overload: CoreWCF.Configuration.SecurityElementBase.SecurityHeaderLayout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.SecurityElementBase.IncludeTimestamp
  commentId: P:CoreWCF.Configuration.SecurityElementBase.IncludeTimestamp
  id: IncludeTimestamp
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: IncludeTimestamp
  nameWithType: SecurityElementBase.IncludeTimestamp
  fullName: CoreWCF.Configuration.SecurityElementBase.IncludeTimestamp
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public bool IncludeTimestamp { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IncludeTimestamp As Boolean
  overload: CoreWCF.Configuration.SecurityElementBase.IncludeTimestamp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.SecurityElementBase.AllowInsecureTransport
  commentId: P:CoreWCF.Configuration.SecurityElementBase.AllowInsecureTransport
  id: AllowInsecureTransport
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: AllowInsecureTransport
  nameWithType: SecurityElementBase.AllowInsecureTransport
  fullName: CoreWCF.Configuration.SecurityElementBase.AllowInsecureTransport
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public bool AllowInsecureTransport { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowInsecureTransport As Boolean
  overload: CoreWCF.Configuration.SecurityElementBase.AllowInsecureTransport*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.SecurityElementBase.KeyEntropyMode
  commentId: P:CoreWCF.Configuration.SecurityElementBase.KeyEntropyMode
  id: KeyEntropyMode
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: KeyEntropyMode
  nameWithType: SecurityElementBase.KeyEntropyMode
  fullName: CoreWCF.Configuration.SecurityElementBase.KeyEntropyMode
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public SecurityKeyEntropyMode KeyEntropyMode { get; set; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityKeyEntropyMode
    content.vb: Public Property KeyEntropyMode As SecurityKeyEntropyMode
  overload: CoreWCF.Configuration.SecurityElementBase.KeyEntropyMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.SecurityElementBase.IssuedTokenParameters
  commentId: P:CoreWCF.Configuration.SecurityElementBase.IssuedTokenParameters
  id: IssuedTokenParameters
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: IssuedTokenParameters
  nameWithType: SecurityElementBase.IssuedTokenParameters
  fullName: CoreWCF.Configuration.SecurityElementBase.IssuedTokenParameters
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public IssuedTokenParametersElement IssuedTokenParameters { get; }
    parameters: []
    return:
      type: CoreWCF.Configuration.IssuedTokenParametersElement
    content.vb: Public ReadOnly Property IssuedTokenParameters As IssuedTokenParametersElement
  overload: CoreWCF.Configuration.SecurityElementBase.IssuedTokenParameters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Configuration.SecurityElementBase.LocalServiceSettings
  commentId: P:CoreWCF.Configuration.SecurityElementBase.LocalServiceSettings
  id: LocalServiceSettings
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: LocalServiceSettings
  nameWithType: SecurityElementBase.LocalServiceSettings
  fullName: CoreWCF.Configuration.SecurityElementBase.LocalServiceSettings
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public LocalServiceSecuritySettingsElement LocalServiceSettings { get; }
    parameters: []
    return:
      type: CoreWCF.Configuration.LocalServiceSecuritySettingsElement
    content.vb: Public ReadOnly Property LocalServiceSettings As LocalServiceSecuritySettingsElement
  overload: CoreWCF.Configuration.SecurityElementBase.LocalServiceSettings*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Configuration.SecurityElementBase.MessageProtectionOrder
  commentId: P:CoreWCF.Configuration.SecurityElementBase.MessageProtectionOrder
  id: MessageProtectionOrder
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: MessageProtectionOrder
  nameWithType: SecurityElementBase.MessageProtectionOrder
  fullName: CoreWCF.Configuration.SecurityElementBase.MessageProtectionOrder
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public MessageProtectionOrder MessageProtectionOrder { get; set; }
    parameters: []
    return:
      type: CoreWCF.Security.MessageProtectionOrder
    content.vb: Public Property MessageProtectionOrder As MessageProtectionOrder
  overload: CoreWCF.Configuration.SecurityElementBase.MessageProtectionOrder*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.SecurityElementBase.ProtectTokens
  commentId: P:CoreWCF.Configuration.SecurityElementBase.ProtectTokens
  id: ProtectTokens
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: ProtectTokens
  nameWithType: SecurityElementBase.ProtectTokens
  fullName: CoreWCF.Configuration.SecurityElementBase.ProtectTokens
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public bool ProtectTokens { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ProtectTokens As Boolean
  overload: CoreWCF.Configuration.SecurityElementBase.ProtectTokens*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.SecurityElementBase.MessageSecurityVersion
  commentId: P:CoreWCF.Configuration.SecurityElementBase.MessageSecurityVersion
  id: MessageSecurityVersion
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: MessageSecurityVersion
  nameWithType: SecurityElementBase.MessageSecurityVersion
  fullName: CoreWCF.Configuration.SecurityElementBase.MessageSecurityVersion
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public MessageSecurityVersion MessageSecurityVersion { get; set; }
    parameters: []
    return:
      type: CoreWCF.MessageSecurityVersion
    content.vb: Public Property MessageSecurityVersion As MessageSecurityVersion
  overload: CoreWCF.Configuration.SecurityElementBase.MessageSecurityVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.SecurityElementBase.RequireSecurityContextCancellation
  commentId: P:CoreWCF.Configuration.SecurityElementBase.RequireSecurityContextCancellation
  id: RequireSecurityContextCancellation
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: RequireSecurityContextCancellation
  nameWithType: SecurityElementBase.RequireSecurityContextCancellation
  fullName: CoreWCF.Configuration.SecurityElementBase.RequireSecurityContextCancellation
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public bool RequireSecurityContextCancellation { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RequireSecurityContextCancellation As Boolean
  overload: CoreWCF.Configuration.SecurityElementBase.RequireSecurityContextCancellation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.SecurityElementBase.RequireSignatureConfirmation
  commentId: P:CoreWCF.Configuration.SecurityElementBase.RequireSignatureConfirmation
  id: RequireSignatureConfirmation
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: RequireSignatureConfirmation
  nameWithType: SecurityElementBase.RequireSignatureConfirmation
  fullName: CoreWCF.Configuration.SecurityElementBase.RequireSignatureConfirmation
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public bool RequireSignatureConfirmation { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RequireSignatureConfirmation As Boolean
  overload: CoreWCF.Configuration.SecurityElementBase.RequireSignatureConfirmation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.SecurityElementBase.CanRenewSecurityContextToken
  commentId: P:CoreWCF.Configuration.SecurityElementBase.CanRenewSecurityContextToken
  id: CanRenewSecurityContextToken
  parent: CoreWCF.Configuration.SecurityElementBase
  langs:
  - csharp
  - vb
  name: CanRenewSecurityContextToken
  nameWithType: SecurityElementBase.CanRenewSecurityContextToken
  fullName: CoreWCF.Configuration.SecurityElementBase.CanRenewSecurityContextToken
  type: Property
  source:
    path: CoreWCF.ConfigurationManager
    isExternal: true
  assemblies:
  - CoreWCF.ConfigurationManager
  namespace: CoreWCF.Configuration
  syntax:
    content: public bool CanRenewSecurityContextToken { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanRenewSecurityContextToken As Boolean
  overload: CoreWCF.Configuration.SecurityElementBase.CanRenewSecurityContextToken*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: CoreWCF.Configuration
  commentId: N:CoreWCF.Configuration
  isExternal: true
  name: CoreWCF.Configuration
  nameWithType: CoreWCF.Configuration
  fullName: CoreWCF.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CoreWCF.Configuration.ServiceModelConfigurationElement
  commentId: T:CoreWCF.Configuration.ServiceModelConfigurationElement
  parent: CoreWCF.Configuration
  isExternal: true
  name: ServiceModelConfigurationElement
  nameWithType: ServiceModelConfigurationElement
  fullName: CoreWCF.Configuration.ServiceModelConfigurationElement
- uid: CoreWCF.Configuration.ServiceModelExtensionElement
  commentId: T:CoreWCF.Configuration.ServiceModelExtensionElement
  parent: CoreWCF.Configuration
  isExternal: true
  name: ServiceModelExtensionElement
  nameWithType: ServiceModelExtensionElement
  fullName: CoreWCF.Configuration.ServiceModelExtensionElement
- uid: CoreWCF.Configuration.BindingElementExtensionElement
  commentId: T:CoreWCF.Configuration.BindingElementExtensionElement
  parent: CoreWCF.Configuration
  isExternal: true
  name: BindingElementExtensionElement
  nameWithType: BindingElementExtensionElement
  fullName: CoreWCF.Configuration.BindingElementExtensionElement
- uid: CoreWCF.Configuration.ServiceModelExtensionElement.ExtensionCollectionName
  commentId: P:CoreWCF.Configuration.ServiceModelExtensionElement.ExtensionCollectionName
  parent: CoreWCF.Configuration.ServiceModelExtensionElement
  isExternal: true
  name: ExtensionCollectionName
  nameWithType: ServiceModelExtensionElement.ExtensionCollectionName
  fullName: CoreWCF.Configuration.ServiceModelExtensionElement.ExtensionCollectionName
- uid: CoreWCF.Configuration.ServiceModelExtensionElement.ConfigurationElementName
  commentId: P:CoreWCF.Configuration.ServiceModelExtensionElement.ConfigurationElementName
  parent: CoreWCF.Configuration.ServiceModelExtensionElement
  isExternal: true
  name: ConfigurationElementName
  nameWithType: ServiceModelExtensionElement.ConfigurationElementName
  fullName: CoreWCF.Configuration.ServiceModelExtensionElement.ConfigurationElementName
- uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,{T})
  commentId: M:CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  parent: CoreWCF.Configuration.ServiceModelConfigurationElement
  definition: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  name: SetPropertyValueIfNotDefaultValue<T>(String, T)
  nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)
  fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(System.String, T)
  nameWithType.vb: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  fullName.vb: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(System.String, T)
  name.vb: SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  spec.csharp:
  - uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue<T>
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue(Of T)
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  commentId: M:CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  isExternal: true
  name: SetPropertyValueIfNotDefaultValue<T>(String, T)
  nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)
  fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(System.String, T)
  nameWithType.vb: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  fullName.vb: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(System.String, T)
  name.vb: SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  spec.csharp:
  - uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue<T>
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue(Of T)
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    fullName: CoreWCF.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Configuration.BindingElementExtensionElement.ApplyConfiguration(CoreWCF.Channels.BindingElement)
  commentId: M:CoreWCF.Configuration.BindingElementExtensionElement.ApplyConfiguration(CoreWCF.Channels.BindingElement)
  parent: CoreWCF.Configuration.BindingElementExtensionElement
  isExternal: true
  name: ApplyConfiguration(BindingElement)
  nameWithType: BindingElementExtensionElement.ApplyConfiguration(BindingElement)
  fullName: CoreWCF.Configuration.BindingElementExtensionElement.ApplyConfiguration(CoreWCF.Channels.BindingElement)
  spec.csharp:
  - uid: CoreWCF.Configuration.BindingElementExtensionElement.ApplyConfiguration(CoreWCF.Channels.BindingElement)
    name: ApplyConfiguration
    nameWithType: BindingElementExtensionElement.ApplyConfiguration
    fullName: CoreWCF.Configuration.BindingElementExtensionElement.ApplyConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingElement
    name: BindingElement
    nameWithType: BindingElement
    fullName: CoreWCF.Channels.BindingElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Configuration.BindingElementExtensionElement.ApplyConfiguration(CoreWCF.Channels.BindingElement)
    name: ApplyConfiguration
    nameWithType: BindingElementExtensionElement.ApplyConfiguration
    fullName: CoreWCF.Configuration.BindingElementExtensionElement.ApplyConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingElement
    name: BindingElement
    nameWithType: BindingElement
    fullName: CoreWCF.Channels.BindingElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Configuration.SecurityElementBase.ApplyConfiguration*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.ApplyConfiguration
  isExternal: true
  name: ApplyConfiguration
  nameWithType: SecurityElementBase.ApplyConfiguration
  fullName: CoreWCF.Configuration.SecurityElementBase.ApplyConfiguration
- uid: CoreWCF.Channels.BindingElement
  commentId: T:CoreWCF.Channels.BindingElement
  parent: CoreWCF.Channels
  isExternal: true
  name: BindingElement
  nameWithType: BindingElement
  fullName: CoreWCF.Channels.BindingElement
- uid: CoreWCF.Channels
  commentId: N:CoreWCF.Channels
  isExternal: true
  name: CoreWCF.Channels
  nameWithType: CoreWCF.Channels
  fullName: CoreWCF.Channels
- uid: CoreWCF.Configuration.ServiceModelExtensionElement.CopyFrom(CoreWCF.Configuration.ServiceModelExtensionElement)
  commentId: M:CoreWCF.Configuration.ServiceModelExtensionElement.CopyFrom(CoreWCF.Configuration.ServiceModelExtensionElement)
  parent: CoreWCF.Configuration.ServiceModelExtensionElement
  isExternal: true
  name: CopyFrom(ServiceModelExtensionElement)
  nameWithType: ServiceModelExtensionElement.CopyFrom(ServiceModelExtensionElement)
  fullName: CoreWCF.Configuration.ServiceModelExtensionElement.CopyFrom(CoreWCF.Configuration.ServiceModelExtensionElement)
  spec.csharp:
  - uid: CoreWCF.Configuration.ServiceModelExtensionElement.CopyFrom(CoreWCF.Configuration.ServiceModelExtensionElement)
    name: CopyFrom
    nameWithType: ServiceModelExtensionElement.CopyFrom
    fullName: CoreWCF.Configuration.ServiceModelExtensionElement.CopyFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Configuration.ServiceModelExtensionElement
    name: ServiceModelExtensionElement
    nameWithType: ServiceModelExtensionElement
    fullName: CoreWCF.Configuration.ServiceModelExtensionElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Configuration.ServiceModelExtensionElement.CopyFrom(CoreWCF.Configuration.ServiceModelExtensionElement)
    name: CopyFrom
    nameWithType: ServiceModelExtensionElement.CopyFrom
    fullName: CoreWCF.Configuration.ServiceModelExtensionElement.CopyFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Configuration.ServiceModelExtensionElement
    name: ServiceModelExtensionElement
    nameWithType: ServiceModelExtensionElement
    fullName: CoreWCF.Configuration.ServiceModelExtensionElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Configuration.SecurityElementBase.CopyFrom*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.CopyFrom
  isExternal: true
  name: CopyFrom
  nameWithType: SecurityElementBase.CopyFrom
  fullName: CoreWCF.Configuration.SecurityElementBase.CopyFrom
- uid: CoreWCF.Configuration.BindingElementExtensionElement.CreateBindingElement
  commentId: M:CoreWCF.Configuration.BindingElementExtensionElement.CreateBindingElement
  parent: CoreWCF.Configuration.BindingElementExtensionElement
  isExternal: true
  name: CreateBindingElement()
  nameWithType: BindingElementExtensionElement.CreateBindingElement()
  fullName: CoreWCF.Configuration.BindingElementExtensionElement.CreateBindingElement()
  spec.csharp:
  - uid: CoreWCF.Configuration.BindingElementExtensionElement.CreateBindingElement
    name: CreateBindingElement
    nameWithType: BindingElementExtensionElement.CreateBindingElement
    fullName: CoreWCF.Configuration.BindingElementExtensionElement.CreateBindingElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Configuration.BindingElementExtensionElement.CreateBindingElement
    name: CreateBindingElement
    nameWithType: BindingElementExtensionElement.CreateBindingElement
    fullName: CoreWCF.Configuration.BindingElementExtensionElement.CreateBindingElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Configuration.SecurityElementBase.CreateBindingElement*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.CreateBindingElement
  isExternal: true
  name: CreateBindingElement
  nameWithType: SecurityElementBase.CreateBindingElement
  fullName: CoreWCF.Configuration.SecurityElementBase.CreateBindingElement
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.Configuration.SecurityElementBase.AddBindingTemplate*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.AddBindingTemplate
  isExternal: true
  name: AddBindingTemplate
  nameWithType: SecurityElementBase.AddBindingTemplate
  fullName: CoreWCF.Configuration.SecurityElementBase.AddBindingTemplate
- uid: System.Collections.Generic.Dictionary{CoreWCF.Configuration.AuthenticationMode,CoreWCF.Channels.SecurityBindingElement}
  commentId: '!:System.Collections.Generic.Dictionary{CoreWCF.Configuration.AuthenticationMode,CoreWCF.Channels.SecurityBindingElement}'
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<AuthenticationMode, SecurityBindingElement>
  nameWithType: Dictionary<AuthenticationMode, SecurityBindingElement>
  fullName: System.Collections.Generic.Dictionary<CoreWCF.Configuration.AuthenticationMode, CoreWCF.Channels.SecurityBindingElement>
  nameWithType.vb: Dictionary(Of AuthenticationMode, SecurityBindingElement)
  fullName.vb: System.Collections.Generic.Dictionary(Of CoreWCF.Configuration.AuthenticationMode, CoreWCF.Channels.SecurityBindingElement)
  name.vb: Dictionary(Of AuthenticationMode, SecurityBindingElement)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.Configuration.AuthenticationMode
    name: AuthenticationMode
    nameWithType: AuthenticationMode
    fullName: CoreWCF.Configuration.AuthenticationMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.Channels.SecurityBindingElement
    name: SecurityBindingElement
    nameWithType: SecurityBindingElement
    fullName: CoreWCF.Channels.SecurityBindingElement
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.Configuration.AuthenticationMode
    name: AuthenticationMode
    nameWithType: AuthenticationMode
    fullName: CoreWCF.Configuration.AuthenticationMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CoreWCF.Channels.SecurityBindingElement
    name: SecurityBindingElement
    nameWithType: SecurityBindingElement
    fullName: CoreWCF.Channels.SecurityBindingElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Configuration.AuthenticationMode
  commentId: T:CoreWCF.Configuration.AuthenticationMode
  parent: CoreWCF.Configuration
  isExternal: true
  name: AuthenticationMode
  nameWithType: AuthenticationMode
  fullName: CoreWCF.Configuration.AuthenticationMode
- uid: System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: System.Collections.Generic.Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: System.Collections.Generic.Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Configuration.SecurityElementBase.AddBindingTemplates*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.AddBindingTemplates
  isExternal: true
  name: AddBindingTemplates
  nameWithType: SecurityElementBase.AddBindingTemplates
  fullName: CoreWCF.Configuration.SecurityElementBase.AddBindingTemplates
- uid: CoreWCF.Configuration.SecurityElementBase.InitializeNestedTokenParameterSettings*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.InitializeNestedTokenParameterSettings
  isExternal: true
  name: InitializeNestedTokenParameterSettings
  nameWithType: SecurityElementBase.InitializeNestedTokenParameterSettings
  fullName: CoreWCF.Configuration.SecurityElementBase.InitializeNestedTokenParameterSettings
- uid: CoreWCF.Security.Tokens.SecurityTokenParameters
  commentId: T:CoreWCF.Security.Tokens.SecurityTokenParameters
  parent: CoreWCF.Security.Tokens
  isExternal: true
  name: SecurityTokenParameters
  nameWithType: SecurityTokenParameters
  fullName: CoreWCF.Security.Tokens.SecurityTokenParameters
- uid: CoreWCF.Security.Tokens
  commentId: N:CoreWCF.Security.Tokens
  isExternal: true
  name: CoreWCF.Security.Tokens
  nameWithType: CoreWCF.Security.Tokens
  fullName: CoreWCF.Security.Tokens
- uid: CoreWCF.Configuration.BindingElementExtensionElement.InitializeFrom(CoreWCF.Channels.BindingElement)
  commentId: M:CoreWCF.Configuration.BindingElementExtensionElement.InitializeFrom(CoreWCF.Channels.BindingElement)
  parent: CoreWCF.Configuration.BindingElementExtensionElement
  isExternal: true
  name: InitializeFrom(BindingElement)
  nameWithType: BindingElementExtensionElement.InitializeFrom(BindingElement)
  fullName: CoreWCF.Configuration.BindingElementExtensionElement.InitializeFrom(CoreWCF.Channels.BindingElement)
  spec.csharp:
  - uid: CoreWCF.Configuration.BindingElementExtensionElement.InitializeFrom(CoreWCF.Channels.BindingElement)
    name: InitializeFrom
    nameWithType: BindingElementExtensionElement.InitializeFrom
    fullName: CoreWCF.Configuration.BindingElementExtensionElement.InitializeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingElement
    name: BindingElement
    nameWithType: BindingElement
    fullName: CoreWCF.Channels.BindingElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CoreWCF.Configuration.BindingElementExtensionElement.InitializeFrom(CoreWCF.Channels.BindingElement)
    name: InitializeFrom
    nameWithType: BindingElementExtensionElement.InitializeFrom
    fullName: CoreWCF.Configuration.BindingElementExtensionElement.InitializeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreWCF.Channels.BindingElement
    name: BindingElement
    nameWithType: BindingElement
    fullName: CoreWCF.Channels.BindingElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Configuration.SecurityElementBase.InitializeFrom*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.InitializeFrom
  isExternal: true
  name: InitializeFrom
  nameWithType: SecurityElementBase.InitializeFrom
  fullName: CoreWCF.Configuration.SecurityElementBase.InitializeFrom
- uid: CoreWCF.Configuration.SecurityElementBase.SerializeToXmlElement*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.SerializeToXmlElement
  isExternal: true
  name: SerializeToXmlElement
  nameWithType: SecurityElementBase.SerializeToXmlElement
  fullName: CoreWCF.Configuration.SecurityElementBase.SerializeToXmlElement
- uid: System.Xml.XmlWriter
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CoreWCF.Configuration.SecurityElementBase.SerializeElement*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.SerializeElement
  isExternal: true
  name: SerializeElement
  nameWithType: SecurityElementBase.SerializeElement
  fullName: CoreWCF.Configuration.SecurityElementBase.SerializeElement
- uid: CoreWCF.Configuration.SecurityElementBase.Unmerge*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.Unmerge
  isExternal: true
  name: Unmerge
  nameWithType: SecurityElementBase.Unmerge
  fullName: CoreWCF.Configuration.SecurityElementBase.Unmerge
- uid: System.Configuration.ConfigurationElement
  isExternal: true
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement
- uid: System.Configuration.ConfigurationSaveMode
  isExternal: true
  name: ConfigurationSaveMode
  nameWithType: ConfigurationSaveMode
  fullName: System.Configuration.ConfigurationSaveMode
- uid: CoreWCF.Configuration.SecurityElementBase.DefaultAlgorithmSuite*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.DefaultAlgorithmSuite
  isExternal: true
  name: DefaultAlgorithmSuite
  nameWithType: SecurityElementBase.DefaultAlgorithmSuite
  fullName: CoreWCF.Configuration.SecurityElementBase.DefaultAlgorithmSuite
- uid: CoreWCF.Security.SecurityAlgorithmSuite
  commentId: T:CoreWCF.Security.SecurityAlgorithmSuite
  parent: CoreWCF.Security
  isExternal: true
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite
  fullName: CoreWCF.Security.SecurityAlgorithmSuite
- uid: CoreWCF.Security
  commentId: N:CoreWCF.Security
  isExternal: true
  name: CoreWCF.Security
  nameWithType: CoreWCF.Security
  fullName: CoreWCF.Security
- uid: CoreWCF.Configuration.SecurityElementBase.EnableUnsecuredResponse*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.EnableUnsecuredResponse
  isExternal: true
  name: EnableUnsecuredResponse
  nameWithType: SecurityElementBase.EnableUnsecuredResponse
  fullName: CoreWCF.Configuration.SecurityElementBase.EnableUnsecuredResponse
- uid: CoreWCF.Configuration.SecurityElementBase.AuthenticationMode*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.AuthenticationMode
  isExternal: true
  name: AuthenticationMode
  nameWithType: SecurityElementBase.AuthenticationMode
  fullName: CoreWCF.Configuration.SecurityElementBase.AuthenticationMode
- uid: CoreWCF.Configuration.BindingElementExtensionElement.BindingElementType
  commentId: P:CoreWCF.Configuration.BindingElementExtensionElement.BindingElementType
  parent: CoreWCF.Configuration.BindingElementExtensionElement
  isExternal: true
  name: BindingElementType
  nameWithType: BindingElementExtensionElement.BindingElementType
  fullName: CoreWCF.Configuration.BindingElementExtensionElement.BindingElementType
- uid: CoreWCF.Configuration.SecurityElementBase.BindingElementType*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.BindingElementType
  isExternal: true
  name: BindingElementType
  nameWithType: SecurityElementBase.BindingElementType
  fullName: CoreWCF.Configuration.SecurityElementBase.BindingElementType
- uid: System.Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: CoreWCF.Configuration.SecurityElementBase.RequireDerivedKeys*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.RequireDerivedKeys
  isExternal: true
  name: RequireDerivedKeys
  nameWithType: SecurityElementBase.RequireDerivedKeys
  fullName: CoreWCF.Configuration.SecurityElementBase.RequireDerivedKeys
- uid: CoreWCF.Configuration.SecurityElementBase.SecurityHeaderLayout*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.SecurityHeaderLayout
  isExternal: true
  name: SecurityHeaderLayout
  nameWithType: SecurityElementBase.SecurityHeaderLayout
  fullName: CoreWCF.Configuration.SecurityElementBase.SecurityHeaderLayout
- uid: CoreWCF.Channels.SecurityHeaderLayout
  commentId: T:CoreWCF.Channels.SecurityHeaderLayout
  parent: CoreWCF.Channels
  isExternal: true
  name: SecurityHeaderLayout
  nameWithType: SecurityHeaderLayout
  fullName: CoreWCF.Channels.SecurityHeaderLayout
- uid: CoreWCF.Configuration.SecurityElementBase.IncludeTimestamp*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.IncludeTimestamp
  isExternal: true
  name: IncludeTimestamp
  nameWithType: SecurityElementBase.IncludeTimestamp
  fullName: CoreWCF.Configuration.SecurityElementBase.IncludeTimestamp
- uid: CoreWCF.Configuration.SecurityElementBase.AllowInsecureTransport*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.AllowInsecureTransport
  isExternal: true
  name: AllowInsecureTransport
  nameWithType: SecurityElementBase.AllowInsecureTransport
  fullName: CoreWCF.Configuration.SecurityElementBase.AllowInsecureTransport
- uid: CoreWCF.Configuration.SecurityElementBase.KeyEntropyMode*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.KeyEntropyMode
  isExternal: true
  name: KeyEntropyMode
  nameWithType: SecurityElementBase.KeyEntropyMode
  fullName: CoreWCF.Configuration.SecurityElementBase.KeyEntropyMode
- uid: CoreWCF.Security.SecurityKeyEntropyMode
  commentId: T:CoreWCF.Security.SecurityKeyEntropyMode
  parent: CoreWCF.Security
  isExternal: true
  name: SecurityKeyEntropyMode
  nameWithType: SecurityKeyEntropyMode
  fullName: CoreWCF.Security.SecurityKeyEntropyMode
- uid: CoreWCF.Configuration.SecurityElementBase.IssuedTokenParameters*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.IssuedTokenParameters
  isExternal: true
  name: IssuedTokenParameters
  nameWithType: SecurityElementBase.IssuedTokenParameters
  fullName: CoreWCF.Configuration.SecurityElementBase.IssuedTokenParameters
- uid: CoreWCF.Configuration.IssuedTokenParametersElement
  commentId: T:CoreWCF.Configuration.IssuedTokenParametersElement
  parent: CoreWCF.Configuration
  isExternal: true
  name: IssuedTokenParametersElement
  nameWithType: IssuedTokenParametersElement
  fullName: CoreWCF.Configuration.IssuedTokenParametersElement
- uid: CoreWCF.Configuration.SecurityElementBase.LocalServiceSettings*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.LocalServiceSettings
  isExternal: true
  name: LocalServiceSettings
  nameWithType: SecurityElementBase.LocalServiceSettings
  fullName: CoreWCF.Configuration.SecurityElementBase.LocalServiceSettings
- uid: CoreWCF.Configuration.LocalServiceSecuritySettingsElement
  commentId: T:CoreWCF.Configuration.LocalServiceSecuritySettingsElement
  parent: CoreWCF.Configuration
  isExternal: true
  name: LocalServiceSecuritySettingsElement
  nameWithType: LocalServiceSecuritySettingsElement
  fullName: CoreWCF.Configuration.LocalServiceSecuritySettingsElement
- uid: CoreWCF.Configuration.SecurityElementBase.MessageProtectionOrder*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.MessageProtectionOrder
  isExternal: true
  name: MessageProtectionOrder
  nameWithType: SecurityElementBase.MessageProtectionOrder
  fullName: CoreWCF.Configuration.SecurityElementBase.MessageProtectionOrder
- uid: CoreWCF.Security.MessageProtectionOrder
  commentId: T:CoreWCF.Security.MessageProtectionOrder
  parent: CoreWCF.Security
  isExternal: true
  name: MessageProtectionOrder
  nameWithType: MessageProtectionOrder
  fullName: CoreWCF.Security.MessageProtectionOrder
- uid: CoreWCF.Configuration.SecurityElementBase.ProtectTokens*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.ProtectTokens
  isExternal: true
  name: ProtectTokens
  nameWithType: SecurityElementBase.ProtectTokens
  fullName: CoreWCF.Configuration.SecurityElementBase.ProtectTokens
- uid: CoreWCF.Configuration.SecurityElementBase.MessageSecurityVersion*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.MessageSecurityVersion
  isExternal: true
  name: MessageSecurityVersion
  nameWithType: SecurityElementBase.MessageSecurityVersion
  fullName: CoreWCF.Configuration.SecurityElementBase.MessageSecurityVersion
- uid: CoreWCF.MessageSecurityVersion
  commentId: T:CoreWCF.MessageSecurityVersion
  parent: CoreWCF
  isExternal: true
  name: MessageSecurityVersion
  nameWithType: MessageSecurityVersion
  fullName: CoreWCF.MessageSecurityVersion
- uid: CoreWCF
  commentId: N:CoreWCF
  isExternal: true
  name: CoreWCF
  nameWithType: CoreWCF
  fullName: CoreWCF
- uid: CoreWCF.Configuration.SecurityElementBase.RequireSecurityContextCancellation*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.RequireSecurityContextCancellation
  isExternal: true
  name: RequireSecurityContextCancellation
  nameWithType: SecurityElementBase.RequireSecurityContextCancellation
  fullName: CoreWCF.Configuration.SecurityElementBase.RequireSecurityContextCancellation
- uid: CoreWCF.Configuration.SecurityElementBase.RequireSignatureConfirmation*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.RequireSignatureConfirmation
  isExternal: true
  name: RequireSignatureConfirmation
  nameWithType: SecurityElementBase.RequireSignatureConfirmation
  fullName: CoreWCF.Configuration.SecurityElementBase.RequireSignatureConfirmation
- uid: CoreWCF.Configuration.SecurityElementBase.CanRenewSecurityContextToken*
  commentId: Overload:CoreWCF.Configuration.SecurityElementBase.CanRenewSecurityContextToken
  isExternal: true
  name: CanRenewSecurityContextToken
  nameWithType: SecurityElementBase.CanRenewSecurityContextToken
  fullName: CoreWCF.Configuration.SecurityElementBase.CanRenewSecurityContextToken
