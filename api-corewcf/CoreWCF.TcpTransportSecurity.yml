### YamlMime:ManagedReference
items:
- uid: CoreWCF.TcpTransportSecurity
  commentId: T:CoreWCF.TcpTransportSecurity
  id: TcpTransportSecurity
  parent: CoreWCF
  children:
  - CoreWCF.TcpTransportSecurity.#ctor
  - CoreWCF.TcpTransportSecurity.ClientCredentialType
  - CoreWCF.TcpTransportSecurity.ExtendedProtectionPolicy
  - CoreWCF.TcpTransportSecurity.ProtectionLevel
  - CoreWCF.TcpTransportSecurity.SslProtocols
  langs:
  - csharp
  - vb
  name: TcpTransportSecurity
  nameWithType: TcpTransportSecurity
  fullName: CoreWCF.TcpTransportSecurity
  type: Class
  source:
    path: CoreWCF.NetTcp
    isExternal: true
  assemblies:
  - CoreWCF.NetTcp
  namespace: CoreWCF
  summary: Provides properties that control authentication parameters and protection level for the TCP transport.
  remarks: "This class is used by &lt;xref:CoreWCF.NetTcpSecurity.Transport%2A> to set the transport-level security settings for a binding.  \n\n"
  syntax:
    content: 'public sealed class TcpTransportSecurity : Object'
    content.vb: >-
      Public NotInheritable Class TcpTransportSecurity
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: CoreWCF.TcpTransportSecurity.#ctor
  commentId: M:CoreWCF.TcpTransportSecurity.#ctor
  id: '#ctor'
  parent: CoreWCF.TcpTransportSecurity
  langs:
  - csharp
  - vb
  name: TcpTransportSecurity()
  nameWithType: TcpTransportSecurity.TcpTransportSecurity()
  fullName: CoreWCF.TcpTransportSecurity.TcpTransportSecurity()
  type: Constructor
  source:
    path: CoreWCF.NetTcp
    isExternal: true
  assemblies:
  - CoreWCF.NetTcp
  namespace: CoreWCF
  syntax:
    content: public TcpTransportSecurity()
    content.vb: Public Sub New
  overload: CoreWCF.TcpTransportSecurity.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.TcpTransportSecurity.ClientCredentialType
  commentId: P:CoreWCF.TcpTransportSecurity.ClientCredentialType
  id: ClientCredentialType
  parent: CoreWCF.TcpTransportSecurity
  langs:
  - csharp
  - vb
  name: ClientCredentialType
  nameWithType: TcpTransportSecurity.ClientCredentialType
  fullName: CoreWCF.TcpTransportSecurity.ClientCredentialType
  type: Property
  source:
    path: CoreWCF.NetTcp
    isExternal: true
  assemblies:
  - CoreWCF.NetTcp
  namespace: CoreWCF
  syntax:
    content: public TcpClientCredentialType ClientCredentialType { get; set; }
    parameters: []
    return:
      type: CoreWCF.TcpClientCredentialType
    content.vb: Public Property ClientCredentialType As TcpClientCredentialType
  overload: CoreWCF.TcpTransportSecurity.ClientCredentialType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.TcpTransportSecurity.ProtectionLevel
  commentId: P:CoreWCF.TcpTransportSecurity.ProtectionLevel
  id: ProtectionLevel
  parent: CoreWCF.TcpTransportSecurity
  langs:
  - csharp
  - vb
  name: ProtectionLevel
  nameWithType: TcpTransportSecurity.ProtectionLevel
  fullName: CoreWCF.TcpTransportSecurity.ProtectionLevel
  type: Property
  source:
    path: CoreWCF.NetTcp
    isExternal: true
  assemblies:
  - CoreWCF.NetTcp
  namespace: CoreWCF
  syntax:
    content: public ProtectionLevel ProtectionLevel { get; set; }
    parameters: []
    return:
      type: System.Net.Security.ProtectionLevel
    content.vb: Public Property ProtectionLevel As ProtectionLevel
  overload: CoreWCF.TcpTransportSecurity.ProtectionLevel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.TcpTransportSecurity.ExtendedProtectionPolicy
  commentId: P:CoreWCF.TcpTransportSecurity.ExtendedProtectionPolicy
  id: ExtendedProtectionPolicy
  parent: CoreWCF.TcpTransportSecurity
  langs:
  - csharp
  - vb
  name: ExtendedProtectionPolicy
  nameWithType: TcpTransportSecurity.ExtendedProtectionPolicy
  fullName: CoreWCF.TcpTransportSecurity.ExtendedProtectionPolicy
  type: Property
  source:
    path: CoreWCF.NetTcp
    isExternal: true
  assemblies:
  - CoreWCF.NetTcp
  namespace: CoreWCF
  syntax:
    content: public ExtendedProtectionPolicy ExtendedProtectionPolicy { get; set; }
    parameters: []
    return:
      type: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
    content.vb: Public Property ExtendedProtectionPolicy As ExtendedProtectionPolicy
  overload: CoreWCF.TcpTransportSecurity.ExtendedProtectionPolicy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.TcpTransportSecurity.SslProtocols
  commentId: P:CoreWCF.TcpTransportSecurity.SslProtocols
  id: SslProtocols
  parent: CoreWCF.TcpTransportSecurity
  langs:
  - csharp
  - vb
  name: SslProtocols
  nameWithType: TcpTransportSecurity.SslProtocols
  fullName: CoreWCF.TcpTransportSecurity.SslProtocols
  type: Property
  source:
    path: CoreWCF.NetTcp
    isExternal: true
  assemblies:
  - CoreWCF.NetTcp
  namespace: CoreWCF
  syntax:
    content: public SslProtocols SslProtocols { get; set; }
    parameters: []
    return:
      type: System.Security.Authentication.SslProtocols
    content.vb: Public Property SslProtocols As SslProtocols
  overload: CoreWCF.TcpTransportSecurity.SslProtocols*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: CoreWCF
  commentId: N:CoreWCF
  isExternal: true
  name: CoreWCF
  nameWithType: CoreWCF
  fullName: CoreWCF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.TcpTransportSecurity.#ctor*
  commentId: Overload:CoreWCF.TcpTransportSecurity.#ctor
  isExternal: true
  name: TcpTransportSecurity
  nameWithType: TcpTransportSecurity.TcpTransportSecurity
  fullName: CoreWCF.TcpTransportSecurity.TcpTransportSecurity
- uid: CoreWCF.TcpTransportSecurity.ClientCredentialType*
  commentId: Overload:CoreWCF.TcpTransportSecurity.ClientCredentialType
  isExternal: true
  name: ClientCredentialType
  nameWithType: TcpTransportSecurity.ClientCredentialType
  fullName: CoreWCF.TcpTransportSecurity.ClientCredentialType
- uid: CoreWCF.TcpClientCredentialType
  commentId: T:CoreWCF.TcpClientCredentialType
  parent: CoreWCF
  isExternal: true
  name: TcpClientCredentialType
  nameWithType: TcpClientCredentialType
  fullName: CoreWCF.TcpClientCredentialType
- uid: CoreWCF.TcpTransportSecurity.ProtectionLevel*
  commentId: Overload:CoreWCF.TcpTransportSecurity.ProtectionLevel
  isExternal: true
  name: ProtectionLevel
  nameWithType: TcpTransportSecurity.ProtectionLevel
  fullName: CoreWCF.TcpTransportSecurity.ProtectionLevel
- uid: System.Net.Security.ProtectionLevel
  isExternal: true
  name: ProtectionLevel
  nameWithType: ProtectionLevel
  fullName: System.Net.Security.ProtectionLevel
- uid: CoreWCF.TcpTransportSecurity.ExtendedProtectionPolicy*
  commentId: Overload:CoreWCF.TcpTransportSecurity.ExtendedProtectionPolicy
  isExternal: true
  name: ExtendedProtectionPolicy
  nameWithType: TcpTransportSecurity.ExtendedProtectionPolicy
  fullName: CoreWCF.TcpTransportSecurity.ExtendedProtectionPolicy
- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  isExternal: true
  name: ExtendedProtectionPolicy
  nameWithType: ExtendedProtectionPolicy
  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
- uid: CoreWCF.TcpTransportSecurity.SslProtocols*
  commentId: Overload:CoreWCF.TcpTransportSecurity.SslProtocols
  isExternal: true
  name: SslProtocols
  nameWithType: TcpTransportSecurity.SslProtocols
  fullName: CoreWCF.TcpTransportSecurity.SslProtocols
- uid: System.Security.Authentication.SslProtocols
  isExternal: true
  name: SslProtocols
  nameWithType: SslProtocols
  fullName: System.Security.Authentication.SslProtocols
