### YamlMime:ManagedReference
items:
- uid: CoreWCF.Security.SecurityProtocolFactory
  commentId: T:CoreWCF.Security.SecurityProtocolFactory
  id: SecurityProtocolFactory
  parent: CoreWCF.Security
  children:
  - CoreWCF.Security.SecurityProtocolFactory.#ctor
  - CoreWCF.Security.SecurityProtocolFactory.ActAsInitiator
  - CoreWCF.Security.SecurityProtocolFactory.AddTimestamp
  - CoreWCF.Security.SecurityProtocolFactory.ChannelSupportingTokenAuthenticatorSpecification
  - CoreWCF.Security.SecurityProtocolFactory.CreateListenerSecurityState
  - CoreWCF.Security.SecurityProtocolFactory.CreateRecipientSecurityTokenRequirement
  - CoreWCF.Security.SecurityProtocolFactory.DefaultCloseTimeout
  - CoreWCF.Security.SecurityProtocolFactory.DefaultOpenTimeout
  - CoreWCF.Security.SecurityProtocolFactory.DetectReplays
  - CoreWCF.Security.SecurityProtocolFactory.ExtendedProtectionPolicy
  - CoreWCF.Security.SecurityProtocolFactory.GetIdentityOfSelf
  - CoreWCF.Security.SecurityProtocolFactory.GetProperty``1
  - CoreWCF.Security.SecurityProtocolFactory.IncomingAlgorithmSuite
  - CoreWCF.Security.SecurityProtocolFactory.ListenUri
  - CoreWCF.Security.SecurityProtocolFactory.MaxCachedNonces
  - CoreWCF.Security.SecurityProtocolFactory.MaxClockSkew
  - CoreWCF.Security.SecurityProtocolFactory.NonceCache
  - CoreWCF.Security.SecurityProtocolFactory.OnAbort
  - CoreWCF.Security.SecurityProtocolFactory.OnClose(System.TimeSpan)
  - CoreWCF.Security.SecurityProtocolFactory.OnCloseAsync(System.TimeSpan)
  - CoreWCF.Security.SecurityProtocolFactory.OnClosed
  - CoreWCF.Security.SecurityProtocolFactory.OnClosing
  - CoreWCF.Security.SecurityProtocolFactory.OnFaulted
  - CoreWCF.Security.SecurityProtocolFactory.OnOpenAsync(System.TimeSpan)
  - CoreWCF.Security.SecurityProtocolFactory.OnOpened
  - CoreWCF.Security.SecurityProtocolFactory.OnOpening
  - CoreWCF.Security.SecurityProtocolFactory.OpenAsync(System.TimeSpan)
  - CoreWCF.Security.SecurityProtocolFactory.OutgoingAlgorithmSuite
  - CoreWCF.Security.SecurityProtocolFactory.PrivacyNoticeUri
  - CoreWCF.Security.SecurityProtocolFactory.PrivacyNoticeVersion
  - CoreWCF.Security.SecurityProtocolFactory.ReplayWindow
  - CoreWCF.Security.SecurityProtocolFactory.ScopedSupportingTokenAuthenticatorSpecification
  - CoreWCF.Security.SecurityProtocolFactory.SecurityBindingElement
  - CoreWCF.Security.SecurityProtocolFactory.SecurityHeaderLayout
  - CoreWCF.Security.SecurityProtocolFactory.StreamBufferManager
  - CoreWCF.Security.SecurityProtocolFactory.SupportsDuplex
  - CoreWCF.Security.SecurityProtocolFactory.SupportsReplayDetection
  - CoreWCF.Security.SecurityProtocolFactory.SupportsRequestReply
  - CoreWCF.Security.SecurityProtocolFactory.TimestampValidityDuration
  langs:
  - csharp
  - vb
  name: SecurityProtocolFactory
  nameWithType: SecurityProtocolFactory
  fullName: CoreWCF.Security.SecurityProtocolFactory
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: 'public abstract class SecurityProtocolFactory : Object'
    content.vb: >-
      Public MustInherit Class SecurityProtocolFactory
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: CoreWCF.Security.SecurityProtocolFactory.#ctor
  commentId: M:CoreWCF.Security.SecurityProtocolFactory.#ctor
  id: '#ctor'
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: SecurityProtocolFactory()
  nameWithType: SecurityProtocolFactory.SecurityProtocolFactory()
  fullName: CoreWCF.Security.SecurityProtocolFactory.SecurityProtocolFactory()
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: protected SecurityProtocolFactory()
    content.vb: Protected Sub New
  overload: CoreWCF.Security.SecurityProtocolFactory.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CoreWCF.Security.SecurityProtocolFactory.OnAbort
  commentId: M:CoreWCF.Security.SecurityProtocolFactory.OnAbort
  id: OnAbort
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: OnAbort()
  nameWithType: SecurityProtocolFactory.OnAbort()
  fullName: CoreWCF.Security.SecurityProtocolFactory.OnAbort()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public virtual void OnAbort()
    content.vb: Public Overridable Sub OnAbort
  overload: CoreWCF.Security.SecurityProtocolFactory.OnAbort*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.Security.SecurityProtocolFactory.OnClose(System.TimeSpan)
  commentId: M:CoreWCF.Security.SecurityProtocolFactory.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: OnClose(TimeSpan)
  nameWithType: SecurityProtocolFactory.OnClose(TimeSpan)
  fullName: CoreWCF.Security.SecurityProtocolFactory.OnClose(System.TimeSpan)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public virtual void OnClose(TimeSpan timeout)
    parameters:
    - id: timeout
      type: System.TimeSpan
    content.vb: Public Overridable Sub OnClose(timeout As TimeSpan)
  overload: CoreWCF.Security.SecurityProtocolFactory.OnClose*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.Security.SecurityProtocolFactory.CreateListenerSecurityState
  commentId: M:CoreWCF.Security.SecurityProtocolFactory.CreateListenerSecurityState
  id: CreateListenerSecurityState
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: CreateListenerSecurityState()
  nameWithType: SecurityProtocolFactory.CreateListenerSecurityState()
  fullName: CoreWCF.Security.SecurityProtocolFactory.CreateListenerSecurityState()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public virtual object CreateListenerSecurityState()
    return:
      type: System.Object
    content.vb: Public Overridable Function CreateListenerSecurityState As Object
  overload: CoreWCF.Security.SecurityProtocolFactory.CreateListenerSecurityState*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.Security.SecurityProtocolFactory.GetIdentityOfSelf
  commentId: M:CoreWCF.Security.SecurityProtocolFactory.GetIdentityOfSelf
  id: GetIdentityOfSelf
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: GetIdentityOfSelf()
  nameWithType: SecurityProtocolFactory.GetIdentityOfSelf()
  fullName: CoreWCF.Security.SecurityProtocolFactory.GetIdentityOfSelf()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public virtual EndpointIdentity GetIdentityOfSelf()
    return:
      type: CoreWCF.EndpointIdentity
    content.vb: Public Overridable Function GetIdentityOfSelf As
  overload: CoreWCF.Security.SecurityProtocolFactory.GetIdentityOfSelf*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.Security.SecurityProtocolFactory.GetProperty``1
  commentId: M:CoreWCF.Security.SecurityProtocolFactory.GetProperty``1
  id: GetProperty``1
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: GetProperty<T>()
  nameWithType: SecurityProtocolFactory.GetProperty<T>()
  fullName: CoreWCF.Security.SecurityProtocolFactory.GetProperty<T>()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public virtual T GetProperty<T>()
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Overridable Function GetProperty(Of T) As T
  overload: CoreWCF.Security.SecurityProtocolFactory.GetProperty*
  nameWithType.vb: SecurityProtocolFactory.GetProperty(Of T)()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: CoreWCF.Security.SecurityProtocolFactory.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
- uid: CoreWCF.Security.SecurityProtocolFactory.CreateRecipientSecurityTokenRequirement
  commentId: M:CoreWCF.Security.SecurityProtocolFactory.CreateRecipientSecurityTokenRequirement
  id: CreateRecipientSecurityTokenRequirement
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: CreateRecipientSecurityTokenRequirement()
  nameWithType: SecurityProtocolFactory.CreateRecipientSecurityTokenRequirement()
  fullName: CoreWCF.Security.SecurityProtocolFactory.CreateRecipientSecurityTokenRequirement()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: protected RecipientServiceModelSecurityTokenRequirement CreateRecipientSecurityTokenRequirement()
    return:
      type: CoreWCF.Security.Tokens.RecipientServiceModelSecurityTokenRequirement
    content.vb: Protected Function CreateRecipientSecurityTokenRequirement As RecipientServiceModelSecurityTokenRequirement
  overload: CoreWCF.Security.SecurityProtocolFactory.CreateRecipientSecurityTokenRequirement*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CoreWCF.Security.SecurityProtocolFactory.OpenAsync(System.TimeSpan)
  commentId: M:CoreWCF.Security.SecurityProtocolFactory.OpenAsync(System.TimeSpan)
  id: OpenAsync(System.TimeSpan)
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: OpenAsync(TimeSpan)
  nameWithType: SecurityProtocolFactory.OpenAsync(TimeSpan)
  fullName: CoreWCF.Security.SecurityProtocolFactory.OpenAsync(System.TimeSpan)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public Task OpenAsync(TimeSpan timeout)
    parameters:
    - id: timeout
      type: System.TimeSpan
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function OpenAsync(timeout As TimeSpan) As Task
  overload: CoreWCF.Security.SecurityProtocolFactory.OpenAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecurityProtocolFactory.OnOpenAsync(System.TimeSpan)
  commentId: M:CoreWCF.Security.SecurityProtocolFactory.OnOpenAsync(System.TimeSpan)
  id: OnOpenAsync(System.TimeSpan)
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: OnOpenAsync(TimeSpan)
  nameWithType: SecurityProtocolFactory.OnOpenAsync(TimeSpan)
  fullName: CoreWCF.Security.SecurityProtocolFactory.OnOpenAsync(System.TimeSpan)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public virtual Task OnOpenAsync(TimeSpan timeout)
    parameters:
    - id: timeout
      type: System.TimeSpan
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function OnOpenAsync(timeout As TimeSpan) As Task
  overload: CoreWCF.Security.SecurityProtocolFactory.OnOpenAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.Security.SecurityProtocolFactory.OnCloseAsync(System.TimeSpan)
  commentId: M:CoreWCF.Security.SecurityProtocolFactory.OnCloseAsync(System.TimeSpan)
  id: OnCloseAsync(System.TimeSpan)
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: OnCloseAsync(TimeSpan)
  nameWithType: SecurityProtocolFactory.OnCloseAsync(TimeSpan)
  fullName: CoreWCF.Security.SecurityProtocolFactory.OnCloseAsync(System.TimeSpan)
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public virtual Task OnCloseAsync(TimeSpan timeout)
    parameters:
    - id: timeout
      type: System.TimeSpan
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function OnCloseAsync(timeout As TimeSpan) As Task
  overload: CoreWCF.Security.SecurityProtocolFactory.OnCloseAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CoreWCF.Security.SecurityProtocolFactory.OnClosed
  commentId: M:CoreWCF.Security.SecurityProtocolFactory.OnClosed
  id: OnClosed
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: OnClosed()
  nameWithType: SecurityProtocolFactory.OnClosed()
  fullName: CoreWCF.Security.SecurityProtocolFactory.OnClosed()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public void OnClosed()
    content.vb: Public Sub OnClosed
  overload: CoreWCF.Security.SecurityProtocolFactory.OnClosed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecurityProtocolFactory.OnClosing
  commentId: M:CoreWCF.Security.SecurityProtocolFactory.OnClosing
  id: OnClosing
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: OnClosing()
  nameWithType: SecurityProtocolFactory.OnClosing()
  fullName: CoreWCF.Security.SecurityProtocolFactory.OnClosing()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public void OnClosing()
    content.vb: Public Sub OnClosing
  overload: CoreWCF.Security.SecurityProtocolFactory.OnClosing*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecurityProtocolFactory.OnFaulted
  commentId: M:CoreWCF.Security.SecurityProtocolFactory.OnFaulted
  id: OnFaulted
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: OnFaulted()
  nameWithType: SecurityProtocolFactory.OnFaulted()
  fullName: CoreWCF.Security.SecurityProtocolFactory.OnFaulted()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public void OnFaulted()
    content.vb: Public Sub OnFaulted
  overload: CoreWCF.Security.SecurityProtocolFactory.OnFaulted*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecurityProtocolFactory.OnOpened
  commentId: M:CoreWCF.Security.SecurityProtocolFactory.OnOpened
  id: OnOpened
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: OnOpened()
  nameWithType: SecurityProtocolFactory.OnOpened()
  fullName: CoreWCF.Security.SecurityProtocolFactory.OnOpened()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public void OnOpened()
    content.vb: Public Sub OnOpened
  overload: CoreWCF.Security.SecurityProtocolFactory.OnOpened*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecurityProtocolFactory.OnOpening
  commentId: M:CoreWCF.Security.SecurityProtocolFactory.OnOpening
  id: OnOpening
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: OnOpening()
  nameWithType: SecurityProtocolFactory.OnOpening()
  fullName: CoreWCF.Security.SecurityProtocolFactory.OnOpening()
  type: Method
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public void OnOpening()
    content.vb: Public Sub OnOpening
  overload: CoreWCF.Security.SecurityProtocolFactory.OnOpening*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecurityProtocolFactory.ActAsInitiator
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.ActAsInitiator
  id: ActAsInitiator
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: ActAsInitiator
  nameWithType: SecurityProtocolFactory.ActAsInitiator
  fullName: CoreWCF.Security.SecurityProtocolFactory.ActAsInitiator
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public bool ActAsInitiator { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ActAsInitiator As Boolean
  overload: CoreWCF.Security.SecurityProtocolFactory.ActAsInitiator*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.SecurityProtocolFactory.StreamBufferManager
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.StreamBufferManager
  id: StreamBufferManager
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: StreamBufferManager
  nameWithType: SecurityProtocolFactory.StreamBufferManager
  fullName: CoreWCF.Security.SecurityProtocolFactory.StreamBufferManager
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public BufferManager StreamBufferManager { get; set; }
    parameters: []
    return:
      type: CoreWCF.Channels.BufferManager
    content.vb: Public Property StreamBufferManager As BufferManager
  overload: CoreWCF.Security.SecurityProtocolFactory.StreamBufferManager*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecurityProtocolFactory.ExtendedProtectionPolicy
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.ExtendedProtectionPolicy
  id: ExtendedProtectionPolicy
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: ExtendedProtectionPolicy
  nameWithType: SecurityProtocolFactory.ExtendedProtectionPolicy
  fullName: CoreWCF.Security.SecurityProtocolFactory.ExtendedProtectionPolicy
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public ExtendedProtectionPolicy ExtendedProtectionPolicy { get; set; }
    parameters: []
    return:
      type: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
    content.vb: Public Property ExtendedProtectionPolicy As ExtendedProtectionPolicy
  overload: CoreWCF.Security.SecurityProtocolFactory.ExtendedProtectionPolicy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecurityProtocolFactory.AddTimestamp
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.AddTimestamp
  id: AddTimestamp
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: AddTimestamp
  nameWithType: SecurityProtocolFactory.AddTimestamp
  fullName: CoreWCF.Security.SecurityProtocolFactory.AddTimestamp
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public bool AddTimestamp { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AddTimestamp As Boolean
  overload: CoreWCF.Security.SecurityProtocolFactory.AddTimestamp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecurityProtocolFactory.DetectReplays
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.DetectReplays
  id: DetectReplays
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: DetectReplays
  nameWithType: SecurityProtocolFactory.DetectReplays
  fullName: CoreWCF.Security.SecurityProtocolFactory.DetectReplays
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public bool DetectReplays { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DetectReplays As Boolean
  overload: CoreWCF.Security.SecurityProtocolFactory.DetectReplays*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecurityProtocolFactory.PrivacyNoticeUri
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.PrivacyNoticeUri
  id: PrivacyNoticeUri
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: PrivacyNoticeUri
  nameWithType: SecurityProtocolFactory.PrivacyNoticeUri
  fullName: CoreWCF.Security.SecurityProtocolFactory.PrivacyNoticeUri
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public Uri PrivacyNoticeUri { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property PrivacyNoticeUri As Uri
  overload: CoreWCF.Security.SecurityProtocolFactory.PrivacyNoticeUri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecurityProtocolFactory.PrivacyNoticeVersion
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.PrivacyNoticeVersion
  id: PrivacyNoticeVersion
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: PrivacyNoticeVersion
  nameWithType: SecurityProtocolFactory.PrivacyNoticeVersion
  fullName: CoreWCF.Security.SecurityProtocolFactory.PrivacyNoticeVersion
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public int PrivacyNoticeVersion { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property PrivacyNoticeVersion As Integer
  overload: CoreWCF.Security.SecurityProtocolFactory.PrivacyNoticeVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecurityProtocolFactory.IncomingAlgorithmSuite
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.IncomingAlgorithmSuite
  id: IncomingAlgorithmSuite
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: IncomingAlgorithmSuite
  nameWithType: SecurityProtocolFactory.IncomingAlgorithmSuite
  fullName: CoreWCF.Security.SecurityProtocolFactory.IncomingAlgorithmSuite
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public SecurityAlgorithmSuite IncomingAlgorithmSuite { get; set; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityAlgorithmSuite
    content.vb: Public Property IncomingAlgorithmSuite As SecurityAlgorithmSuite
  overload: CoreWCF.Security.SecurityProtocolFactory.IncomingAlgorithmSuite*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecurityProtocolFactory.MaxCachedNonces
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.MaxCachedNonces
  id: MaxCachedNonces
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: MaxCachedNonces
  nameWithType: SecurityProtocolFactory.MaxCachedNonces
  fullName: CoreWCF.Security.SecurityProtocolFactory.MaxCachedNonces
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public int MaxCachedNonces { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxCachedNonces As Integer
  overload: CoreWCF.Security.SecurityProtocolFactory.MaxCachedNonces*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecurityProtocolFactory.MaxClockSkew
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.MaxClockSkew
  id: MaxClockSkew
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: MaxClockSkew
  nameWithType: SecurityProtocolFactory.MaxClockSkew
  fullName: CoreWCF.Security.SecurityProtocolFactory.MaxClockSkew
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public TimeSpan MaxClockSkew { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property MaxClockSkew As TimeSpan
  overload: CoreWCF.Security.SecurityProtocolFactory.MaxClockSkew*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecurityProtocolFactory.NonceCache
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.NonceCache
  id: NonceCache
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: NonceCache
  nameWithType: SecurityProtocolFactory.NonceCache
  fullName: CoreWCF.Security.SecurityProtocolFactory.NonceCache
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public NonceCache NonceCache { get; set; }
    parameters: []
    return:
      type: CoreWCF.Security.NonceCache
    content.vb: Public Property NonceCache As NonceCache
  overload: CoreWCF.Security.SecurityProtocolFactory.NonceCache*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecurityProtocolFactory.OutgoingAlgorithmSuite
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.OutgoingAlgorithmSuite
  id: OutgoingAlgorithmSuite
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: OutgoingAlgorithmSuite
  nameWithType: SecurityProtocolFactory.OutgoingAlgorithmSuite
  fullName: CoreWCF.Security.SecurityProtocolFactory.OutgoingAlgorithmSuite
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public SecurityAlgorithmSuite OutgoingAlgorithmSuite { get; set; }
    parameters: []
    return:
      type: CoreWCF.Security.SecurityAlgorithmSuite
    content.vb: Public Property OutgoingAlgorithmSuite As SecurityAlgorithmSuite
  overload: CoreWCF.Security.SecurityProtocolFactory.OutgoingAlgorithmSuite*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecurityProtocolFactory.ReplayWindow
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.ReplayWindow
  id: ReplayWindow
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: ReplayWindow
  nameWithType: SecurityProtocolFactory.ReplayWindow
  fullName: CoreWCF.Security.SecurityProtocolFactory.ReplayWindow
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public TimeSpan ReplayWindow { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property ReplayWindow As TimeSpan
  overload: CoreWCF.Security.SecurityProtocolFactory.ReplayWindow*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecurityProtocolFactory.ChannelSupportingTokenAuthenticatorSpecification
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.ChannelSupportingTokenAuthenticatorSpecification
  id: ChannelSupportingTokenAuthenticatorSpecification
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: ChannelSupportingTokenAuthenticatorSpecification
  nameWithType: SecurityProtocolFactory.ChannelSupportingTokenAuthenticatorSpecification
  fullName: CoreWCF.Security.SecurityProtocolFactory.ChannelSupportingTokenAuthenticatorSpecification
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public ICollection<SupportingTokenAuthenticatorSpecification> ChannelSupportingTokenAuthenticatorSpecification { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{CoreWCF.Security.SupportingTokenAuthenticatorSpecification}
    content.vb: Public ReadOnly Property ChannelSupportingTokenAuthenticatorSpecification As ICollection(Of SupportingTokenAuthenticatorSpecification)
  overload: CoreWCF.Security.SecurityProtocolFactory.ChannelSupportingTokenAuthenticatorSpecification*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.SecurityProtocolFactory.ScopedSupportingTokenAuthenticatorSpecification
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.ScopedSupportingTokenAuthenticatorSpecification
  id: ScopedSupportingTokenAuthenticatorSpecification
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: ScopedSupportingTokenAuthenticatorSpecification
  nameWithType: SecurityProtocolFactory.ScopedSupportingTokenAuthenticatorSpecification
  fullName: CoreWCF.Security.SecurityProtocolFactory.ScopedSupportingTokenAuthenticatorSpecification
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public Dictionary<string, ICollection<SupportingTokenAuthenticatorSpecification>> ScopedSupportingTokenAuthenticatorSpecification { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.ICollection{CoreWCF.Security.SupportingTokenAuthenticatorSpecification}}
    content.vb: Public ReadOnly Property ScopedSupportingTokenAuthenticatorSpecification As Dictionary(Of String, ICollection(Of SupportingTokenAuthenticatorSpecification))
  overload: CoreWCF.Security.SecurityProtocolFactory.ScopedSupportingTokenAuthenticatorSpecification*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.SecurityProtocolFactory.SecurityBindingElement
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.SecurityBindingElement
  id: SecurityBindingElement
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: SecurityBindingElement
  nameWithType: SecurityProtocolFactory.SecurityBindingElement
  fullName: CoreWCF.Security.SecurityProtocolFactory.SecurityBindingElement
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public SecurityBindingElement SecurityBindingElement { get; set; }
    parameters: []
    return:
      type: CoreWCF.Channels.SecurityBindingElement
    content.vb: Public Property SecurityBindingElement As SecurityBindingElement
  overload: CoreWCF.Security.SecurityProtocolFactory.SecurityBindingElement*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecurityProtocolFactory.SupportsDuplex
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.SupportsDuplex
  id: SupportsDuplex
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: SupportsDuplex
  nameWithType: SecurityProtocolFactory.SupportsDuplex
  fullName: CoreWCF.Security.SecurityProtocolFactory.SupportsDuplex
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public virtual bool SupportsDuplex { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property SupportsDuplex As Boolean
  overload: CoreWCF.Security.SecurityProtocolFactory.SupportsDuplex*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: CoreWCF.Security.SecurityProtocolFactory.SecurityHeaderLayout
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.SecurityHeaderLayout
  id: SecurityHeaderLayout
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: SecurityHeaderLayout
  nameWithType: SecurityProtocolFactory.SecurityHeaderLayout
  fullName: CoreWCF.Security.SecurityProtocolFactory.SecurityHeaderLayout
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public SecurityHeaderLayout SecurityHeaderLayout { get; set; }
    parameters: []
    return:
      type: CoreWCF.Channels.SecurityHeaderLayout
    content.vb: Public Property SecurityHeaderLayout As SecurityHeaderLayout
  overload: CoreWCF.Security.SecurityProtocolFactory.SecurityHeaderLayout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecurityProtocolFactory.SupportsReplayDetection
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.SupportsReplayDetection
  id: SupportsReplayDetection
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: SupportsReplayDetection
  nameWithType: SecurityProtocolFactory.SupportsReplayDetection
  fullName: CoreWCF.Security.SecurityProtocolFactory.SupportsReplayDetection
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public virtual bool SupportsReplayDetection { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property SupportsReplayDetection As Boolean
  overload: CoreWCF.Security.SecurityProtocolFactory.SupportsReplayDetection*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: CoreWCF.Security.SecurityProtocolFactory.SupportsRequestReply
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.SupportsRequestReply
  id: SupportsRequestReply
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: SupportsRequestReply
  nameWithType: SecurityProtocolFactory.SupportsRequestReply
  fullName: CoreWCF.Security.SecurityProtocolFactory.SupportsRequestReply
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public virtual bool SupportsRequestReply { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property SupportsRequestReply As Boolean
  overload: CoreWCF.Security.SecurityProtocolFactory.SupportsRequestReply*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: CoreWCF.Security.SecurityProtocolFactory.TimestampValidityDuration
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.TimestampValidityDuration
  id: TimestampValidityDuration
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: TimestampValidityDuration
  nameWithType: SecurityProtocolFactory.TimestampValidityDuration
  fullName: CoreWCF.Security.SecurityProtocolFactory.TimestampValidityDuration
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public TimeSpan TimestampValidityDuration { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property TimestampValidityDuration As TimeSpan
  overload: CoreWCF.Security.SecurityProtocolFactory.TimestampValidityDuration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecurityProtocolFactory.ListenUri
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.ListenUri
  id: ListenUri
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: ListenUri
  nameWithType: SecurityProtocolFactory.ListenUri
  fullName: CoreWCF.Security.SecurityProtocolFactory.ListenUri
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public Uri ListenUri { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property ListenUri As Uri
  overload: CoreWCF.Security.SecurityProtocolFactory.ListenUri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Security.SecurityProtocolFactory.DefaultOpenTimeout
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: DefaultOpenTimeout
  nameWithType: SecurityProtocolFactory.DefaultOpenTimeout
  fullName: CoreWCF.Security.SecurityProtocolFactory.DefaultOpenTimeout
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public TimeSpan DefaultOpenTimeout { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property DefaultOpenTimeout As TimeSpan
  overload: CoreWCF.Security.SecurityProtocolFactory.DefaultOpenTimeout*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.SecurityProtocolFactory.DefaultCloseTimeout
  commentId: P:CoreWCF.Security.SecurityProtocolFactory.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: CoreWCF.Security.SecurityProtocolFactory
  langs:
  - csharp
  - vb
  name: DefaultCloseTimeout
  nameWithType: SecurityProtocolFactory.DefaultCloseTimeout
  fullName: CoreWCF.Security.SecurityProtocolFactory.DefaultCloseTimeout
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public TimeSpan DefaultCloseTimeout { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property DefaultCloseTimeout As TimeSpan
  overload: CoreWCF.Security.SecurityProtocolFactory.DefaultCloseTimeout*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CoreWCF.Security
  commentId: N:CoreWCF.Security
  isExternal: true
  name: CoreWCF.Security
  nameWithType: CoreWCF.Security
  fullName: CoreWCF.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Security.SecurityProtocolFactory.#ctor*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.#ctor
  isExternal: true
  name: SecurityProtocolFactory
  nameWithType: SecurityProtocolFactory.SecurityProtocolFactory
  fullName: CoreWCF.Security.SecurityProtocolFactory.SecurityProtocolFactory
- uid: CoreWCF.Security.SecurityProtocolFactory.OnAbort*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.OnAbort
  isExternal: true
  name: OnAbort
  nameWithType: SecurityProtocolFactory.OnAbort
  fullName: CoreWCF.Security.SecurityProtocolFactory.OnAbort
- uid: CoreWCF.Security.SecurityProtocolFactory.OnClose*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.OnClose
  isExternal: true
  name: OnClose
  nameWithType: SecurityProtocolFactory.OnClose
  fullName: CoreWCF.Security.SecurityProtocolFactory.OnClose
- uid: System.TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: CoreWCF.Security.SecurityProtocolFactory.CreateListenerSecurityState*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.CreateListenerSecurityState
  isExternal: true
  name: CreateListenerSecurityState
  nameWithType: SecurityProtocolFactory.CreateListenerSecurityState
  fullName: CoreWCF.Security.SecurityProtocolFactory.CreateListenerSecurityState
- uid: CoreWCF.Security.SecurityProtocolFactory.GetIdentityOfSelf*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.GetIdentityOfSelf
  isExternal: true
  name: GetIdentityOfSelf
  nameWithType: SecurityProtocolFactory.GetIdentityOfSelf
  fullName: CoreWCF.Security.SecurityProtocolFactory.GetIdentityOfSelf
- uid: CoreWCF.EndpointIdentity
  commentId: T:CoreWCF.EndpointIdentity
  parent: CoreWCF
  isExternal: true
  name: EndpointIdentity
  nameWithType: EndpointIdentity
  fullName: CoreWCF.EndpointIdentity
- uid: CoreWCF
  commentId: N:CoreWCF
  isExternal: true
  name: CoreWCF
  nameWithType: CoreWCF
  fullName: CoreWCF
- uid: CoreWCF.Security.SecurityProtocolFactory.GetProperty*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.GetProperty
  isExternal: true
  name: GetProperty
  nameWithType: SecurityProtocolFactory.GetProperty
  fullName: CoreWCF.Security.SecurityProtocolFactory.GetProperty
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: CoreWCF.Security.SecurityProtocolFactory.CreateRecipientSecurityTokenRequirement*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.CreateRecipientSecurityTokenRequirement
  isExternal: true
  name: CreateRecipientSecurityTokenRequirement
  nameWithType: SecurityProtocolFactory.CreateRecipientSecurityTokenRequirement
  fullName: CoreWCF.Security.SecurityProtocolFactory.CreateRecipientSecurityTokenRequirement
- uid: CoreWCF.Security.Tokens.RecipientServiceModelSecurityTokenRequirement
  commentId: T:CoreWCF.Security.Tokens.RecipientServiceModelSecurityTokenRequirement
  parent: CoreWCF.Security.Tokens
  isExternal: true
  name: RecipientServiceModelSecurityTokenRequirement
  nameWithType: RecipientServiceModelSecurityTokenRequirement
  fullName: CoreWCF.Security.Tokens.RecipientServiceModelSecurityTokenRequirement
- uid: CoreWCF.Security.Tokens
  commentId: N:CoreWCF.Security.Tokens
  isExternal: true
  name: CoreWCF.Security.Tokens
  nameWithType: CoreWCF.Security.Tokens
  fullName: CoreWCF.Security.Tokens
- uid: CoreWCF.Security.SecurityProtocolFactory.OpenAsync*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.OpenAsync
  isExternal: true
  name: OpenAsync
  nameWithType: SecurityProtocolFactory.OpenAsync
  fullName: CoreWCF.Security.SecurityProtocolFactory.OpenAsync
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: CoreWCF.Security.SecurityProtocolFactory.OnOpenAsync*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.OnOpenAsync
  isExternal: true
  name: OnOpenAsync
  nameWithType: SecurityProtocolFactory.OnOpenAsync
  fullName: CoreWCF.Security.SecurityProtocolFactory.OnOpenAsync
- uid: CoreWCF.Security.SecurityProtocolFactory.OnCloseAsync*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.OnCloseAsync
  isExternal: true
  name: OnCloseAsync
  nameWithType: SecurityProtocolFactory.OnCloseAsync
  fullName: CoreWCF.Security.SecurityProtocolFactory.OnCloseAsync
- uid: CoreWCF.Security.SecurityProtocolFactory.OnClosed*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.OnClosed
  isExternal: true
  name: OnClosed
  nameWithType: SecurityProtocolFactory.OnClosed
  fullName: CoreWCF.Security.SecurityProtocolFactory.OnClosed
- uid: CoreWCF.Security.SecurityProtocolFactory.OnClosing*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.OnClosing
  isExternal: true
  name: OnClosing
  nameWithType: SecurityProtocolFactory.OnClosing
  fullName: CoreWCF.Security.SecurityProtocolFactory.OnClosing
- uid: CoreWCF.Security.SecurityProtocolFactory.OnFaulted*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.OnFaulted
  isExternal: true
  name: OnFaulted
  nameWithType: SecurityProtocolFactory.OnFaulted
  fullName: CoreWCF.Security.SecurityProtocolFactory.OnFaulted
- uid: CoreWCF.Security.SecurityProtocolFactory.OnOpened*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.OnOpened
  isExternal: true
  name: OnOpened
  nameWithType: SecurityProtocolFactory.OnOpened
  fullName: CoreWCF.Security.SecurityProtocolFactory.OnOpened
- uid: CoreWCF.Security.SecurityProtocolFactory.OnOpening*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.OnOpening
  isExternal: true
  name: OnOpening
  nameWithType: SecurityProtocolFactory.OnOpening
  fullName: CoreWCF.Security.SecurityProtocolFactory.OnOpening
- uid: CoreWCF.Security.SecurityProtocolFactory.ActAsInitiator*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.ActAsInitiator
  isExternal: true
  name: ActAsInitiator
  nameWithType: SecurityProtocolFactory.ActAsInitiator
  fullName: CoreWCF.Security.SecurityProtocolFactory.ActAsInitiator
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CoreWCF.Security.SecurityProtocolFactory.StreamBufferManager*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.StreamBufferManager
  isExternal: true
  name: StreamBufferManager
  nameWithType: SecurityProtocolFactory.StreamBufferManager
  fullName: CoreWCF.Security.SecurityProtocolFactory.StreamBufferManager
- uid: CoreWCF.Channels.BufferManager
  commentId: T:CoreWCF.Channels.BufferManager
  parent: CoreWCF.Channels
  isExternal: true
  name: BufferManager
  nameWithType: BufferManager
  fullName: CoreWCF.Channels.BufferManager
- uid: CoreWCF.Channels
  commentId: N:CoreWCF.Channels
  isExternal: true
  name: CoreWCF.Channels
  nameWithType: CoreWCF.Channels
  fullName: CoreWCF.Channels
- uid: CoreWCF.Security.SecurityProtocolFactory.ExtendedProtectionPolicy*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.ExtendedProtectionPolicy
  isExternal: true
  name: ExtendedProtectionPolicy
  nameWithType: SecurityProtocolFactory.ExtendedProtectionPolicy
  fullName: CoreWCF.Security.SecurityProtocolFactory.ExtendedProtectionPolicy
- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  isExternal: true
  name: ExtendedProtectionPolicy
  nameWithType: ExtendedProtectionPolicy
  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
- uid: CoreWCF.Security.SecurityProtocolFactory.AddTimestamp*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.AddTimestamp
  isExternal: true
  name: AddTimestamp
  nameWithType: SecurityProtocolFactory.AddTimestamp
  fullName: CoreWCF.Security.SecurityProtocolFactory.AddTimestamp
- uid: CoreWCF.Security.SecurityProtocolFactory.DetectReplays*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.DetectReplays
  isExternal: true
  name: DetectReplays
  nameWithType: SecurityProtocolFactory.DetectReplays
  fullName: CoreWCF.Security.SecurityProtocolFactory.DetectReplays
- uid: CoreWCF.Security.SecurityProtocolFactory.PrivacyNoticeUri*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.PrivacyNoticeUri
  isExternal: true
  name: PrivacyNoticeUri
  nameWithType: SecurityProtocolFactory.PrivacyNoticeUri
  fullName: CoreWCF.Security.SecurityProtocolFactory.PrivacyNoticeUri
- uid: System.Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: CoreWCF.Security.SecurityProtocolFactory.PrivacyNoticeVersion*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.PrivacyNoticeVersion
  isExternal: true
  name: PrivacyNoticeVersion
  nameWithType: SecurityProtocolFactory.PrivacyNoticeVersion
  fullName: CoreWCF.Security.SecurityProtocolFactory.PrivacyNoticeVersion
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: CoreWCF.Security.SecurityProtocolFactory.IncomingAlgorithmSuite*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.IncomingAlgorithmSuite
  isExternal: true
  name: IncomingAlgorithmSuite
  nameWithType: SecurityProtocolFactory.IncomingAlgorithmSuite
  fullName: CoreWCF.Security.SecurityProtocolFactory.IncomingAlgorithmSuite
- uid: CoreWCF.Security.SecurityAlgorithmSuite
  commentId: T:CoreWCF.Security.SecurityAlgorithmSuite
  parent: CoreWCF.Security
  isExternal: true
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite
  fullName: CoreWCF.Security.SecurityAlgorithmSuite
- uid: CoreWCF.Security.SecurityProtocolFactory.MaxCachedNonces*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.MaxCachedNonces
  isExternal: true
  name: MaxCachedNonces
  nameWithType: SecurityProtocolFactory.MaxCachedNonces
  fullName: CoreWCF.Security.SecurityProtocolFactory.MaxCachedNonces
- uid: CoreWCF.Security.SecurityProtocolFactory.MaxClockSkew*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.MaxClockSkew
  isExternal: true
  name: MaxClockSkew
  nameWithType: SecurityProtocolFactory.MaxClockSkew
  fullName: CoreWCF.Security.SecurityProtocolFactory.MaxClockSkew
- uid: CoreWCF.Security.SecurityProtocolFactory.NonceCache*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.NonceCache
  isExternal: true
  name: NonceCache
  nameWithType: SecurityProtocolFactory.NonceCache
  fullName: CoreWCF.Security.SecurityProtocolFactory.NonceCache
- uid: CoreWCF.Security.NonceCache
  commentId: T:CoreWCF.Security.NonceCache
  parent: CoreWCF.Security
  isExternal: true
  name: NonceCache
  nameWithType: NonceCache
  fullName: CoreWCF.Security.NonceCache
- uid: CoreWCF.Security.SecurityProtocolFactory.OutgoingAlgorithmSuite*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.OutgoingAlgorithmSuite
  isExternal: true
  name: OutgoingAlgorithmSuite
  nameWithType: SecurityProtocolFactory.OutgoingAlgorithmSuite
  fullName: CoreWCF.Security.SecurityProtocolFactory.OutgoingAlgorithmSuite
- uid: CoreWCF.Security.SecurityProtocolFactory.ReplayWindow*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.ReplayWindow
  isExternal: true
  name: ReplayWindow
  nameWithType: SecurityProtocolFactory.ReplayWindow
  fullName: CoreWCF.Security.SecurityProtocolFactory.ReplayWindow
- uid: CoreWCF.Security.SecurityProtocolFactory.ChannelSupportingTokenAuthenticatorSpecification*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.ChannelSupportingTokenAuthenticatorSpecification
  isExternal: true
  name: ChannelSupportingTokenAuthenticatorSpecification
  nameWithType: SecurityProtocolFactory.ChannelSupportingTokenAuthenticatorSpecification
  fullName: CoreWCF.Security.SecurityProtocolFactory.ChannelSupportingTokenAuthenticatorSpecification
- uid: System.Collections.Generic.ICollection{CoreWCF.Security.SupportingTokenAuthenticatorSpecification}
  commentId: '!:System.Collections.Generic.ICollection{CoreWCF.Security.SupportingTokenAuthenticatorSpecification}'
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<SupportingTokenAuthenticatorSpecification>
  nameWithType: ICollection<SupportingTokenAuthenticatorSpecification>
  fullName: System.Collections.Generic.ICollection<CoreWCF.Security.SupportingTokenAuthenticatorSpecification>
  nameWithType.vb: ICollection(Of SupportingTokenAuthenticatorSpecification)
  fullName.vb: System.Collections.Generic.ICollection(Of CoreWCF.Security.SupportingTokenAuthenticatorSpecification)
  name.vb: ICollection(Of SupportingTokenAuthenticatorSpecification)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.Security.SupportingTokenAuthenticatorSpecification
    name: SupportingTokenAuthenticatorSpecification
    nameWithType: SupportingTokenAuthenticatorSpecification
    fullName: CoreWCF.Security.SupportingTokenAuthenticatorSpecification
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.Security.SupportingTokenAuthenticatorSpecification
    name: SupportingTokenAuthenticatorSpecification
    nameWithType: SupportingTokenAuthenticatorSpecification
    fullName: CoreWCF.Security.SupportingTokenAuthenticatorSpecification
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<>
  nameWithType: ICollection<>
  fullName: System.Collections.Generic.ICollection<>
  nameWithType.vb: ICollection(Of )
  fullName.vb: System.Collections.Generic.ICollection(Of )
  name.vb: ICollection(Of )
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Security.SecurityProtocolFactory.ScopedSupportingTokenAuthenticatorSpecification*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.ScopedSupportingTokenAuthenticatorSpecification
  isExternal: true
  name: ScopedSupportingTokenAuthenticatorSpecification
  nameWithType: SecurityProtocolFactory.ScopedSupportingTokenAuthenticatorSpecification
  fullName: CoreWCF.Security.SecurityProtocolFactory.ScopedSupportingTokenAuthenticatorSpecification
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.ICollection{CoreWCF.Security.SupportingTokenAuthenticatorSpecification}}
  commentId: '!:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.ICollection{CoreWCF.Security.SupportingTokenAuthenticatorSpecification}}'
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, ICollection<SupportingTokenAuthenticatorSpecification>>
  nameWithType: Dictionary<String, ICollection<SupportingTokenAuthenticatorSpecification>>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.ICollection<CoreWCF.Security.SupportingTokenAuthenticatorSpecification>>
  nameWithType.vb: Dictionary(Of String, ICollection(Of SupportingTokenAuthenticatorSpecification))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.ICollection(Of CoreWCF.Security.SupportingTokenAuthenticatorSpecification))
  name.vb: Dictionary(Of String, ICollection(Of SupportingTokenAuthenticatorSpecification))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.Security.SupportingTokenAuthenticatorSpecification
    name: SupportingTokenAuthenticatorSpecification
    nameWithType: SupportingTokenAuthenticatorSpecification
    fullName: CoreWCF.Security.SupportingTokenAuthenticatorSpecification
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.Security.SupportingTokenAuthenticatorSpecification
    name: SupportingTokenAuthenticatorSpecification
    nameWithType: SupportingTokenAuthenticatorSpecification
    fullName: CoreWCF.Security.SupportingTokenAuthenticatorSpecification
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: System.Collections.Generic.Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: System.Collections.Generic.Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Security.SecurityProtocolFactory.SecurityBindingElement*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.SecurityBindingElement
  isExternal: true
  name: SecurityBindingElement
  nameWithType: SecurityProtocolFactory.SecurityBindingElement
  fullName: CoreWCF.Security.SecurityProtocolFactory.SecurityBindingElement
- uid: CoreWCF.Channels.SecurityBindingElement
  commentId: T:CoreWCF.Channels.SecurityBindingElement
  parent: CoreWCF.Channels
  isExternal: true
  name: SecurityBindingElement
  nameWithType: SecurityBindingElement
  fullName: CoreWCF.Channels.SecurityBindingElement
- uid: CoreWCF.Security.SecurityProtocolFactory.SupportsDuplex*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.SupportsDuplex
  isExternal: true
  name: SupportsDuplex
  nameWithType: SecurityProtocolFactory.SupportsDuplex
  fullName: CoreWCF.Security.SecurityProtocolFactory.SupportsDuplex
- uid: CoreWCF.Security.SecurityProtocolFactory.SecurityHeaderLayout*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.SecurityHeaderLayout
  isExternal: true
  name: SecurityHeaderLayout
  nameWithType: SecurityProtocolFactory.SecurityHeaderLayout
  fullName: CoreWCF.Security.SecurityProtocolFactory.SecurityHeaderLayout
- uid: CoreWCF.Channels.SecurityHeaderLayout
  commentId: T:CoreWCF.Channels.SecurityHeaderLayout
  parent: CoreWCF.Channels
  isExternal: true
  name: SecurityHeaderLayout
  nameWithType: SecurityHeaderLayout
  fullName: CoreWCF.Channels.SecurityHeaderLayout
- uid: CoreWCF.Security.SecurityProtocolFactory.SupportsReplayDetection*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.SupportsReplayDetection
  isExternal: true
  name: SupportsReplayDetection
  nameWithType: SecurityProtocolFactory.SupportsReplayDetection
  fullName: CoreWCF.Security.SecurityProtocolFactory.SupportsReplayDetection
- uid: CoreWCF.Security.SecurityProtocolFactory.SupportsRequestReply*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.SupportsRequestReply
  isExternal: true
  name: SupportsRequestReply
  nameWithType: SecurityProtocolFactory.SupportsRequestReply
  fullName: CoreWCF.Security.SecurityProtocolFactory.SupportsRequestReply
- uid: CoreWCF.Security.SecurityProtocolFactory.TimestampValidityDuration*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.TimestampValidityDuration
  isExternal: true
  name: TimestampValidityDuration
  nameWithType: SecurityProtocolFactory.TimestampValidityDuration
  fullName: CoreWCF.Security.SecurityProtocolFactory.TimestampValidityDuration
- uid: CoreWCF.Security.SecurityProtocolFactory.ListenUri*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.ListenUri
  isExternal: true
  name: ListenUri
  nameWithType: SecurityProtocolFactory.ListenUri
  fullName: CoreWCF.Security.SecurityProtocolFactory.ListenUri
- uid: CoreWCF.Security.SecurityProtocolFactory.DefaultOpenTimeout*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.DefaultOpenTimeout
  isExternal: true
  name: DefaultOpenTimeout
  nameWithType: SecurityProtocolFactory.DefaultOpenTimeout
  fullName: CoreWCF.Security.SecurityProtocolFactory.DefaultOpenTimeout
- uid: CoreWCF.Security.SecurityProtocolFactory.DefaultCloseTimeout*
  commentId: Overload:CoreWCF.Security.SecurityProtocolFactory.DefaultCloseTimeout
  isExternal: true
  name: DefaultCloseTimeout
  nameWithType: SecurityProtocolFactory.DefaultCloseTimeout
  fullName: CoreWCF.Security.SecurityProtocolFactory.DefaultCloseTimeout
