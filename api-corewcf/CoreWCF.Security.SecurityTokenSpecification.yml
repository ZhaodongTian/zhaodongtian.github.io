### YamlMime:ManagedReference
items:
- uid: CoreWCF.Security.SecurityTokenSpecification
  commentId: T:CoreWCF.Security.SecurityTokenSpecification
  id: SecurityTokenSpecification
  parent: CoreWCF.Security
  children:
  - CoreWCF.Security.SecurityTokenSpecification.#ctor(CoreWCF.IdentityModel.Tokens.SecurityToken,System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy})
  - CoreWCF.Security.SecurityTokenSpecification.SecurityToken
  - CoreWCF.Security.SecurityTokenSpecification.SecurityTokenPolicies
  langs:
  - csharp
  - vb
  name: SecurityTokenSpecification
  nameWithType: SecurityTokenSpecification
  fullName: CoreWCF.Security.SecurityTokenSpecification
  type: Class
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  summary: Represents a security token and its authorization policies.
  remarks: "This class is used for primary and transport tokens. It contains a security token and a corresponding collection of authorization policies.  \n\n"
  syntax:
    content: 'public class SecurityTokenSpecification : Object'
    content.vb: >-
      Public Class SecurityTokenSpecification
          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - CoreWCF.Security.SupportingTokenSpecification
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.Security.SecurityTokenSpecification.#ctor(CoreWCF.IdentityModel.Tokens.SecurityToken,System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy})
  commentId: M:CoreWCF.Security.SecurityTokenSpecification.#ctor(CoreWCF.IdentityModel.Tokens.SecurityToken,System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy})
  id: '#ctor(CoreWCF.IdentityModel.Tokens.SecurityToken,System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy})'
  parent: CoreWCF.Security.SecurityTokenSpecification
  langs:
  - csharp
  - vb
  name: SecurityTokenSpecification(SecurityToken, ReadOnlyCollection<IAuthorizationPolicy>)
  nameWithType: SecurityTokenSpecification.SecurityTokenSpecification(SecurityToken, ReadOnlyCollection<IAuthorizationPolicy>)
  fullName: CoreWCF.Security.SecurityTokenSpecification.SecurityTokenSpecification(CoreWCF.IdentityModel.Tokens.SecurityToken, System.Collections.ObjectModel.ReadOnlyCollection<CoreWCF.IdentityModel.Policy.IAuthorizationPolicy>)
  type: Constructor
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public SecurityTokenSpecification(SecurityToken token, ReadOnlyCollection<IAuthorizationPolicy> tokenPolicies)
    parameters:
    - id: token
      type: CoreWCF.IdentityModel.Tokens.SecurityToken
    - id: tokenPolicies
      type: System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy}
    content.vb: Public Sub New(token As SecurityToken, tokenPolicies As ReadOnlyCollection(Of IAuthorizationPolicy))
  overload: CoreWCF.Security.SecurityTokenSpecification.#ctor*
  nameWithType.vb: SecurityTokenSpecification.SecurityTokenSpecification(SecurityToken, ReadOnlyCollection(Of IAuthorizationPolicy))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CoreWCF.Security.SecurityTokenSpecification.SecurityTokenSpecification(CoreWCF.IdentityModel.Tokens.SecurityToken, System.Collections.ObjectModel.ReadOnlyCollection(Of CoreWCF.IdentityModel.Policy.IAuthorizationPolicy))
  name.vb: SecurityTokenSpecification(SecurityToken, ReadOnlyCollection(Of IAuthorizationPolicy))
- uid: CoreWCF.Security.SecurityTokenSpecification.SecurityToken
  commentId: P:CoreWCF.Security.SecurityTokenSpecification.SecurityToken
  id: SecurityToken
  parent: CoreWCF.Security.SecurityTokenSpecification
  langs:
  - csharp
  - vb
  name: SecurityToken
  nameWithType: SecurityTokenSpecification.SecurityToken
  fullName: CoreWCF.Security.SecurityTokenSpecification.SecurityToken
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public SecurityToken SecurityToken { get; }
    parameters: []
    return:
      type: CoreWCF.IdentityModel.Tokens.SecurityToken
    content.vb: Public ReadOnly Property SecurityToken As SecurityToken
  overload: CoreWCF.Security.SecurityTokenSpecification.SecurityToken*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CoreWCF.Security.SecurityTokenSpecification.SecurityTokenPolicies
  commentId: P:CoreWCF.Security.SecurityTokenSpecification.SecurityTokenPolicies
  id: SecurityTokenPolicies
  parent: CoreWCF.Security.SecurityTokenSpecification
  langs:
  - csharp
  - vb
  name: SecurityTokenPolicies
  nameWithType: SecurityTokenSpecification.SecurityTokenPolicies
  fullName: CoreWCF.Security.SecurityTokenSpecification.SecurityTokenPolicies
  type: Property
  source:
    path: CoreWCF.Primitives
    isExternal: true
  assemblies:
  - CoreWCF.Primitives
  namespace: CoreWCF.Security
  syntax:
    content: public ReadOnlyCollection<IAuthorizationPolicy> SecurityTokenPolicies { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy}
    content.vb: Public ReadOnly Property SecurityTokenPolicies As ReadOnlyCollection(Of IAuthorizationPolicy)
  overload: CoreWCF.Security.SecurityTokenSpecification.SecurityTokenPolicies*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CoreWCF.Security
  commentId: N:CoreWCF.Security
  isExternal: true
  name: CoreWCF.Security
  nameWithType: CoreWCF.Security
  fullName: CoreWCF.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.Security.SecurityTokenSpecification.#ctor*
  commentId: Overload:CoreWCF.Security.SecurityTokenSpecification.#ctor
  isExternal: true
  name: SecurityTokenSpecification
  nameWithType: SecurityTokenSpecification.SecurityTokenSpecification
  fullName: CoreWCF.Security.SecurityTokenSpecification.SecurityTokenSpecification
- uid: CoreWCF.IdentityModel.Tokens.SecurityToken
  commentId: T:CoreWCF.IdentityModel.Tokens.SecurityToken
  parent: CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: CoreWCF.IdentityModel.Tokens.SecurityToken
- uid: System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy}
  commentId: '!:System.Collections.ObjectModel.ReadOnlyCollection{CoreWCF.IdentityModel.Policy.IAuthorizationPolicy}'
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<CoreWCF.IdentityModel.Policy.IAuthorizationPolicy>
  nameWithType.vb: ReadOnlyCollection(Of IAuthorizationPolicy)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of CoreWCF.IdentityModel.Policy.IAuthorizationPolicy)
  name.vb: ReadOnlyCollection(Of IAuthorizationPolicy)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: CoreWCF.IdentityModel.Policy.IAuthorizationPolicy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.IdentityModel.Tokens
  commentId: N:CoreWCF.IdentityModel.Tokens
  isExternal: true
  name: CoreWCF.IdentityModel.Tokens
  nameWithType: CoreWCF.IdentityModel.Tokens
  fullName: CoreWCF.IdentityModel.Tokens
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<>
  nameWithType: ReadOnlyCollection<>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<>
  nameWithType.vb: ReadOnlyCollection(Of )
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of )
  name.vb: ReadOnlyCollection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Security.SecurityTokenSpecification.SecurityToken*
  commentId: Overload:CoreWCF.Security.SecurityTokenSpecification.SecurityToken
  isExternal: true
  name: SecurityToken
  nameWithType: SecurityTokenSpecification.SecurityToken
  fullName: CoreWCF.Security.SecurityTokenSpecification.SecurityToken
- uid: CoreWCF.Security.SecurityTokenSpecification.SecurityTokenPolicies*
  commentId: Overload:CoreWCF.Security.SecurityTokenSpecification.SecurityTokenPolicies
  isExternal: true
  name: SecurityTokenPolicies
  nameWithType: SecurityTokenSpecification.SecurityTokenPolicies
  fullName: CoreWCF.Security.SecurityTokenSpecification.SecurityTokenPolicies
