### YamlMime:ManagedReference
items:
- uid: CoreWCF.OpenApi.OpenApiOptions
  commentId: T:CoreWCF.OpenApi.OpenApiOptions
  id: OpenApiOptions
  parent: CoreWCF.OpenApi
  children:
  - CoreWCF.OpenApi.OpenApiOptions.#ctor
  - CoreWCF.OpenApi.OpenApiOptions.ContactEmail
  - CoreWCF.OpenApi.OpenApiOptions.ContactName
  - CoreWCF.OpenApi.OpenApiOptions.ContactUrl
  - CoreWCF.OpenApi.OpenApiOptions.Description
  - CoreWCF.OpenApi.OpenApiOptions.ExternalDocumentDescription
  - CoreWCF.OpenApi.OpenApiOptions.ExternalDocumentUrl
  - CoreWCF.OpenApi.OpenApiOptions.LiceneUrl
  - CoreWCF.OpenApi.OpenApiOptions.LicenseName
  - CoreWCF.OpenApi.OpenApiOptions.TagsSorter
  - CoreWCF.OpenApi.OpenApiOptions.TagsToHide
  - CoreWCF.OpenApi.OpenApiOptions.TermsOfService
  - CoreWCF.OpenApi.OpenApiOptions.Title
  - CoreWCF.OpenApi.OpenApiOptions.Version
  langs:
  - csharp
  - vb
  name: OpenApiOptions
  nameWithType: OpenApiOptions
  fullName: CoreWCF.OpenApi.OpenApiOptions
  type: Class
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.OpenApi
  summary: "\nTop level information about the API.\n"
  syntax:
    content: 'public sealed class OpenApiOptions : Object'
    content.vb: >-
      Public NotInheritable Class OpenApiOptions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: CoreWCF.OpenApi.OpenApiOptions.#ctor
  commentId: M:CoreWCF.OpenApi.OpenApiOptions.#ctor
  id: '#ctor'
  parent: CoreWCF.OpenApi.OpenApiOptions
  langs:
  - csharp
  - vb
  name: OpenApiOptions()
  nameWithType: OpenApiOptions.OpenApiOptions()
  fullName: CoreWCF.OpenApi.OpenApiOptions.OpenApiOptions()
  type: Constructor
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.OpenApi
  syntax:
    content: public OpenApiOptions()
    content.vb: Public Sub New
  overload: CoreWCF.OpenApi.OpenApiOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CoreWCF.OpenApi.OpenApiOptions.Version
  commentId: P:CoreWCF.OpenApi.OpenApiOptions.Version
  id: Version
  parent: CoreWCF.OpenApi.OpenApiOptions
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: OpenApiOptions.Version
  fullName: CoreWCF.OpenApi.OpenApiOptions.Version
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.OpenApi
  summary: "\nVersion of the API.\n"
  syntax:
    content: public string Version { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Version As String
  overload: CoreWCF.OpenApi.OpenApiOptions.Version*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.OpenApi.OpenApiOptions.Description
  commentId: P:CoreWCF.OpenApi.OpenApiOptions.Description
  id: Description
  parent: CoreWCF.OpenApi.OpenApiOptions
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: OpenApiOptions.Description
  fullName: CoreWCF.OpenApi.OpenApiOptions.Description
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.OpenApi
  summary: "\nDescription of the API.\n"
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: CoreWCF.OpenApi.OpenApiOptions.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.OpenApi.OpenApiOptions.Title
  commentId: P:CoreWCF.OpenApi.OpenApiOptions.Title
  id: Title
  parent: CoreWCF.OpenApi.OpenApiOptions
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: OpenApiOptions.Title
  fullName: CoreWCF.OpenApi.OpenApiOptions.Title
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.OpenApi
  summary: "\nTitle of the API.\n"
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: CoreWCF.OpenApi.OpenApiOptions.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.OpenApi.OpenApiOptions.TermsOfService
  commentId: P:CoreWCF.OpenApi.OpenApiOptions.TermsOfService
  id: TermsOfService
  parent: CoreWCF.OpenApi.OpenApiOptions
  langs:
  - csharp
  - vb
  name: TermsOfService
  nameWithType: OpenApiOptions.TermsOfService
  fullName: CoreWCF.OpenApi.OpenApiOptions.TermsOfService
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.OpenApi
  summary: "\nTerms of service of the API.\n"
  syntax:
    content: public Uri TermsOfService { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property TermsOfService As Uri
  overload: CoreWCF.OpenApi.OpenApiOptions.TermsOfService*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.OpenApi.OpenApiOptions.ContactName
  commentId: P:CoreWCF.OpenApi.OpenApiOptions.ContactName
  id: ContactName
  parent: CoreWCF.OpenApi.OpenApiOptions
  langs:
  - csharp
  - vb
  name: ContactName
  nameWithType: OpenApiOptions.ContactName
  fullName: CoreWCF.OpenApi.OpenApiOptions.ContactName
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.OpenApi
  summary: "\nName of the contact.\n"
  syntax:
    content: public string ContactName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ContactName As String
  overload: CoreWCF.OpenApi.OpenApiOptions.ContactName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.OpenApi.OpenApiOptions.ContactEmail
  commentId: P:CoreWCF.OpenApi.OpenApiOptions.ContactEmail
  id: ContactEmail
  parent: CoreWCF.OpenApi.OpenApiOptions
  langs:
  - csharp
  - vb
  name: ContactEmail
  nameWithType: OpenApiOptions.ContactEmail
  fullName: CoreWCF.OpenApi.OpenApiOptions.ContactEmail
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.OpenApi
  summary: "\nUrl with contact information.\n"
  syntax:
    content: public string ContactEmail { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ContactEmail As String
  overload: CoreWCF.OpenApi.OpenApiOptions.ContactEmail*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.OpenApi.OpenApiOptions.ContactUrl
  commentId: P:CoreWCF.OpenApi.OpenApiOptions.ContactUrl
  id: ContactUrl
  parent: CoreWCF.OpenApi.OpenApiOptions
  langs:
  - csharp
  - vb
  name: ContactUrl
  nameWithType: OpenApiOptions.ContactUrl
  fullName: CoreWCF.OpenApi.OpenApiOptions.ContactUrl
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.OpenApi
  summary: "\nEmail used for contact.\n"
  syntax:
    content: public Uri ContactUrl { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property ContactUrl As Uri
  overload: CoreWCF.OpenApi.OpenApiOptions.ContactUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.OpenApi.OpenApiOptions.LicenseName
  commentId: P:CoreWCF.OpenApi.OpenApiOptions.LicenseName
  id: LicenseName
  parent: CoreWCF.OpenApi.OpenApiOptions
  langs:
  - csharp
  - vb
  name: LicenseName
  nameWithType: OpenApiOptions.LicenseName
  fullName: CoreWCF.OpenApi.OpenApiOptions.LicenseName
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.OpenApi
  summary: "\nName of the license used for the API.\n"
  syntax:
    content: public string LicenseName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LicenseName As String
  overload: CoreWCF.OpenApi.OpenApiOptions.LicenseName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.OpenApi.OpenApiOptions.LiceneUrl
  commentId: P:CoreWCF.OpenApi.OpenApiOptions.LiceneUrl
  id: LiceneUrl
  parent: CoreWCF.OpenApi.OpenApiOptions
  langs:
  - csharp
  - vb
  name: LiceneUrl
  nameWithType: OpenApiOptions.LiceneUrl
  fullName: CoreWCF.OpenApi.OpenApiOptions.LiceneUrl
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.OpenApi
  summary: "\nURL of the license for the API.\n"
  syntax:
    content: public Uri LiceneUrl { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property LiceneUrl As Uri
  overload: CoreWCF.OpenApi.OpenApiOptions.LiceneUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.OpenApi.OpenApiOptions.ExternalDocumentDescription
  commentId: P:CoreWCF.OpenApi.OpenApiOptions.ExternalDocumentDescription
  id: ExternalDocumentDescription
  parent: CoreWCF.OpenApi.OpenApiOptions
  langs:
  - csharp
  - vb
  name: ExternalDocumentDescription
  nameWithType: OpenApiOptions.ExternalDocumentDescription
  fullName: CoreWCF.OpenApi.OpenApiOptions.ExternalDocumentDescription
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.OpenApi
  summary: "\nDescription of an external document for the API.\n"
  syntax:
    content: public string ExternalDocumentDescription { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ExternalDocumentDescription As String
  overload: CoreWCF.OpenApi.OpenApiOptions.ExternalDocumentDescription*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.OpenApi.OpenApiOptions.ExternalDocumentUrl
  commentId: P:CoreWCF.OpenApi.OpenApiOptions.ExternalDocumentUrl
  id: ExternalDocumentUrl
  parent: CoreWCF.OpenApi.OpenApiOptions
  langs:
  - csharp
  - vb
  name: ExternalDocumentUrl
  nameWithType: OpenApiOptions.ExternalDocumentUrl
  fullName: CoreWCF.OpenApi.OpenApiOptions.ExternalDocumentUrl
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.OpenApi
  summary: "\nURL of an external document for an API.\n"
  syntax:
    content: public Uri ExternalDocumentUrl { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property ExternalDocumentUrl As Uri
  overload: CoreWCF.OpenApi.OpenApiOptions.ExternalDocumentUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.OpenApi.OpenApiOptions.TagsToHide
  commentId: P:CoreWCF.OpenApi.OpenApiOptions.TagsToHide
  id: TagsToHide
  parent: CoreWCF.OpenApi.OpenApiOptions
  langs:
  - csharp
  - vb
  name: TagsToHide
  nameWithType: OpenApiOptions.TagsToHide
  fullName: CoreWCF.OpenApi.OpenApiOptions.TagsToHide
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.OpenApi
  summary: "\nAny tags to hide.\n"
  syntax:
    content: public IEnumerable<string> TagsToHide { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Property TagsToHide As IEnumerable(Of String)
  overload: CoreWCF.OpenApi.OpenApiOptions.TagsToHide*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.OpenApi.OpenApiOptions.TagsSorter
  commentId: P:CoreWCF.OpenApi.OpenApiOptions.TagsSorter
  id: TagsSorter
  parent: CoreWCF.OpenApi.OpenApiOptions
  langs:
  - csharp
  - vb
  name: TagsSorter
  nameWithType: OpenApiOptions.TagsSorter
  fullName: CoreWCF.OpenApi.OpenApiOptions.TagsSorter
  type: Property
  source:
    path: CoreWCF.WebHttp
    isExternal: true
  assemblies:
  - CoreWCF.WebHttp
  namespace: CoreWCF.OpenApi
  summary: "\nOptional callback to sort tags.\n"
  syntax:
    content: public IComparer<OpenApiTag> TagsSorter { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IComparer{Microsoft.OpenApi.Models.OpenApiTag}
    content.vb: Public Property TagsSorter As IComparer(Of OpenApiTag)
  overload: CoreWCF.OpenApi.OpenApiOptions.TagsSorter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: CoreWCF.OpenApi
  commentId: N:CoreWCF.OpenApi
  isExternal: true
  name: CoreWCF.OpenApi
  nameWithType: CoreWCF.OpenApi
  fullName: CoreWCF.OpenApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CoreWCF.OpenApi.OpenApiOptions.#ctor*
  commentId: Overload:CoreWCF.OpenApi.OpenApiOptions.#ctor
  isExternal: true
  name: OpenApiOptions
  nameWithType: OpenApiOptions.OpenApiOptions
  fullName: CoreWCF.OpenApi.OpenApiOptions.OpenApiOptions
- uid: CoreWCF.OpenApi.OpenApiOptions.Version*
  commentId: Overload:CoreWCF.OpenApi.OpenApiOptions.Version
  isExternal: true
  name: Version
  nameWithType: OpenApiOptions.Version
  fullName: CoreWCF.OpenApi.OpenApiOptions.Version
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CoreWCF.OpenApi.OpenApiOptions.Description*
  commentId: Overload:CoreWCF.OpenApi.OpenApiOptions.Description
  isExternal: true
  name: Description
  nameWithType: OpenApiOptions.Description
  fullName: CoreWCF.OpenApi.OpenApiOptions.Description
- uid: CoreWCF.OpenApi.OpenApiOptions.Title*
  commentId: Overload:CoreWCF.OpenApi.OpenApiOptions.Title
  isExternal: true
  name: Title
  nameWithType: OpenApiOptions.Title
  fullName: CoreWCF.OpenApi.OpenApiOptions.Title
- uid: CoreWCF.OpenApi.OpenApiOptions.TermsOfService*
  commentId: Overload:CoreWCF.OpenApi.OpenApiOptions.TermsOfService
  isExternal: true
  name: TermsOfService
  nameWithType: OpenApiOptions.TermsOfService
  fullName: CoreWCF.OpenApi.OpenApiOptions.TermsOfService
- uid: System.Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: CoreWCF.OpenApi.OpenApiOptions.ContactName*
  commentId: Overload:CoreWCF.OpenApi.OpenApiOptions.ContactName
  isExternal: true
  name: ContactName
  nameWithType: OpenApiOptions.ContactName
  fullName: CoreWCF.OpenApi.OpenApiOptions.ContactName
- uid: CoreWCF.OpenApi.OpenApiOptions.ContactEmail*
  commentId: Overload:CoreWCF.OpenApi.OpenApiOptions.ContactEmail
  isExternal: true
  name: ContactEmail
  nameWithType: OpenApiOptions.ContactEmail
  fullName: CoreWCF.OpenApi.OpenApiOptions.ContactEmail
- uid: CoreWCF.OpenApi.OpenApiOptions.ContactUrl*
  commentId: Overload:CoreWCF.OpenApi.OpenApiOptions.ContactUrl
  isExternal: true
  name: ContactUrl
  nameWithType: OpenApiOptions.ContactUrl
  fullName: CoreWCF.OpenApi.OpenApiOptions.ContactUrl
- uid: CoreWCF.OpenApi.OpenApiOptions.LicenseName*
  commentId: Overload:CoreWCF.OpenApi.OpenApiOptions.LicenseName
  isExternal: true
  name: LicenseName
  nameWithType: OpenApiOptions.LicenseName
  fullName: CoreWCF.OpenApi.OpenApiOptions.LicenseName
- uid: CoreWCF.OpenApi.OpenApiOptions.LiceneUrl*
  commentId: Overload:CoreWCF.OpenApi.OpenApiOptions.LiceneUrl
  isExternal: true
  name: LiceneUrl
  nameWithType: OpenApiOptions.LiceneUrl
  fullName: CoreWCF.OpenApi.OpenApiOptions.LiceneUrl
- uid: CoreWCF.OpenApi.OpenApiOptions.ExternalDocumentDescription*
  commentId: Overload:CoreWCF.OpenApi.OpenApiOptions.ExternalDocumentDescription
  isExternal: true
  name: ExternalDocumentDescription
  nameWithType: OpenApiOptions.ExternalDocumentDescription
  fullName: CoreWCF.OpenApi.OpenApiOptions.ExternalDocumentDescription
- uid: CoreWCF.OpenApi.OpenApiOptions.ExternalDocumentUrl*
  commentId: Overload:CoreWCF.OpenApi.OpenApiOptions.ExternalDocumentUrl
  isExternal: true
  name: ExternalDocumentUrl
  nameWithType: OpenApiOptions.ExternalDocumentUrl
  fullName: CoreWCF.OpenApi.OpenApiOptions.ExternalDocumentUrl
- uid: CoreWCF.OpenApi.OpenApiOptions.TagsToHide*
  commentId: Overload:CoreWCF.OpenApi.OpenApiOptions.TagsToHide
  isExternal: true
  name: TagsToHide
  nameWithType: OpenApiOptions.TagsToHide
  fullName: CoreWCF.OpenApi.OpenApiOptions.TagsToHide
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: '!:System.Collections.Generic.IEnumerable{System.String}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.OpenApi.OpenApiOptions.TagsSorter*
  commentId: Overload:CoreWCF.OpenApi.OpenApiOptions.TagsSorter
  isExternal: true
  name: TagsSorter
  nameWithType: OpenApiOptions.TagsSorter
  fullName: CoreWCF.OpenApi.OpenApiOptions.TagsSorter
- uid: System.Collections.Generic.IComparer{Microsoft.OpenApi.Models.OpenApiTag}
  commentId: '!:System.Collections.Generic.IComparer{Microsoft.OpenApi.Models.OpenApiTag}'
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<OpenApiTag>
  nameWithType: IComparer<OpenApiTag>
  fullName: System.Collections.Generic.IComparer<Microsoft.OpenApi.Models.OpenApiTag>
  nameWithType.vb: IComparer(Of OpenApiTag)
  fullName.vb: System.Collections.Generic.IComparer(Of Microsoft.OpenApi.Models.OpenApiTag)
  name.vb: IComparer(Of OpenApiTag)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.OpenApi.Models.OpenApiTag
    name: OpenApiTag
    nameWithType: OpenApiTag
    fullName: Microsoft.OpenApi.Models.OpenApiTag
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.OpenApi.Models.OpenApiTag
    name: OpenApiTag
    nameWithType: OpenApiTag
    fullName: Microsoft.OpenApi.Models.OpenApiTag
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IComparer`1
  commentId: '!:System.Collections.Generic.IComparer`1'
  isExternal: true
  name: IComparer<>
  nameWithType: IComparer<>
  fullName: System.Collections.Generic.IComparer<>
  nameWithType.vb: IComparer(Of )
  fullName.vb: System.Collections.Generic.IComparer(Of )
  name.vb: IComparer(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
